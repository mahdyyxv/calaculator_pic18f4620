

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Aug 13 22:08:43 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    80   000000                     
    81                           ; Generated 23/03/2023 GMT
    82                           ; 
    83                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution. Publication is not required when
    97                           ;        this file is used in an embedded application.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F4620 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115   000000                     
   116                           	psect	idataBANK0
   117   005974                     __pidataBANK0:
   118                           	callstack 0
   119                           
   120                           ;initializer for _lat_registers
   121   005974  89                 	db	137
   122   005975  0F                 	db	15
   123   005976  8A                 	db	138
   124   005977  0F                 	db	15
   125   005978  8B                 	db	139
   126   005979  0F                 	db	15
   127   00597A  8C                 	db	140
   128   00597B  0F                 	db	15
   129   00597C  8D                 	db	141
   130   00597D  0F                 	db	15
   131                           
   132                           ;initializer for _tris_registers
   133   00597E  92                 	db	146
   134   00597F  0F                 	db	15
   135   005980  93                 	db	147
   136   005981  0F                 	db	15
   137   005982  94                 	db	148
   138   005983  0F                 	db	15
   139   005984  95                 	db	149
   140   005985  0F                 	db	15
   141   005986  96                 	db	150
   142   005987  0F                 	db	15
   143                           
   144                           ;initializer for _operator
   145   005988  20                 	db	32
   146                           
   147                           ;initializer for _lcd_2
   148   005989  13                 	db	19
   149   00598A  1B                 	db	27
   150   00598B  23                 	db	35
   151   00598C  2B                 	db	43
   152   00598D  33                 	db	51
   153   00598E  3B                 	db	59
   154                           
   155                           	psect	idataBANK1
   156   00598F                     __pidataBANK1:
   157                           	callstack 0
   158                           
   159                           ;initializer for _port_registers
   160   00598F  80                 	db	128
   161   005990  0F                 	db	15
   162   005991  81                 	db	129
   163   005992  0F                 	db	15
   164   005993  82                 	db	130
   165   005994  0F                 	db	15
   166   005995  83                 	db	131
   167   005996  0F                 	db	15
   168   005997  84                 	db	132
   169   005998  0F                 	db	15
   170                           
   171                           ;initializer for _smile
   172   005999  00                 	db	0
   173   00599A  00                 	db	0
   174   00599B  0A                 	db	10
   175   00599C  00                 	db	0
   176   00599D  11                 	db	17
   177   00599E  11                 	db	17
   178   00599F  0E                 	db	14
   179   0059A0  00                 	db	0
   180                           
   181                           ;initializer for _keypad
   182   0059A1  02                 	db	2
   183   0059A2  0A                 	db	10
   184   0059A3  12                 	db	18
   185   0059A4  1A                 	db	26
   186   0059A5  62                 	db	98
   187   0059A6  6A                 	db	106
   188   0059A7  72                 	db	114
   189   0059A8  7A                 	db	122
   190                           
   191                           	psect	smallconst
   192   001000                     __psmallconst:
   193                           	callstack 0
   194   001000  00                 	db	0
   195   001001                     _keypad_elements:
   196                           	callstack 0
   197   001001  37                 	db	55
   198   001002  38                 	db	56
   199   001003  39                 	db	57
   200   001004  2F                 	db	47
   201   001005  34                 	db	52
   202   001006  35                 	db	53
   203   001007  36                 	db	54
   204   001008  2A                 	db	42
   205   001009  31                 	db	49
   206   00100A  32                 	db	50
   207   00100B  33                 	db	51
   208   00100C  2D                 	db	45
   209   00100D  23                 	db	35
   210   00100E  30                 	db	48
   211   00100F  3D                 	db	61
   212   001010  2B                 	db	43
   213   001011                     __end_of_keypad_elements:
   214                           	callstack 0
   215   000000                     _PORTE	set	3972
   216   000000                     _PORTD	set	3971
   217   000000                     _PORTC	set	3970
   218   000000                     _PORTB	set	3969
   219   000000                     _PORTA	set	3968
   220   000000                     _LATA	set	3977
   221   000000                     _TRISA	set	3986
   222   000000                     _TRISE	set	3990
   223   000000                     _TRISD	set	3989
   224   000000                     _TRISC	set	3988
   225   000000                     _TRISB	set	3987
   226   000000                     _LATE	set	3981
   227   000000                     _LATD	set	3980
   228   000000                     _LATC	set	3979
   229   000000                     _LATB	set	3978
   230   001011                     STR_6:
   231   001011  43                 	db	67	;'C'
   232   001012  61                 	db	97	;'a'
   233   001013  6E                 	db	110	;'n'
   234   001014  27                 	db	39
   235   001015  74                 	db	116	;'t'
   236   001016  20                 	db	32
   237   001017  64                 	db	100	;'d'
   238   001018  6F                 	db	111	;'o'
   239   001019  20                 	db	32
   240   00101A  6F                 	db	111	;'o'
   241   00101B  70                 	db	112	;'p'
   242   00101C  65                 	db	101	;'e'
   243   00101D  72                 	db	114	;'r'
   244   00101E  61                 	db	97	;'a'
   245   00101F  74                 	db	116	;'t'
   246   001020  69                 	db	105	;'i'
   247   001021  6F                 	db	111	;'o'
   248   001022  6E                 	db	110	;'n'
   249   001023  00                 	db	0
   250   001024                     STR_4:
   251   001024  57                 	db	87	;'W'
   252   001025  65                 	db	101	;'e'
   253   001026  6C                 	db	108	;'l'
   254   001027  63                 	db	99	;'c'
   255   001028  6F                 	db	111	;'o'
   256   001029  6D                 	db	109	;'m'
   257   00102A  65                 	db	101	;'e'
   258   00102B  20                 	db	32
   259   00102C  54                 	db	84	;'T'
   260   00102D  6F                 	db	111	;'o'
   261   00102E  20                 	db	32
   262   00102F  4D                 	db	77	;'M'
   263   001030  79                 	db	121	;'y'
   264   001031  00                 	db	0
   265   001032                     STR_5:
   266   001032  43                 	db	67	;'C'
   267   001033  61                 	db	97	;'a'
   268   001034  6C                 	db	108	;'l'
   269   001035  63                 	db	99	;'c'
   270   001036  75                 	db	117	;'u'
   271   001037  6C                 	db	108	;'l'
   272   001038  61                 	db	97	;'a'
   273   001039  74                 	db	116	;'t'
   274   00103A  6F                 	db	111	;'o'
   275   00103B  72                 	db	114	;'r'
   276   00103C  00                 	db	0
   277   00103D                     STR_8:
   278   00103D  25                 	db	37
   279   00103E  2E                 	db	46
   280   00103F  33                 	db	51	;'3'
   281   001040  66                 	db	102	;'f'
   282   001041  00                 	db	0
   283   001042                     STR_10:
   284   001042  69                 	db	105	;'i'
   285   001043  6E                 	db	110	;'n'
   286   001044  66                 	db	102	;'f'
   287   001045  00                 	db	0
   288   001046                     STR_13:
   289   001046  6E                 	db	110	;'n'
   290   001047  61                 	db	97	;'a'
   291   001048  6E                 	db	110	;'n'
   292   001049  00                 	db	0
   293   00104A                     STR_9:
   294   00104A  25                 	db	37
   295   00104B  6C                 	db	108	;'l'
   296   00104C  64                 	db	100	;'d'
   297   00104D  00                 	db	0
   298   00104E                     STR_1:
   299   00104E  25                 	db	37
   300   00104F  6C                 	db	108	;'l'
   301   001050  75                 	db	117	;'u'
   302   001051  00                 	db	0
   303   001052  00                 	db	0	; dummy byte at the end
   304   000000                     
   305                           ; #config settings
   306                           
   307                           	psect	cinit
   308   0053C0                     __pcinit:
   309                           	callstack 0
   310   0053C0                     start_initialization:
   311                           	callstack 0
   312   0053C0                     __initialization:
   313                           	callstack 0
   314                           
   315                           ; Initialize objects allocated to BANK1 (26 bytes)
   316                           ; load TBLPTR registers with __pidataBANK1
   317   0053C0  0E8F               	movlw	low __pidataBANK1
   318   0053C2  6EF6               	movwf	tblptrl,c
   319   0053C4  0E59               	movlw	high __pidataBANK1
   320   0053C6  6EF7               	movwf	tblptrh,c
   321   0053C8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   322   0053CA  6EF8               	movwf	tblptru,c
   323   0053CC  EE01  F0C8         	lfsr	0,__pdataBANK1
   324   0053D0  EE10 F01A          	lfsr	1,26
   325   0053D4                     copy_data0:
   326   0053D4  0009               	tblrd		*+
   327   0053D6  CFF5 FFEE          	movff	tablat,postinc0
   328   0053DA  50E5               	movf	postdec1,w,c
   329   0053DC  50E1               	movf	fsr1l,w,c
   330   0053DE  E1FA               	bnz	copy_data0
   331                           
   332                           ; Initialize objects allocated to BANK0 (27 bytes)
   333                           ; load TBLPTR registers with __pidataBANK0
   334   0053E0  0E74               	movlw	low __pidataBANK0
   335   0053E2  6EF6               	movwf	tblptrl,c
   336   0053E4  0E59               	movlw	high __pidataBANK0
   337   0053E6  6EF7               	movwf	tblptrh,c
   338   0053E8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   339   0053EA  6EF8               	movwf	tblptru,c
   340   0053EC  EE00  F0E0         	lfsr	0,__pdataBANK0
   341   0053F0  EE10 F01B          	lfsr	1,27
   342   0053F4                     copy_data1:
   343   0053F4  0009               	tblrd		*+
   344   0053F6  CFF5 FFEE          	movff	tablat,postinc0
   345   0053FA  50E5               	movf	postdec1,w,c
   346   0053FC  50E1               	movf	fsr1l,w,c
   347   0053FE  E1FA               	bnz	copy_data1
   348                           
   349                           ; Clear objects allocated to BANK1 (200 bytes)
   350   005400  EE01  F000         	lfsr	0,__pbssBANK1
   351   005404  0EC8               	movlw	200
   352   005406                     clear_0:
   353   005406  6AEE               	clrf	postinc0,c
   354   005408  06E8               	decf	wreg,f,c
   355   00540A  E1FD               	bnz	clear_0
   356                           
   357                           ; Clear objects allocated to BANK0 (53 bytes)
   358   00540C  EE00  F080         	lfsr	0,__pbssBANK0
   359   005410  0E35               	movlw	53
   360   005412                     clear_1:
   361   005412  6AEE               	clrf	postinc0,c
   362   005414  06E8               	decf	wreg,f,c
   363   005416  E1FD               	bnz	clear_1
   364                           
   365                           ; Clear objects allocated to COMRAM (3 bytes)
   366   005418  6A7F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   367   00541A  6A7E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   368   00541C  6A7D               	clrf	__pbssCOMRAM& (0+255),c
   369   00541E                     end_of_initialization:
   370                           	callstack 0
   371   00541E                     __end_of__initialization:
   372                           	callstack 0
   373   00541E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   374   005420  6EF8               	movwf	tblptru,c
   375   005422  0100               	movlb	0
   376   005424  EFC5  F00F         	goto	_main	;jump to C main() function
   377                           
   378                           	psect	bssCOMRAM
   379   00007D                     __pbssCOMRAM:
   380                           	callstack 0
   381   00007D                     _prec:
   382                           	callstack 0
   383   00007D                     	ds	2
   384   00007F                     _keypad_value:
   385                           	callstack 0
   386   00007F                     	ds	1
   387                           
   388                           	psect	bssBANK0
   389   000080                     __pbssBANK0:
   390                           	callstack 0
   391   000080                     floorf@F526:
   392                           	callstack 0
   393   000080                     	ds	4
   394   000084                     ___fpclassifyf@F465:
   395                           	callstack 0
   396   000084                     	ds	4
   397   000088                     _float_res:
   398                           	callstack 0
   399   000088                     	ds	4
   400   00008C                     _result:
   401                           	callstack 0
   402   00008C                     	ds	4
   403   000090                     _number2:
   404                           	callstack 0
   405   000090                     	ds	4
   406   000094                     _number1:
   407                           	callstack 0
   408   000094                     	ds	4
   409   000098                     _errno:
   410                           	callstack 0
   411   000098                     	ds	2
   412   00009A                     _width:
   413                           	callstack 0
   414   00009A                     	ds	2
   415   00009C                     _flags:
   416                           	callstack 0
   417   00009C                     	ds	1
   418   00009D                     _flag:
   419                           	callstack 0
   420   00009D                     	ds	1
   421   00009E                     _counter2:
   422                           	callstack 0
   423   00009E                     	ds	1
   424   00009F                     _counter:
   425                           	callstack 0
   426   00009F                     	ds	1
   427   0000A0                     _ret:
   428                           	callstack 0
   429   0000A0                     	ds	1
   430   0000A1                     relay_off@F3057:
   431                           	callstack 0
   432   0000A1                     	ds	1
   433   0000A2                     relay_on@F3052:
   434                           	callstack 0
   435   0000A2                     	ds	1
   436   0000A3                     relay_initialization@F3047:
   437                           	callstack 0
   438   0000A3                     	ds	1
   439   0000A4                     led_toggle@F3063:
   440                           	callstack 0
   441   0000A4                     	ds	1
   442   0000A5                     led_off@F3058:
   443                           	callstack 0
   444   0000A5                     	ds	1
   445   0000A6                     led_on@F3053:
   446                           	callstack 0
   447   0000A6                     	ds	1
   448   0000A7                     led_initialization@F3048:
   449                           	callstack 0
   450   0000A7                     	ds	1
   451   0000A8                     _number_str:
   452                           	callstack 0
   453   0000A8                     	ds	11
   454   0000B3                     _ptr:
   455                           	callstack 0
   456   0000B3                     	ds	2
   457                           
   458                           	psect	dataBANK0
   459   0000E0                     __pdataBANK0:
   460                           	callstack 0
   461   0000E0                     _lat_registers:
   462                           	callstack 0
   463   0000E0                     	ds	10
   464   0000EA                     _tris_registers:
   465                           	callstack 0
   466   0000EA                     	ds	10
   467   0000F4                     _operator:
   468                           	callstack 0
   469   0000F4                     	ds	1
   470   0000F5                     _lcd_2:
   471                           	callstack 0
   472   0000F5                     	ds	6
   473                           
   474                           	psect	bssBANK1
   475   000100                     __pbssBANK1:
   476                           	callstack 0
   477   000100                     _string:
   478                           	callstack 0
   479   000100                     	ds	100
   480   000164                     _dbuf:
   481                           	callstack 0
   482   000164                     	ds	80
   483   0001B4                     _result_str:
   484                           	callstack 0
   485   0001B4                     	ds	20
   486                           
   487                           	psect	dataBANK1
   488   0001C8                     __pdataBANK1:
   489                           	callstack 0
   490   0001C8                     _port_registers:
   491                           	callstack 0
   492   0001C8                     	ds	10
   493   0001D2                     _smile:
   494                           	callstack 0
   495   0001D2                     	ds	8
   496   0001DA                     _keypad:
   497                           	callstack 0
   498   0001DA                     	ds	8
   499                           
   500                           	psect	cstackBANK0
   501   0000B5                     __pcstackBANK0:
   502                           	callstack 0
   503   0000B5                     vfpfcnvrt@convarg:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x0
   507   0000B5                     	ds	4
   508   0000B9                     vfpfcnvrt@c:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0x4
   512   0000B9                     	ds	1
   513   0000BA                     vfpfcnvrt@cp:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x5
   517   0000BA                     	ds	2
   518   0000BC                     ?_vfprintf:
   519                           	callstack 0
   520   0000BC                     vfprintf@fp:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x7
   524   0000BC                     	ds	2
   525   0000BE                     vfprintf@fmt:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x9
   529   0000BE                     	ds	2
   530   0000C0                     vfprintf@ap:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0xB
   534   0000C0                     	ds	2
   535   0000C2                     ?_sprintf:
   536                           	callstack 0
   537   0000C2                     sprintf@s:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0xD
   541   0000C2                     	ds	2
   542   0000C4                     sprintf@fmt:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0xF
   546   0000C4                     	ds	6
   547   0000CA                     sprintf@ap:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x15
   551   0000CA                     	ds	2
   552   0000CC                     sprintf@f:
   553                           	callstack 0
   554                           
   555                           ; 12 bytes @ 0x17
   556   0000CC                     	ds	12
   557   0000D8                     ??_main:
   558                           
   559                           ; 1 bytes @ 0x23
   560   0000D8                     	ds	8
   561                           
   562                           	psect	cstackCOMRAM
   563   000001                     __pcstackCOMRAM:
   564                           	callstack 0
   565   000001                     ?_strcmp:
   566                           	callstack 0
   567   000001                     ?___fpclassifyf:
   568                           	callstack 0
   569   000001                     ?_isspace:
   570                           	callstack 0
   571   000001                     ?_isalpha:
   572                           	callstack 0
   573   000001                     ?_isdigit:
   574                           	callstack 0
   575   000001                     ?_islower:
   576                           	callstack 0
   577   000001                     ?___wmul:
   578                           	callstack 0
   579   000001                     ?___fladd:
   580                           	callstack 0
   581   000001                     ?___flmul:
   582                           	callstack 0
   583   000001                     ?_labs:
   584                           	callstack 0
   585   000001                     ?___lmul:
   586                           	callstack 0
   587   000001                     ?___lldiv:
   588                           	callstack 0
   589   000001                     ?___aldiv:
   590                           	callstack 0
   591   000001                     ?___almod:
   592                           	callstack 0
   593   000001                     ?___flneg:
   594                           	callstack 0
   595   000001                     ?___fltol:
   596                           	callstack 0
   597   000001                     ?___llmod:
   598                           	callstack 0
   599   000001                     ?___xxtofl:
   600                           	callstack 0
   601   000001                     ?___omul:
   602                           	callstack 0
   603   000001                     gpio_pin_write_logic@_pin_config:
   604                           	callstack 0
   605   000001                     gpio_pin_read_logic@_pin_config:
   606                           	callstack 0
   607   000001                     ___wmul@multiplier:
   608                           	callstack 0
   609   000001                     memset@dest:
   610                           	callstack 0
   611   000001                     memcpy@d1:
   612                           	callstack 0
   613   000001                     fputc@c:
   614                           	callstack 0
   615   000001                     strcmp@l:
   616                           	callstack 0
   617   000001                     strcpy@dest:
   618                           	callstack 0
   619   000001                     isalpha@c:
   620                           	callstack 0
   621   000001                     isdigit@c:
   622                           	callstack 0
   623   000001                     isspace@c:
   624                           	callstack 0
   625   000001                     islower@c:
   626                           	callstack 0
   627   000001                     ___lmul@multiplier:
   628                           	callstack 0
   629   000001                     ___lldiv@dividend:
   630                           	callstack 0
   631   000001                     ___aldiv@dividend:
   632                           	callstack 0
   633   000001                     ___almod@dividend:
   634                           	callstack 0
   635   000001                     ___fleq@ff1:
   636                           	callstack 0
   637   000001                     ___flneg@f1:
   638                           	callstack 0
   639   000001                     ___fltol@f1:
   640                           	callstack 0
   641   000001                     ___llmod@dividend:
   642                           	callstack 0
   643   000001                     ___fladd@b:
   644                           	callstack 0
   645   000001                     ___flmul@b:
   646                           	callstack 0
   647   000001                     ___xxtofl@val:
   648                           	callstack 0
   649   000001                     ___fpclassifyf@x:
   650                           	callstack 0
   651   000001                     labs@a:
   652                           	callstack 0
   653   000001                     ___omul@multiplier:
   654                           	callstack 0
   655                           
   656                           ; 8 bytes @ 0x0
   657   000001                     	ds	2
   658   000003                     ??_isspace:
   659   000003                     ??_isalpha:
   660   000003                     ??_isdigit:
   661   000003                     ??_islower:
   662   000003                     gpio_pin_write_logic@_logic:
   663                           	callstack 0
   664   000003                     gpio_pin_read_logic@_logic:
   665                           	callstack 0
   666   000003                     ___wmul@multiplicand:
   667                           	callstack 0
   668   000003                     memset@c:
   669                           	callstack 0
   670   000003                     memcpy@s1:
   671                           	callstack 0
   672   000003                     fputc@fp:
   673                           	callstack 0
   674   000003                     strcmp@r:
   675                           	callstack 0
   676   000003                     strcpy@src:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x2
   680   000003                     	ds	1
   681   000004                     ??_gpio_pin_write_logic:
   682                           
   683                           ; 1 bytes @ 0x3
   684   000004                     	ds	1
   685   000005                     ??_gpio_pin_read_logic:
   686   000005                     ??_strcmp:
   687   000005                     ??_fputc:
   688   000005                     ??___fpclassifyf:
   689   000005                     ??_labs:
   690   000005                     ??___fltol:
   691   000005                     ??___xxtofl:
   692   000005                     ?_toupper:
   693                           	callstack 0
   694   000005                     _isspace$1710:
   695                           	callstack 0
   696   000005                     ___wmul@product:
   697                           	callstack 0
   698   000005                     memset@n:
   699                           	callstack 0
   700   000005                     memcpy@n:
   701                           	callstack 0
   702   000005                     strcpy@s:
   703                           	callstack 0
   704   000005                     toupper@c:
   705                           	callstack 0
   706   000005                     ___lmul@multiplicand:
   707                           	callstack 0
   708   000005                     ___lldiv@divisor:
   709                           	callstack 0
   710   000005                     ___aldiv@divisor:
   711                           	callstack 0
   712   000005                     ___almod@divisor:
   713                           	callstack 0
   714   000005                     ___fleq@ff2:
   715                           	callstack 0
   716   000005                     ___llmod@divisor:
   717                           	callstack 0
   718   000005                     ___fladd@a:
   719                           	callstack 0
   720   000005                     ___flmul@a:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0x4
   724   000005                     	ds	2
   725   000007                     ??_memset:
   726   000007                     ??_toupper:
   727   000007                     ?_isalnum:
   728                           	callstack 0
   729   000007                     ?_read_prec_or_width:
   730                           	callstack 0
   731   000007                     read_prec_or_width@fmt:
   732                           	callstack 0
   733   000007                     memcpy@d:
   734                           	callstack 0
   735   000007                     strcpy@d:
   736                           	callstack 0
   737   000007                     isalnum@c:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x6
   741   000007                     	ds	2
   742   000009                     ??___fladd:
   743   000009                     ??___flmul:
   744   000009                     ??_isalnum:
   745   000009                     ??___fleq:
   746   000009                     ___aldiv@counter:
   747                           	callstack 0
   748   000009                     ___almod@counter:
   749                           	callstack 0
   750   000009                     ___fltol@sign1:
   751                           	callstack 0
   752   000009                     ___llmod@counter:
   753                           	callstack 0
   754   000009                     ___xxtofl@sign:
   755                           	callstack 0
   756   000009                     memset@k:
   757                           	callstack 0
   758   000009                     read_prec_or_width@ap:
   759                           	callstack 0
   760   000009                     ___fpclassifyf@e:
   761                           	callstack 0
   762   000009                     memcpy@s:
   763                           	callstack 0
   764   000009                     ___lmul@product:
   765                           	callstack 0
   766   000009                     ___lldiv@quotient:
   767                           	callstack 0
   768   000009                     ___omul@multiplicand:
   769                           	callstack 0
   770                           
   771                           ; 8 bytes @ 0x8
   772   000009                     	ds	1
   773   00000A                     gpio_pin_write_logic@ret:
   774                           	callstack 0
   775   00000A                     ___aldiv@sign:
   776                           	callstack 0
   777   00000A                     ___almod@sign:
   778                           	callstack 0
   779   00000A                     ___fltol@exp1:
   780                           	callstack 0
   781   00000A                     ___xxtofl@exp:
   782                           	callstack 0
   783   00000A                     fputs@s:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x9
   787   00000A                     	ds	1
   788   00000B                     ??_read_prec_or_width:
   789   00000B                     ?_abs:
   790                           	callstack 0
   791   00000B                     memcpy@tmp:
   792                           	callstack 0
   793   00000B                     keypad_get_value@keypad_config:
   794                           	callstack 0
   795   00000B                     lcd_send_4bit@_lcd_config:
   796                           	callstack 0
   797   00000B                     lcd_4bit_send_enable@_lcd_config:
   798                           	callstack 0
   799   00000B                     gpio_pin_direction_init@_pin_config:
   800                           	callstack 0
   801   00000B                     memset@s:
   802                           	callstack 0
   803   00000B                     abs@a:
   804                           	callstack 0
   805   00000B                     ___aldiv@quotient:
   806                           	callstack 0
   807   00000B                     ___xxtofl@arg:
   808                           	callstack 0
   809   00000B                     ___fpclassifyf@u:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0xA
   813   00000B                     	ds	1
   814   00000C                     fputs@fp:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0xB
   818   00000C                     	ds	1
   819   00000D                     ??_gpio_pin_direction_init:
   820   00000D                     ??_abs:
   821   00000D                     lcd_send_4bit@_data_cmd:
   822                           	callstack 0
   823   00000D                     lcd_4bit_send_enable@ret:
   824                           	callstack 0
   825   00000D                     ___lldiv@counter:
   826                           	callstack 0
   827   00000D                     ___fladd@signs:
   828                           	callstack 0
   829   00000D                     ___flmul@sign:
   830                           	callstack 0
   831   00000D                     read_prec_or_width@c:
   832                           	callstack 0
   833   00000D                     _isalnum$1682:
   834                           	callstack 0
   835   00000D                     keypad_get_value@value:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0xC
   839   00000D                     	ds	1
   840   00000E                     lcd_send_4bit@ret:
   841                           	callstack 0
   842   00000E                     ___fladd@aexp:
   843                           	callstack 0
   844   00000E                     fputs@c:
   845                           	callstack 0
   846   00000E                     read_prec_or_width@n:
   847                           	callstack 0
   848   00000E                     ___flmul@grs:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0xD
   852   00000E                     	ds	1
   853   00000F                     ??_keypad_get_value:
   854   00000F                     ?___fldiv:
   855                           	callstack 0
   856   00000F                     ___fladd@bexp:
   857                           	callstack 0
   858   00000F                     lcd_4bit_send_command@_lcd_config:
   859                           	callstack 0
   860   00000F                     lcd_4bit_send_char_data@_lcd_config:
   861                           	callstack 0
   862   00000F                     fputs@i:
   863                           	callstack 0
   864   00000F                     ___fldiv@b:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0xE
   868   00000F                     	ds	1
   869   000010                     ___fladd@grs:
   870                           	callstack 0
   871                           
   872                           ; 1 bytes @ 0xF
   873   000010                     	ds	1
   874   000011                     keypad_get_value@column_counter:
   875                           	callstack 0
   876   000011                     lcd_4bit_send_command@cmd:
   877                           	callstack 0
   878   000011                     lcd_4bit_send_char_data@data:
   879                           	callstack 0
   880   000011                     pad@fp:
   881                           	callstack 0
   882   000011                     ___omul@product:
   883                           	callstack 0
   884                           
   885                           ; 8 bytes @ 0x10
   886   000011                     	ds	1
   887   000012                     keypad_get_value@column_value:
   888                           	callstack 0
   889   000012                     lcd_4bit_send_command@ret:
   890                           	callstack 0
   891   000012                     lcd_4bit_send_char_data@ret:
   892                           	callstack 0
   893   000012                     ___flmul@aexp:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0x11
   897   000012                     	ds	1
   898   000013                     keypad_get_value@row_counter:
   899                           	callstack 0
   900   000013                     gpio_pin_direction_init@ret:
   901                           	callstack 0
   902   000013                     ___flmul@bexp:
   903                           	callstack 0
   904   000013                     lcd_4bit_send_string@_lcd_config:
   905                           	callstack 0
   906   000013                     lcd_4bit_set_cursor@_lcd_config:
   907                           	callstack 0
   908   000013                     pad@buf:
   909                           	callstack 0
   910   000013                     ___fldiv@a:
   911                           	callstack 0
   912                           
   913                           ; 4 bytes @ 0x12
   914   000013                     	ds	1
   915   000014                     keypad_initialization@keypad_config:
   916                           	callstack 0
   917   000014                     lcd_4bit_initialize@_lcd_config:
   918                           	callstack 0
   919   000014                     ___flmul@prod:
   920                           	callstack 0
   921                           
   922                           ; 4 bytes @ 0x13
   923   000014                     	ds	1
   924   000015                     lcd_4bit_set_cursor@row:
   925                           	callstack 0
   926   000015                     lcd_4bit_send_string@str:
   927                           	callstack 0
   928   000015                     pad@p:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x14
   932   000015                     	ds	1
   933   000016                     ??_keypad_initialization:
   934   000016                     ??_lcd_4bit_initialize:
   935   000016                     lcd_4bit_set_cursor@column:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x15
   939   000016                     	ds	1
   940   000017                     ??_lcd_4bit_set_cursor:
   941   000017                     ??___fldiv:
   942   000017                     ??_pad:
   943   000017                     lcd_4bit_send_string@ret:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x16
   947   000017                     	ds	1
   948   000018                     keypad_initialization@flg:
   949                           	callstack 0
   950   000018                     lcd_4bit_initialize@ret:
   951                           	callstack 0
   952   000018                     ___flmul@temp:
   953                           	callstack 0
   954   000018                     pad@i:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x17
   958   000018                     	ds	1
   959   000019                     ?___strtoxll:
   960                           	callstack 0
   961   000019                     keypad_initialization@cnt:
   962                           	callstack 0
   963   000019                     lcd_4bit_initialize@l_data_pins_cnt:
   964                           	callstack 0
   965   000019                     lcd_4bit_set_cursor@ret:
   966                           	callstack 0
   967   000019                     ___strtoxll@s:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x18
   971   000019                     	ds	1
   972   00001A                     ?___flsub:
   973                           	callstack 0
   974   00001A                     lcd_4bit_send_char_data_pos@_lcd_config:
   975                           	callstack 0
   976   00001A                     lcd_4bit_send_string_pos@_lcd_config:
   977                           	callstack 0
   978   00001A                     pad@w:
   979                           	callstack 0
   980   00001A                     ___flge@ff1:
   981                           	callstack 0
   982   00001A                     ___flsub@b:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x19
   986   00001A                     	ds	1
   987   00001B                     ___strtoxll@endptr:
   988                           	callstack 0
   989   00001B                     ___fldiv@rem:
   990                           	callstack 0
   991                           
   992                           ; 4 bytes @ 0x1A
   993   00001B                     	ds	1
   994   00001C                     lcd_4bit_send_char_data_pos@row:
   995                           	callstack 0
   996   00001C                     lcd_4bit_send_string_pos@row:
   997                           	callstack 0
   998   00001C                     dtoa@fp:
   999                           	callstack 0
  1000   00001C                     utoa@fp:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x1B
  1004   00001C                     	ds	1
  1005   00001D                     lcd_4bit_send_char_data_pos@col:
  1006                           	callstack 0
  1007   00001D                     lcd_4bit_send_string_pos@col:
  1008                           	callstack 0
  1009   00001D                     ___strtoxll@base:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x1C
  1013   00001D                     	ds	1
  1014   00001E                     lcd_4bit_send_char_data_pos@data:
  1015                           	callstack 0
  1016   00001E                     lcd_4bit_send_string_pos@str:
  1017                           	callstack 0
  1018   00001E                     ___flge@ff2:
  1019                           	callstack 0
  1020   00001E                     ___flsub@a:
  1021                           	callstack 0
  1022   00001E                     dtoa@d:
  1023                           	callstack 0
  1024   00001E                     utoa@d:
  1025                           	callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x1D
  1028   00001E                     	ds	1
  1029   00001F                     lcd_4bit_send_char_data_pos@ret:
  1030                           	callstack 0
  1031   00001F                     ___fldiv@sign:
  1032                           	callstack 0
  1033   00001F                     ___strtoxll@is_signed:
  1034                           	callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x1E
  1037   00001F                     	ds	1
  1038   000020                     lcd_4bit_send_string_pos@ret:
  1039                           	callstack 0
  1040   000020                     lcd_4bit_send_custom_char@_lcd_config:
  1041                           	callstack 0
  1042   000020                     ___fldiv@new_exp:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x1F
  1046   000020                     	ds	1
  1047   000021                     ??___strtoxll:
  1048                           
  1049                           ; 1 bytes @ 0x20
  1050   000021                     	ds	1
  1051   000022                     ??___flge:
  1052   000022                     lcd_4bit_send_custom_char@row:
  1053                           	callstack 0
  1054   000022                     _dtoa$1458:
  1055                           	callstack 0
  1056   000022                     utoa@w:
  1057                           	callstack 0
  1058   000022                     ___fldiv@grs:
  1059                           	callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x21
  1062   000022                     	ds	1
  1063   000023                     lcd_4bit_send_custom_char@col:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x22
  1067   000023                     	ds	1
  1068   000024                     lcd_4bit_send_custom_char@_chr:
  1069                           	callstack 0
  1070   000024                     dtoa@p:
  1071                           	callstack 0
  1072   000024                     utoa@p:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x23
  1076   000024                     	ds	2
  1077   000026                     lcd_4bit_send_custom_char@mempos:
  1078                           	callstack 0
  1079   000026                     ___fldiv@bexp:
  1080                           	callstack 0
  1081   000026                     dtoa@w:
  1082                           	callstack 0
  1083   000026                     utoa@i:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x25
  1087   000026                     	ds	1
  1088   000027                     lcd_4bit_send_custom_char@ret:
  1089                           	callstack 0
  1090   000027                     ___fldiv@aexp:
  1091                           	callstack 0
  1092                           
  1093                           ; 1 bytes @ 0x26
  1094   000027                     	ds	1
  1095   000028                     ?_floorf:
  1096                           	callstack 0
  1097   000028                     lcd_4bit_send_custom_char@l_cnt:
  1098                           	callstack 0
  1099   000028                     dtoa@i:
  1100                           	callstack 0
  1101   000028                     floorf@x:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x27
  1105   000028                     	ds	1
  1106   000029                     ___strtoxll@prev_a:
  1107                           	callstack 0
  1108                           
  1109                           ; 8 bytes @ 0x28
  1110   000029                     	ds	1
  1111   00002A                     dtoa@s:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x29
  1115   00002A                     	ds	2
  1116   00002C                     ??_floorf:
  1117                           
  1118                           ; 1 bytes @ 0x2B
  1119   00002C                     	ds	5
  1120   000031                     ___strtoxll@conv_done:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0x30
  1124   000031                     	ds	1
  1125   000032                     floorf@m:
  1126                           	callstack 0
  1127   000032                     ___strtoxll@limit:
  1128                           	callstack 0
  1129                           
  1130                           ; 8 bytes @ 0x31
  1131   000032                     	ds	4
  1132   000036                     floorf@e:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x35
  1136   000036                     	ds	2
  1137   000038                     floorf@u:
  1138                           	callstack 0
  1139                           
  1140                           ; 4 bytes @ 0x37
  1141   000038                     	ds	2
  1142   00003A                     ___strtoxll@sign:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x39
  1146   00003A                     	ds	1
  1147   00003B                     ___strtoxll@skip:
  1148                           	callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x3A
  1151   00003B                     	ds	1
  1152   00003C                     efgtoa@fp:
  1153                           	callstack 0
  1154   00003C                     ___strtoxll@a:
  1155                           	callstack 0
  1156                           
  1157                           ; 8 bytes @ 0x3B
  1158   00003C                     	ds	2
  1159   00003E                     efgtoa@f:
  1160                           	callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x3D
  1163   00003E                     	ds	4
  1164   000042                     efgtoa@c:
  1165                           	callstack 0
  1166                           
  1167                           ; 1 bytes @ 0x41
  1168   000042                     	ds	1
  1169   000043                     ??_efgtoa:
  1170                           
  1171                           ; 1 bytes @ 0x42
  1172   000043                     	ds	1
  1173   000044                     ___strtoxll@cp:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x43
  1177   000044                     	ds	1
  1178   000045                     efgtoa@ne:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x44
  1182   000045                     	ds	1
  1183   000046                     ___strtoxll@c:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x45
  1187   000046                     	ds	1
  1188   000047                     ?_strtoll:
  1189                           	callstack 0
  1190   000047                     efgtoa@p:
  1191                           	callstack 0
  1192   000047                     strtoll@s:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x46
  1196   000047                     	ds	2
  1197   000049                     efgtoa@t:
  1198                           	callstack 0
  1199   000049                     strtoll@endptr:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x48
  1203   000049                     	ds	2
  1204   00004B                     _efgtoa$1489:
  1205                           	callstack 0
  1206   00004B                     strtoll@base:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x4A
  1210   00004B                     	ds	2
  1211   00004D                     efgtoa@pp:
  1212                           	callstack 0
  1213                           
  1214                           ; 1 bytes @ 0x4C
  1215   00004D                     	ds	1
  1216   00004E                     efgtoa@mode:
  1217                           	callstack 0
  1218                           
  1219                           ; 1 bytes @ 0x4D
  1220   00004E                     	ds	1
  1221   00004F                     efgtoa@nmode:
  1222                           	callstack 0
  1223                           
  1224                           ; 1 bytes @ 0x4E
  1225   00004F                     	ds	1
  1226   000050                     efgtoa@d:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x4F
  1230   000050                     	ds	2
  1231   000052                     efgtoa@m:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x51
  1235   000052                     	ds	2
  1236   000054                     efgtoa@e:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x53
  1240   000054                     	ds	2
  1241   000056                     efgtoa@w:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x55
  1245   000056                     	ds	2
  1246   000058                     efgtoa@ou:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x57
  1250   000058                     	ds	4
  1251   00005C                     efgtoa@i:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x5B
  1255   00005C                     	ds	2
  1256   00005E                     efgtoa@h:
  1257                           	callstack 0
  1258                           
  1259                           ; 4 bytes @ 0x5D
  1260   00005E                     	ds	4
  1261   000062                     efgtoa@l:
  1262                           	callstack 0
  1263                           
  1264                           ; 4 bytes @ 0x61
  1265   000062                     	ds	4
  1266   000066                     efgtoa@sign:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x65
  1270   000066                     	ds	1
  1271   000067                     efgtoa@n:
  1272                           	callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x66
  1275   000067                     	ds	2
  1276   000069                     efgtoa@g:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x68
  1280   000069                     	ds	4
  1281   00006D                     efgtoa@u:
  1282                           	callstack 0
  1283                           
  1284                           ; 4 bytes @ 0x6C
  1285   00006D                     	ds	4
  1286   000071                     vfpfcnvrt@fp:
  1287                           	callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x70
  1290   000071                     	ds	2
  1291   000073                     vfpfcnvrt@fmt:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x72
  1295   000073                     	ds	2
  1296   000075                     vfpfcnvrt@ap:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x74
  1300   000075                     	ds	2
  1301   000077                     ??_vfpfcnvrt:
  1302                           
  1303                           ; 1 bytes @ 0x76
  1304   000077                     	ds	4
  1305   00007B                     vfprintf@cfmt:
  1306                           	callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x7A
  1309   00007B                     	ds	2
  1310   00007D                     
  1311                           ; 1 bytes @ 0x7C
  1312 ;;
  1313 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1314 ;;
  1315 ;; *************** function _main *****************
  1316 ;; Defined at:
  1317 ;;		line 33 in file "application.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  2  589[None  ] int 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;Total ram usage:        8 bytes
  1336 ;; Hardware stack levels required when called: 8
  1337 ;; This function calls:
  1338 ;;		___fldiv
  1339 ;;		___lmul
  1340 ;;		___xxtofl
  1341 ;;		_application_init
  1342 ;;		_keypad_get_value
  1343 ;;		_lcd_4bit_send_command
  1344 ;;		_lcd_4bit_send_custom_char
  1345 ;;		_lcd_4bit_send_string_pos
  1346 ;;		_memset
  1347 ;;		_sprintf
  1348 ;;		_strcmp
  1349 ;;		_strcpy
  1350 ;;		_strtoll
  1351 ;; This function is called by:
  1352 ;;		Startup code after reset
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text0
  1357   001F8A                     __ptext0:
  1358                           	callstack 0
  1359   001F8A                     _main:
  1360                           	callstack 23
  1361   001F8A                     
  1362                           ;application.c: 34:     application_init();
  1363   001F8A  ECE2  F02C         	call	_application_init	;wreg free
  1364   001F8E                     
  1365                           ;application.c: 35:     memset(string , '\0', 100);
  1366   001F8E  0E00               	movlw	low _string
  1367   001F90  6E01               	movwf	memset@dest^0,c
  1368   001F92  0E01               	movlw	high _string
  1369   001F94  6E02               	movwf	(memset@dest+1)^0,c
  1370   001F96  0E00               	movlw	0
  1371   001F98  6E04               	movwf	(memset@c+1)^0,c
  1372   001F9A  0E00               	movlw	0
  1373   001F9C  6E03               	movwf	memset@c^0,c
  1374   001F9E  0E00               	movlw	0
  1375   001FA0  6E06               	movwf	(memset@n+1)^0,c
  1376   001FA2  0E64               	movlw	100
  1377   001FA4  6E05               	movwf	memset@n^0,c
  1378   001FA6  EC9E  F01F         	call	_memset	;wreg free
  1379   001FAA                     
  1380                           ;application.c: 36:     memset(number_str, '\0', 11);
  1381   001FAA  0EA8               	movlw	low _number_str
  1382   001FAC  6E01               	movwf	memset@dest^0,c
  1383   001FAE  0E00               	movlw	high _number_str
  1384   001FB0  6E02               	movwf	(memset@dest+1)^0,c
  1385   001FB2  0E00               	movlw	0
  1386   001FB4  6E04               	movwf	(memset@c+1)^0,c
  1387   001FB6  0E00               	movlw	0
  1388   001FB8  6E03               	movwf	memset@c^0,c
  1389   001FBA  0E00               	movlw	0
  1390   001FBC  6E06               	movwf	(memset@n+1)^0,c
  1391   001FBE  0E0B               	movlw	11
  1392   001FC0  6E05               	movwf	memset@n^0,c
  1393   001FC2  EC9E  F01F         	call	_memset	;wreg free
  1394   001FC6                     
  1395                           ;application.c: 37:     memset(result_str, '\0', 20);
  1396   001FC6  0EB4               	movlw	low _result_str
  1397   001FC8  6E01               	movwf	memset@dest^0,c
  1398   001FCA  0E01               	movlw	high _result_str
  1399   001FCC  6E02               	movwf	(memset@dest+1)^0,c
  1400   001FCE  0E00               	movlw	0
  1401   001FD0  6E04               	movwf	(memset@c+1)^0,c
  1402   001FD2  0E00               	movlw	0
  1403   001FD4  6E03               	movwf	memset@c^0,c
  1404   001FD6  0E00               	movlw	0
  1405   001FD8  6E06               	movwf	(memset@n+1)^0,c
  1406   001FDA  0E14               	movlw	20
  1407   001FDC  6E05               	movwf	memset@n^0,c
  1408   001FDE  EC9E  F01F         	call	_memset	;wreg free
  1409   001FE2                     
  1410                           ;application.c: 38:     ret = lcd_4bit_send_string_pos(&lcd_2, 1,4, "Welcome To My");
  1411   001FE2  0EF5               	movlw	low _lcd_2
  1412   001FE4  6E1A               	movwf	lcd_4bit_send_string_pos@_lcd_config^0,c
  1413   001FE6  0E00               	movlw	high _lcd_2
  1414   001FE8  6E1B               	movwf	(lcd_4bit_send_string_pos@_lcd_config+1)^0,c
  1415   001FEA  0E01               	movlw	1
  1416   001FEC  6E1C               	movwf	lcd_4bit_send_string_pos@row^0,c
  1417   001FEE  0E04               	movlw	4
  1418   001FF0  6E1D               	movwf	lcd_4bit_send_string_pos@col^0,c
  1419   001FF2  0E24               	movlw	low STR_4
  1420   001FF4  6E1E               	movwf	lcd_4bit_send_string_pos@str^0,c
  1421   001FF6  0E10               	movlw	high STR_4
  1422   001FF8  6E1F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1423   001FFA  EC77  F02A         	call	_lcd_4bit_send_string_pos	;wreg free
  1424   001FFE  0100               	movlb	0	; () banked
  1425   002000  6FA0               	movwf	_ret& (0+255),b
  1426   002002                     
  1427                           ; BSR set to: 0
  1428                           ;application.c: 39:     ret = lcd_4bit_send_string_pos(&lcd_2, 2,5, "Calculator");
  1429   002002  0EF5               	movlw	low _lcd_2
  1430   002004  6E1A               	movwf	lcd_4bit_send_string_pos@_lcd_config^0,c
  1431   002006  0E00               	movlw	high _lcd_2
  1432   002008  6E1B               	movwf	(lcd_4bit_send_string_pos@_lcd_config+1)^0,c
  1433   00200A  0E02               	movlw	2
  1434   00200C  6E1C               	movwf	lcd_4bit_send_string_pos@row^0,c
  1435   00200E  0E05               	movlw	5
  1436   002010  6E1D               	movwf	lcd_4bit_send_string_pos@col^0,c
  1437   002012  0E32               	movlw	low STR_5
  1438   002014  6E1E               	movwf	lcd_4bit_send_string_pos@str^0,c
  1439   002016  0E10               	movlw	high STR_5
  1440   002018  6E1F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1441   00201A  EC77  F02A         	call	_lcd_4bit_send_string_pos	;wreg free
  1442   00201E  0100               	movlb	0	; () banked
  1443   002020  6FA0               	movwf	_ret& (0+255),b
  1444   002022                     
  1445                           ; BSR set to: 0
  1446                           ;application.c: 40:     ret = lcd_4bit_send_custom_char(&lcd_2, 2,16, smile, 0);
  1447   002022  0EF5               	movlw	low _lcd_2
  1448   002024  6E20               	movwf	lcd_4bit_send_custom_char@_lcd_config^0,c
  1449   002026  0E00               	movlw	high _lcd_2
  1450   002028  6E21               	movwf	(lcd_4bit_send_custom_char@_lcd_config+1)^0,c
  1451   00202A  0E02               	movlw	2
  1452   00202C  6E22               	movwf	lcd_4bit_send_custom_char@row^0,c
  1453   00202E  0E10               	movlw	16
  1454   002030  6E23               	movwf	lcd_4bit_send_custom_char@col^0,c
  1455   002032  0ED2               	movlw	low _smile
  1456   002034  6E24               	movwf	lcd_4bit_send_custom_char@_chr^0,c
  1457   002036  0E01               	movlw	high _smile
  1458   002038  6E25               	movwf	(lcd_4bit_send_custom_char@_chr+1)^0,c
  1459   00203A  0E00               	movlw	0
  1460   00203C  6E26               	movwf	lcd_4bit_send_custom_char@mempos^0,c
  1461   00203E  ECBC  F028         	call	_lcd_4bit_send_custom_char	;wreg free
  1462   002042  0100               	movlb	0	; () banked
  1463   002044  6FA0               	movwf	_ret& (0+255),b
  1464   002046                     
  1465                           ; BSR set to: 0
  1466                           ;application.c: 41:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
  1467   002046  0E0B               	movlw	11
  1468   002048  0100               	movlb	0	; () banked
  1469   00204A  6FD9               	movwf	(??_main+1)& (0+255),b
  1470   00204C  0E26               	movlw	38
  1471   00204E  6FD8               	movwf	??_main& (0+255),b
  1472   002050  0E5D               	movlw	93
  1473   002052                     u8377:
  1474   002052  2EE8               	decfsz	wreg,f,c
  1475   002054  D7FE               	bra	u8377
  1476   002056  2FD8               	decfsz	??_main& (0+255),f,b
  1477   002058  D7FC               	bra	u8377
  1478   00205A  2FD9               	decfsz	(??_main+1)& (0+255),f,b
  1479   00205C  D7FA               	bra	u8377
  1480   00205E  D000               	nop2	
  1481   002060                     
  1482                           ;application.c: 42:     ret = lcd_4bit_send_command(&lcd_2, 0x01);
  1483   002060  0EF5               	movlw	low _lcd_2
  1484   002062  6E0F               	movwf	lcd_4bit_send_command@_lcd_config^0,c
  1485   002064  0E00               	movlw	high _lcd_2
  1486   002066  6E10               	movwf	(lcd_4bit_send_command@_lcd_config+1)^0,c
  1487   002068  0E01               	movlw	1
  1488   00206A  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
  1489   00206C  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
  1490   002070  0100               	movlb	0	; () banked
  1491   002072  6FA0               	movwf	_ret& (0+255),b
  1492   002074                     l7302:
  1493                           
  1494                           ;application.c: 44:     {;application.c: 45:         keypad_get_value(&keypad, &keypad_v
      +                          alue);
  1495   002074  0EDA               	movlw	low _keypad
  1496   002076  6E0B               	movwf	keypad_get_value@keypad_config^0,c
  1497   002078  0E01               	movlw	high _keypad
  1498   00207A  6E0C               	movwf	(keypad_get_value@keypad_config+1)^0,c
  1499   00207C  0E7F               	movlw	low _keypad_value
  1500   00207E  6E0D               	movwf	keypad_get_value@value^0,c
  1501   002080  0E00               	movlw	high _keypad_value
  1502   002082  6E0E               	movwf	(keypad_get_value@value+1)^0,c
  1503   002084  EC2A  F01D         	call	_keypad_get_value	;wreg free
  1504   002088                     
  1505                           ;application.c: 47:         if(keypad_value != 0)
  1506   002088  507F               	movf	_keypad_value^0,w,c
  1507   00208A  B4D8               	btfsc	status,2,c
  1508   00208C  EF4A  F010         	goto	u8271
  1509   002090  EF4C  F010         	goto	u8270
  1510   002094                     u8271:
  1511   002094  EF3A  F010         	goto	l7302
  1512   002098                     u8270:
  1513   002098                     
  1514                           ;application.c: 48:         {;application.c: 49:             if('=' == keypad_value)
  1515   002098  0E3D               	movlw	61
  1516   00209A  187F               	xorwf	_keypad_value^0,w,c
  1517   00209C  A4D8               	btfss	status,2,c
  1518   00209E  EF53  F010         	goto	u8281
  1519   0020A2  EF55  F010         	goto	u8280
  1520   0020A6                     u8281:
  1521   0020A6  EF74  F011         	goto	l7338
  1522   0020AA                     u8280:
  1523   0020AA                     
  1524                           ;application.c: 50:             {;application.c: 51:                 number2 = strtoll(n
      +                          umber_str, &ptr, 10);
  1525   0020AA  0EA8               	movlw	low _number_str
  1526   0020AC  6E47               	movwf	strtoll@s^0,c
  1527   0020AE  0E00               	movlw	high _number_str
  1528   0020B0  6E48               	movwf	(strtoll@s+1)^0,c
  1529   0020B2  0EB3               	movlw	low _ptr
  1530   0020B4  6E49               	movwf	strtoll@endptr^0,c
  1531   0020B6  0E00               	movlw	high _ptr
  1532   0020B8  6E4A               	movwf	(strtoll@endptr+1)^0,c
  1533   0020BA  0E00               	movlw	0
  1534   0020BC  6E4C               	movwf	(strtoll@base+1)^0,c
  1535   0020BE  0E0A               	movlw	10
  1536   0020C0  6E4B               	movwf	strtoll@base^0,c
  1537   0020C2  ECA9  F02B         	call	_strtoll	;wreg free
  1538   0020C6  C047  F0D8         	movff	?_strtoll,??_main
  1539   0020CA  C048  F0D9         	movff	?_strtoll+1,??_main+1
  1540   0020CE  C049  F0DA         	movff	?_strtoll+2,??_main+2
  1541   0020D2  C04A  F0DB         	movff	?_strtoll+3,??_main+3
  1542   0020D6  C04B  F0DC         	movff	?_strtoll+4,??_main+4
  1543   0020DA  C04C  F0DD         	movff	?_strtoll+5,??_main+5
  1544   0020DE  C04D  F0DE         	movff	?_strtoll+6,??_main+6
  1545   0020E2  C04E  F0DF         	movff	?_strtoll+7,??_main+7
  1546   0020E6  C0D8  F090         	movff	??_main,_number2
  1547   0020EA  C0D9  F091         	movff	??_main+1,_number2+1
  1548   0020EE  C0DA  F092         	movff	??_main+2,_number2+2
  1549   0020F2  C0DB  F093         	movff	??_main+3,_number2+3
  1550                           
  1551                           ;application.c: 53:                 memset(number_str, '\0', 11);
  1552   0020F6  0EA8               	movlw	low _number_str
  1553   0020F8  6E01               	movwf	memset@dest^0,c
  1554   0020FA  0E00               	movlw	high _number_str
  1555   0020FC  6E02               	movwf	(memset@dest+1)^0,c
  1556   0020FE  0E00               	movlw	0
  1557   002100  6E04               	movwf	(memset@c+1)^0,c
  1558   002102  0E00               	movlw	0
  1559   002104  6E03               	movwf	memset@c^0,c
  1560   002106  0E00               	movlw	0
  1561   002108  6E06               	movwf	(memset@n+1)^0,c
  1562   00210A  0E0B               	movlw	11
  1563   00210C  6E05               	movwf	memset@n^0,c
  1564   00210E  EC9E  F01F         	call	_memset	;wreg free
  1565                           
  1566                           ;application.c: 54:                 switch(operator)
  1567   002112  EF01  F011         	goto	l7322
  1568   002116                     l7310:
  1569                           
  1570                           ; BSR set to: 0
  1571   002116  5190               	movf	_number2& (0+255),w,b
  1572   002118  2594               	addwf	_number1& (0+255),w,b
  1573   00211A  6F8C               	movwf	_result& (0+255),b
  1574   00211C  5191               	movf	(_number2+1)& (0+255),w,b
  1575   00211E  2195               	addwfc	(_number1+1)& (0+255),w,b
  1576   002120  6F8D               	movwf	(_result+1)& (0+255),b
  1577   002122  5192               	movf	(_number2+2)& (0+255),w,b
  1578   002124  2196               	addwfc	(_number1+2)& (0+255),w,b
  1579   002126  6F8E               	movwf	(_result+2)& (0+255),b
  1580   002128  5193               	movf	(_number2+3)& (0+255),w,b
  1581   00212A  2197               	addwfc	(_number1+3)& (0+255),w,b
  1582   00212C  6F8F               	movwf	(_result+3)& (0+255),b
  1583   00212E  EF1F  F011         	goto	l7324
  1584   002132                     l7312:
  1585                           
  1586                           ; BSR set to: 0
  1587   002132  5190               	movf	_number2& (0+255),w,b
  1588   002134  5D94               	subwf	_number1& (0+255),w,b
  1589   002136  6F8C               	movwf	_result& (0+255),b
  1590   002138  5191               	movf	(_number2+1)& (0+255),w,b
  1591   00213A  5995               	subwfb	(_number1+1)& (0+255),w,b
  1592   00213C  6F8D               	movwf	(_result+1)& (0+255),b
  1593   00213E  5192               	movf	(_number2+2)& (0+255),w,b
  1594   002140  5996               	subwfb	(_number1+2)& (0+255),w,b
  1595   002142  6F8E               	movwf	(_result+2)& (0+255),b
  1596   002144  5193               	movf	(_number2+3)& (0+255),w,b
  1597   002146  5997               	subwfb	(_number1+3)& (0+255),w,b
  1598   002148  6F8F               	movwf	(_result+3)& (0+255),b
  1599   00214A  EF1F  F011         	goto	l7324
  1600   00214E                     l7314:
  1601                           
  1602                           ; BSR set to: 0
  1603   00214E  C094  F001         	movff	_number1,___xxtofl@val
  1604   002152  C095  F002         	movff	_number1+1,___xxtofl@val+1
  1605   002156  C096  F003         	movff	_number1+2,___xxtofl@val+2
  1606   00215A  C097  F004         	movff	_number1+3,___xxtofl@val+3
  1607   00215E  0E01               	movlw	1
  1608   002160  EC04  F01E         	call	___xxtofl
  1609   002164  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1610   002168  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1611   00216C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1612   002170  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1613   002174  C090  F001         	movff	_number2,___xxtofl@val
  1614   002178  C091  F002         	movff	_number2+1,___xxtofl@val+1
  1615   00217C  C092  F003         	movff	_number2+2,___xxtofl@val+2
  1616   002180  C093  F004         	movff	_number2+3,___xxtofl@val+3
  1617   002184  0E01               	movlw	1
  1618   002186  EC04  F01E         	call	___xxtofl
  1619   00218A  C001  F013         	movff	?___xxtofl,___fldiv@a
  1620   00218E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1621   002192  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1622   002196  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1623   00219A  EC70  F019         	call	___fldiv	;wreg free
  1624   00219E  C00F  F088         	movff	?___fldiv,_float_res
  1625   0021A2  C010  F089         	movff	?___fldiv+1,_float_res+1
  1626   0021A6  C011  F08A         	movff	?___fldiv+2,_float_res+2
  1627   0021AA  C012  F08B         	movff	?___fldiv+3,_float_res+3
  1628   0021AE  EF1F  F011         	goto	l7324
  1629   0021B2                     l7316:
  1630                           
  1631                           ; BSR set to: 0
  1632   0021B2  C094  F001         	movff	_number1,___lmul@multiplier
  1633   0021B6  C095  F002         	movff	_number1+1,___lmul@multiplier+1
  1634   0021BA  C096  F003         	movff	_number1+2,___lmul@multiplier+2
  1635   0021BE  C097  F004         	movff	_number1+3,___lmul@multiplier+3
  1636   0021C2  C090  F005         	movff	_number2,___lmul@multiplicand
  1637   0021C6  C091  F006         	movff	_number2+1,___lmul@multiplicand+1
  1638   0021CA  C092  F007         	movff	_number2+2,___lmul@multiplicand+2
  1639   0021CE  C093  F008         	movff	_number2+3,___lmul@multiplicand+3
  1640   0021D2  ECAB  F029         	call	___lmul	;wreg free
  1641   0021D6  C001  F08C         	movff	?___lmul,_result
  1642   0021DA  C002  F08D         	movff	?___lmul+1,_result+1
  1643   0021DE  C003  F08E         	movff	?___lmul+2,_result+2
  1644   0021E2  C004  F08F         	movff	?___lmul+3,_result+3
  1645   0021E6  EF1F  F011         	goto	l7324
  1646   0021EA                     l7318:
  1647                           
  1648                           ; BSR set to: 0
  1649   0021EA  0EB4               	movlw	low _result_str
  1650   0021EC  6E01               	movwf	strcpy@dest^0,c
  1651   0021EE  0E01               	movlw	high _result_str
  1652   0021F0  6E02               	movwf	(strcpy@dest+1)^0,c
  1653   0021F2  0E11               	movlw	low STR_6
  1654   0021F4  6E03               	movwf	strcpy@src^0,c
  1655   0021F6  0E10               	movlw	high STR_6
  1656   0021F8  6E04               	movwf	(strcpy@src+1)^0,c
  1657   0021FA  ECCA  F02B         	call	_strcpy	;wreg free
  1658   0021FE  EF1F  F011         	goto	l7324
  1659   002202                     l7322:
  1660   002202  0100               	movlb	0	; () banked
  1661   002204  51F4               	movf	_operator& (0+255),w,b
  1662   002206  6FD8               	movwf	??_main& (0+255),b
  1663   002208  6BD9               	clrf	(??_main+1)& (0+255),b
  1664                           
  1665                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1666                           ; Switch size 1, requested type "simple"
  1667                           ; Number of cases is 1, Range of values is 0 to 0
  1668                           ; switch strategies available:
  1669                           ; Name         Instructions Cycles
  1670                           ; simple_byte            4     3 (average)
  1671                           ;	Chosen strategy is simple_byte
  1672   00220A  51D9               	movf	(??_main+1)& (0+255),w,b
  1673   00220C  0A00               	xorlw	0	; case 0
  1674   00220E  B4D8               	btfsc	status,2,c
  1675   002210  EF0C  F011         	goto	l7686
  1676   002214  EFF5  F010         	goto	l7318
  1677   002218                     l7686:
  1678                           
  1679                           ; BSR set to: 0
  1680                           ; Switch size 1, requested type "simple"
  1681                           ; Number of cases is 4, Range of values is 42 to 47
  1682                           ; switch strategies available:
  1683                           ; Name         Instructions Cycles
  1684                           ; simple_byte           13     7 (average)
  1685                           ;	Chosen strategy is simple_byte
  1686   002218  51D8               	movf	??_main& (0+255),w,b
  1687   00221A  0A2A               	xorlw	42	; case 42
  1688   00221C  B4D8               	btfsc	status,2,c
  1689   00221E  EFD9  F010         	goto	l7316
  1690   002222  0A01               	xorlw	1	; case 43
  1691   002224  B4D8               	btfsc	status,2,c
  1692   002226  EF8B  F010         	goto	l7310
  1693   00222A  0A06               	xorlw	6	; case 45
  1694   00222C  B4D8               	btfsc	status,2,c
  1695   00222E  EF99  F010         	goto	l7312
  1696   002232  0A02               	xorlw	2	; case 47
  1697   002234  B4D8               	btfsc	status,2,c
  1698   002236  EFA7  F010         	goto	l7314
  1699   00223A  EFF5  F010         	goto	l7318
  1700   00223E                     l7324:
  1701                           
  1702                           ;application.c: 62:                 if(strcmp(result_str, "Can't do operation") == 0)
  1703   00223E  0EB4               	movlw	low _result_str
  1704   002240  6E01               	movwf	strcmp@l^0,c
  1705   002242  0E01               	movlw	high _result_str
  1706   002244  6E02               	movwf	(strcmp@l+1)^0,c
  1707   002246  0E11               	movlw	low STR_6
  1708   002248  6E03               	movwf	strcmp@r^0,c
  1709   00224A  0E10               	movlw	high STR_6
  1710   00224C  6E04               	movwf	(strcmp@r+1)^0,c
  1711   00224E  EC73  F029         	call	_strcmp	;wreg free
  1712   002252  5001               	movf	?_strcmp^0,w,c
  1713   002254  1002               	iorwf	(?_strcmp+1)^0,w,c
  1714   002256  A4D8               	btfss	status,2,c
  1715   002258  EF30  F011         	goto	u8291
  1716   00225C  EF32  F011         	goto	u8290
  1717   002260                     u8291:
  1718   002260  EF42  F011         	goto	l7328
  1719   002264                     u8290:
  1720   002264                     l7326:
  1721                           
  1722                           ;application.c: 63:                 {;application.c: 64:                     lcd_4bit_se
      +                          nd_string_pos(&lcd_2, 3,1, result_str);
  1723   002264  0EF5               	movlw	low _lcd_2
  1724   002266  6E1A               	movwf	lcd_4bit_send_string_pos@_lcd_config^0,c
  1725   002268  0E00               	movlw	high _lcd_2
  1726   00226A  6E1B               	movwf	(lcd_4bit_send_string_pos@_lcd_config+1)^0,c
  1727   00226C  0E03               	movlw	3
  1728   00226E  6E1C               	movwf	lcd_4bit_send_string_pos@row^0,c
  1729   002270  0E01               	movlw	1
  1730   002272  6E1D               	movwf	lcd_4bit_send_string_pos@col^0,c
  1731   002274  0EB4               	movlw	low _result_str
  1732   002276  6E1E               	movwf	lcd_4bit_send_string_pos@str^0,c
  1733   002278  0E01               	movlw	high _result_str
  1734   00227A  6E1F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1735   00227C  EC77  F02A         	call	_lcd_4bit_send_string_pos	;wreg free
  1736                           
  1737                           ;application.c: 65:                 }
  1738   002280  EF60  F012         	goto	l7388
  1739   002284                     l7328:
  1740                           
  1741                           ;application.c: 67:                 {;application.c: 68:                     if(operator
      +                           == '/')
  1742   002284  0E2F               	movlw	47
  1743   002286  0100               	movlb	0	; () banked
  1744   002288  19F4               	xorwf	_operator& (0+255),w,b
  1745   00228A  A4D8               	btfss	status,2,c
  1746   00228C  EF4A  F011         	goto	u8301
  1747   002290  EF4C  F011         	goto	u8300
  1748   002294                     u8301:
  1749   002294  EF60  F011         	goto	l7334
  1750   002298                     u8300:
  1751   002298                     
  1752                           ; BSR set to: 0
  1753                           ;application.c: 69:                     {;application.c: 70:                         spr
      +                          intf(result_str, "%.3f", float_res);
  1754   002298  0EB4               	movlw	low _result_str
  1755   00229A  6FC2               	movwf	sprintf@s& (0+255),b
  1756   00229C  0E01               	movlw	high _result_str
  1757   00229E  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  1758   0022A0  0E3D               	movlw	low STR_8
  1759   0022A2  6FC4               	movwf	sprintf@fmt& (0+255),b
  1760   0022A4  0E10               	movlw	high STR_8
  1761   0022A6  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
  1762   0022A8  C088  F0C6         	movff	_float_res,?_sprintf+4
  1763   0022AC  C089  F0C7         	movff	_float_res+1,?_sprintf+5
  1764   0022B0  C08A  F0C8         	movff	_float_res+2,?_sprintf+6
  1765   0022B4  C08B  F0C9         	movff	_float_res+3,?_sprintf+7
  1766   0022B8  ECA7  F02A         	call	_sprintf	;wreg free
  1767   0022BC  EF32  F011         	goto	l7326
  1768   0022C0                     l7334:
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;application.c: 74:                     {;application.c: 75:                         spr
      +                          intf(result_str, "%ld", result);
  1772   0022C0  0EB4               	movlw	low _result_str
  1773   0022C2  6FC2               	movwf	sprintf@s& (0+255),b
  1774   0022C4  0E01               	movlw	high _result_str
  1775   0022C6  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  1776   0022C8  0E4A               	movlw	low STR_9
  1777   0022CA  6FC4               	movwf	sprintf@fmt& (0+255),b
  1778   0022CC  0E10               	movlw	high STR_9
  1779   0022CE  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
  1780   0022D0  C08C  F0C6         	movff	_result,?_sprintf+4
  1781   0022D4  C08D  F0C7         	movff	_result+1,?_sprintf+5
  1782   0022D8  C08E  F0C8         	movff	_result+2,?_sprintf+6
  1783   0022DC  C08F  F0C9         	movff	_result+3,?_sprintf+7
  1784   0022E0  ECA7  F02A         	call	_sprintf	;wreg free
  1785   0022E4  EF32  F011         	goto	l7326
  1786   0022E8                     l7338:
  1787   0022E8  0E23               	movlw	35
  1788   0022EA  187F               	xorwf	_keypad_value^0,w,c
  1789   0022EC  A4D8               	btfss	status,2,c
  1790   0022EE  EF7B  F011         	goto	u8311
  1791   0022F2  EF7D  F011         	goto	u8310
  1792   0022F6                     u8311:
  1793   0022F6  EFD2  F011         	goto	l7360
  1794   0022FA                     u8310:
  1795   0022FA                     
  1796                           ;application.c: 81:                 ret = lcd_4bit_send_command(&lcd_2, 0x01);
  1797   0022FA  0EF5               	movlw	low _lcd_2
  1798   0022FC  6E0F               	movwf	lcd_4bit_send_command@_lcd_config^0,c
  1799   0022FE  0E00               	movlw	high _lcd_2
  1800   002300  6E10               	movwf	(lcd_4bit_send_command@_lcd_config+1)^0,c
  1801   002302  0E01               	movlw	1
  1802   002304  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
  1803   002306  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
  1804   00230A  0100               	movlb	0	; () banked
  1805   00230C  6FA0               	movwf	_ret& (0+255),b
  1806   00230E                     
  1807                           ; BSR set to: 0
  1808                           ;application.c: 82:                 memset(string , '\0', 100);
  1809   00230E  0E00               	movlw	low _string
  1810   002310  6E01               	movwf	memset@dest^0,c
  1811   002312  0E01               	movlw	high _string
  1812   002314  6E02               	movwf	(memset@dest+1)^0,c
  1813   002316  0E00               	movlw	0
  1814   002318  6E04               	movwf	(memset@c+1)^0,c
  1815   00231A  0E00               	movlw	0
  1816   00231C  6E03               	movwf	memset@c^0,c
  1817   00231E  0E00               	movlw	0
  1818   002320  6E06               	movwf	(memset@n+1)^0,c
  1819   002322  0E64               	movlw	100
  1820   002324  6E05               	movwf	memset@n^0,c
  1821   002326  EC9E  F01F         	call	_memset	;wreg free
  1822   00232A                     
  1823                           ;application.c: 83:                 memset(number_str, '\0', 11);
  1824   00232A  0EA8               	movlw	low _number_str
  1825   00232C  6E01               	movwf	memset@dest^0,c
  1826   00232E  0E00               	movlw	high _number_str
  1827   002330  6E02               	movwf	(memset@dest+1)^0,c
  1828   002332  0E00               	movlw	0
  1829   002334  6E04               	movwf	(memset@c+1)^0,c
  1830   002336  0E00               	movlw	0
  1831   002338  6E03               	movwf	memset@c^0,c
  1832   00233A  0E00               	movlw	0
  1833   00233C  6E06               	movwf	(memset@n+1)^0,c
  1834   00233E  0E0B               	movlw	11
  1835   002340  6E05               	movwf	memset@n^0,c
  1836   002342  EC9E  F01F         	call	_memset	;wreg free
  1837   002346                     
  1838                           ;application.c: 84:                 memset(result_str, '\0', 20);
  1839   002346  0EB4               	movlw	low _result_str
  1840   002348  6E01               	movwf	memset@dest^0,c
  1841   00234A  0E01               	movlw	high _result_str
  1842   00234C  6E02               	movwf	(memset@dest+1)^0,c
  1843   00234E  0E00               	movlw	0
  1844   002350  6E04               	movwf	(memset@c+1)^0,c
  1845   002352  0E00               	movlw	0
  1846   002354  6E03               	movwf	memset@c^0,c
  1847   002356  0E00               	movlw	0
  1848   002358  6E06               	movwf	(memset@n+1)^0,c
  1849   00235A  0E14               	movlw	20
  1850   00235C  6E05               	movwf	memset@n^0,c
  1851   00235E  EC9E  F01F         	call	_memset	;wreg free
  1852   002362                     
  1853                           ;application.c: 85:                 result = 0;
  1854   002362  0E00               	movlw	0
  1855   002364  0100               	movlb	0	; () banked
  1856   002366  6F8C               	movwf	_result& (0+255),b
  1857   002368  0E00               	movlw	0
  1858   00236A  6F8D               	movwf	(_result+1)& (0+255),b
  1859   00236C  0E00               	movlw	0
  1860   00236E  6F8E               	movwf	(_result+2)& (0+255),b
  1861   002370  0E00               	movlw	0
  1862   002372  6F8F               	movwf	(_result+3)& (0+255),b
  1863   002374                     
  1864                           ; BSR set to: 0
  1865                           ;application.c: 86:                 number1 = 0;
  1866   002374  0E00               	movlw	0
  1867   002376  6F94               	movwf	_number1& (0+255),b
  1868   002378  0E00               	movlw	0
  1869   00237A  6F95               	movwf	(_number1+1)& (0+255),b
  1870   00237C  0E00               	movlw	0
  1871   00237E  6F96               	movwf	(_number1+2)& (0+255),b
  1872   002380  0E00               	movlw	0
  1873   002382  6F97               	movwf	(_number1+3)& (0+255),b
  1874   002384                     
  1875                           ; BSR set to: 0
  1876                           ;application.c: 87:                 number2 = 0;
  1877   002384  0E00               	movlw	0
  1878   002386  6F90               	movwf	_number2& (0+255),b
  1879   002388  0E00               	movlw	0
  1880   00238A  6F91               	movwf	(_number2+1)& (0+255),b
  1881   00238C  0E00               	movlw	0
  1882   00238E  6F92               	movwf	(_number2+2)& (0+255),b
  1883   002390  0E00               	movlw	0
  1884   002392  6F93               	movwf	(_number2+3)& (0+255),b
  1885   002394                     
  1886                           ; BSR set to: 0
  1887                           ;application.c: 88:                 counter = 0;
  1888   002394  0E00               	movlw	0
  1889   002396  6F9F               	movwf	_counter& (0+255),b
  1890   002398                     
  1891                           ; BSR set to: 0
  1892                           ;application.c: 89:                 counter2 = 0;
  1893   002398  0E00               	movlw	0
  1894   00239A  6F9E               	movwf	_counter2& (0+255),b
  1895   00239C                     
  1896                           ; BSR set to: 0
  1897                           ;application.c: 90:                 flag = 0;
  1898   00239C  0E00               	movlw	0
  1899   00239E  6F9D               	movwf	_flag& (0+255),b
  1900                           
  1901                           ;application.c: 91:             }
  1902   0023A0  EF60  F012         	goto	l7388
  1903   0023A4                     l7360:
  1904   0023A4  0E2B               	movlw	43
  1905   0023A6  187F               	xorwf	_keypad_value^0,w,c
  1906   0023A8  B4D8               	btfsc	status,2,c
  1907   0023AA  EFD9  F011         	goto	u8321
  1908   0023AE  EFDB  F011         	goto	u8320
  1909   0023B2                     u8321:
  1910   0023B2  EFF6  F011         	goto	l609
  1911   0023B6                     u8320:
  1912   0023B6  0E2A               	movlw	42
  1913   0023B8  187F               	xorwf	_keypad_value^0,w,c
  1914   0023BA  B4D8               	btfsc	status,2,c
  1915   0023BC  EFE2  F011         	goto	u8331
  1916   0023C0  EFE4  F011         	goto	u8330
  1917   0023C4                     u8331:
  1918   0023C4  EFF6  F011         	goto	l609
  1919   0023C8                     u8330:
  1920   0023C8  0E2F               	movlw	47
  1921   0023CA  187F               	xorwf	_keypad_value^0,w,c
  1922   0023CC  B4D8               	btfsc	status,2,c
  1923   0023CE  EFEB  F011         	goto	u8341
  1924   0023D2  EFED  F011         	goto	u8340
  1925   0023D6                     u8341:
  1926   0023D6  EFF6  F011         	goto	l609
  1927   0023DA                     u8340:
  1928   0023DA  0E2D               	movlw	45
  1929   0023DC  187F               	xorwf	_keypad_value^0,w,c
  1930   0023DE  A4D8               	btfss	status,2,c
  1931   0023E0  EFF4  F011         	goto	u8351
  1932   0023E4  EFF6  F011         	goto	u8350
  1933   0023E8                     u8351:
  1934   0023E8  EF3A  F012         	goto	l7376
  1935   0023EC                     u8350:
  1936   0023EC                     l609:
  1937                           
  1938                           ;application.c: 93:             {;application.c: 95:                 operator = keypad_v
      +                          alue;
  1939   0023EC  C07F  F0F4         	movff	_keypad_value,_operator
  1940   0023F0                     
  1941                           ;application.c: 96:                 number1 = strtoll(number_str, &ptr, 10);
  1942   0023F0  0EA8               	movlw	low _number_str
  1943   0023F2  6E47               	movwf	strtoll@s^0,c
  1944   0023F4  0E00               	movlw	high _number_str
  1945   0023F6  6E48               	movwf	(strtoll@s+1)^0,c
  1946   0023F8  0EB3               	movlw	low _ptr
  1947   0023FA  6E49               	movwf	strtoll@endptr^0,c
  1948   0023FC  0E00               	movlw	high _ptr
  1949   0023FE  6E4A               	movwf	(strtoll@endptr+1)^0,c
  1950   002400  0E00               	movlw	0
  1951   002402  6E4C               	movwf	(strtoll@base+1)^0,c
  1952   002404  0E0A               	movlw	10
  1953   002406  6E4B               	movwf	strtoll@base^0,c
  1954   002408  ECA9  F02B         	call	_strtoll	;wreg free
  1955   00240C  C047  F0D8         	movff	?_strtoll,??_main
  1956   002410  C048  F0D9         	movff	?_strtoll+1,??_main+1
  1957   002414  C049  F0DA         	movff	?_strtoll+2,??_main+2
  1958   002418  C04A  F0DB         	movff	?_strtoll+3,??_main+3
  1959   00241C  C04B  F0DC         	movff	?_strtoll+4,??_main+4
  1960   002420  C04C  F0DD         	movff	?_strtoll+5,??_main+5
  1961   002424  C04D  F0DE         	movff	?_strtoll+6,??_main+6
  1962   002428  C04E  F0DF         	movff	?_strtoll+7,??_main+7
  1963   00242C  C0D8  F094         	movff	??_main,_number1
  1964   002430  C0D9  F095         	movff	??_main+1,_number1+1
  1965   002434  C0DA  F096         	movff	??_main+2,_number1+2
  1966   002438  C0DB  F097         	movff	??_main+3,_number1+3
  1967                           
  1968                           ;application.c: 99:                 memset(number_str, '\0', 11);
  1969   00243C  0EA8               	movlw	low _number_str
  1970   00243E  6E01               	movwf	memset@dest^0,c
  1971   002440  0E00               	movlw	high _number_str
  1972   002442  6E02               	movwf	(memset@dest+1)^0,c
  1973   002444  0E00               	movlw	0
  1974   002446  6E04               	movwf	(memset@c+1)^0,c
  1975   002448  0E00               	movlw	0
  1976   00244A  6E03               	movwf	memset@c^0,c
  1977   00244C  0E00               	movlw	0
  1978   00244E  6E06               	movwf	(memset@n+1)^0,c
  1979   002450  0E0B               	movlw	11
  1980   002452  6E05               	movwf	memset@n^0,c
  1981   002454  EC9E  F01F         	call	_memset	;wreg free
  1982   002458                     
  1983                           ;application.c: 100:                 flag = 1;
  1984   002458  0E01               	movlw	1
  1985   00245A  0100               	movlb	0	; () banked
  1986   00245C  6F9D               	movwf	_flag& (0+255),b
  1987   00245E                     
  1988                           ; BSR set to: 0
  1989                           ;application.c: 101:                 string[counter] = keypad_value;
  1990   00245E  0E00               	movlw	low _string
  1991   002460  259F               	addwf	_counter& (0+255),w,b
  1992   002462  6ED9               	movwf	fsr2l,c
  1993   002464  6ADA               	clrf	fsr2h,c
  1994   002466  0E01               	movlw	high _string
  1995   002468  22DA               	addwfc	fsr2h,f,c
  1996   00246A  C07F  FFDF         	movff	_keypad_value,indf2
  1997   00246E                     l7374:
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;application.c: 102:                 counter++;
  2001   00246E  2B9F               	incf	_counter& (0+255),f,b
  2002                           
  2003                           ;application.c: 103:             }
  2004   002470  EF60  F012         	goto	l7388
  2005   002474                     l7376:
  2006                           
  2007                           ;application.c: 105:             {;application.c: 106:                 string[counter] =
      +                           keypad_value;
  2008   002474  0E00               	movlw	low _string
  2009   002476  0100               	movlb	0	; () banked
  2010   002478  259F               	addwf	_counter& (0+255),w,b
  2011   00247A  6ED9               	movwf	fsr2l,c
  2012   00247C  6ADA               	clrf	fsr2h,c
  2013   00247E  0E01               	movlw	high _string
  2014   002480  22DA               	addwfc	fsr2h,f,c
  2015   002482  C07F  FFDF         	movff	_keypad_value,indf2
  2016   002486                     
  2017                           ; BSR set to: 0
  2018                           ;application.c: 108:                 if(flag == 0)
  2019   002486  519D               	movf	_flag& (0+255),w,b
  2020   002488  A4D8               	btfss	status,2,c
  2021   00248A  EF49  F012         	goto	u8361
  2022   00248E  EF4B  F012         	goto	u8360
  2023   002492                     u8361:
  2024   002492  EF55  F012         	goto	l7382
  2025   002496                     u8360:
  2026   002496                     
  2027                           ; BSR set to: 0
  2028                           ;application.c: 109:                 {;application.c: 110:                     number_st
      +                          r[counter] = keypad_value;
  2029   002496  0EA8               	movlw	low _number_str
  2030   002498  259F               	addwf	_counter& (0+255),w,b
  2031   00249A  6ED9               	movwf	fsr2l,c
  2032   00249C  6ADA               	clrf	fsr2h,c
  2033   00249E  0E00               	movlw	high _number_str
  2034   0024A0  22DA               	addwfc	fsr2h,f,c
  2035   0024A2  C07F  FFDF         	movff	_keypad_value,indf2
  2036                           
  2037                           ;application.c: 111:                 }
  2038   0024A6  EF37  F012         	goto	l7374
  2039   0024AA                     l7382:
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;application.c: 113:                     number_str[counter2] = keypad_value;
  2043   0024AA  0EA8               	movlw	low _number_str
  2044   0024AC  259E               	addwf	_counter2& (0+255),w,b
  2045   0024AE  6ED9               	movwf	fsr2l,c
  2046   0024B0  6ADA               	clrf	fsr2h,c
  2047   0024B2  0E00               	movlw	high _number_str
  2048   0024B4  22DA               	addwfc	fsr2h,f,c
  2049   0024B6  C07F  FFDF         	movff	_keypad_value,indf2
  2050   0024BA                     
  2051                           ; BSR set to: 0
  2052                           ;application.c: 114:                     counter2++;
  2053   0024BA  2B9E               	incf	_counter2& (0+255),f,b
  2054   0024BC  EF37  F012         	goto	l7374
  2055   0024C0                     l7388:
  2056                           
  2057                           ;application.c: 119:             ret = lcd_4bit_send_string_pos(&lcd_2, 1,1, string);
  2058   0024C0  0EF5               	movlw	low _lcd_2
  2059   0024C2  6E1A               	movwf	lcd_4bit_send_string_pos@_lcd_config^0,c
  2060   0024C4  0E00               	movlw	high _lcd_2
  2061   0024C6  6E1B               	movwf	(lcd_4bit_send_string_pos@_lcd_config+1)^0,c
  2062   0024C8  0E01               	movlw	1
  2063   0024CA  6E1C               	movwf	lcd_4bit_send_string_pos@row^0,c
  2064   0024CC  0E01               	movlw	1
  2065   0024CE  6E1D               	movwf	lcd_4bit_send_string_pos@col^0,c
  2066   0024D0  0E00               	movlw	low _string
  2067   0024D2  6E1E               	movwf	lcd_4bit_send_string_pos@str^0,c
  2068   0024D4  0E01               	movlw	high _string
  2069   0024D6  6E1F               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2070   0024D8  EC77  F02A         	call	_lcd_4bit_send_string_pos	;wreg free
  2071   0024DC  0100               	movlb	0	; () banked
  2072   0024DE  6FA0               	movwf	_ret& (0+255),b
  2073   0024E0                     
  2074                           ; BSR set to: 0
  2075                           ;application.c: 120:             keypad_value = 0;
  2076   0024E0  0E00               	movlw	0
  2077   0024E2  6E7F               	movwf	_keypad_value^0,c
  2078   0024E4  EF3A  F010         	goto	l7302
  2079   0024E8  EF00  F000         	goto	start
  2080   0024EC                     __end_of_main:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _strtoll *****************
  2084 ;; Defined at:
  2085 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strtoll.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  s               2   70[COMRAM] PTR const unsigned char 
  2088 ;;		 -> number_str(11), 
  2089 ;;  endptr          2   72[COMRAM] PTR PTR unsigned char 
  2090 ;;		 -> ptr(2), 
  2091 ;;  base            2   74[COMRAM] int 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  8   70[COMRAM] long long 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2103 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;Total ram usage:        8 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; Hardware stack levels required when called: 3
  2110 ;; This function calls:
  2111 ;;		___strtoxll
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text1
  2118   005752                     __ptext1:
  2119                           	callstack 0
  2120   005752                     _strtoll:
  2121                           	callstack 27
  2122   005752  C047  F019         	movff	strtoll@s,___strtoxll@s
  2123   005756  C048  F01A         	movff	strtoll@s+1,___strtoxll@s+1
  2124   00575A  C049  F01B         	movff	strtoll@endptr,___strtoxll@endptr
  2125   00575E  C04A  F01C         	movff	strtoll@endptr+1,___strtoxll@endptr+1
  2126   005762  C04B  F01D         	movff	strtoll@base,___strtoxll@base
  2127   005766  C04C  F01E         	movff	strtoll@base+1,___strtoxll@base+1
  2128   00576A  0E01               	movlw	1
  2129   00576C  6E1F               	movwf	___strtoxll@is_signed^0,c
  2130   00576E  EC11  F00D         	call	___strtoxll	;wreg free
  2131   005772  C019  F047         	movff	?___strtoxll,?_strtoll
  2132   005776  C01A  F048         	movff	?___strtoxll+1,?_strtoll+1
  2133   00577A  C01B  F049         	movff	?___strtoxll+2,?_strtoll+2
  2134   00577E  C01C  F04A         	movff	?___strtoxll+3,?_strtoll+3
  2135   005782  C01D  F04B         	movff	?___strtoxll+4,?_strtoll+4
  2136   005786  C01E  F04C         	movff	?___strtoxll+5,?_strtoll+5
  2137   00578A  C01F  F04D         	movff	?___strtoxll+6,?_strtoll+6
  2138   00578E  C020  F04E         	movff	?___strtoxll+7,?_strtoll+7
  2139   005792  0012               	return		;funcret
  2140   005794                     __end_of_strtoll:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function ___strtoxll *****************
  2144 ;; Defined at:
  2145 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__strtoxll.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  s               2   24[COMRAM] PTR const unsigned char 
  2148 ;;		 -> number_str(11), 
  2149 ;;  endptr          2   26[COMRAM] PTR PTR unsigned char 
  2150 ;;		 -> ptr(2), 
  2151 ;;  base            2   28[COMRAM] int 
  2152 ;;  is_signed       1   30[COMRAM] unsigned char 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  a               8   59[COMRAM] unsigned long long 
  2155 ;;  limit           8   49[COMRAM] unsigned long long 
  2156 ;;  prev_a          8   40[COMRAM] unsigned long long 
  2157 ;;  cp              2   67[COMRAM] PTR const unsigned char 
  2158 ;;		 -> number_str(11), 
  2159 ;;  c               1   69[COMRAM] unsigned char 
  2160 ;;  skip            1   58[COMRAM] unsigned char 
  2161 ;;  sign            1   57[COMRAM] unsigned char 
  2162 ;;  conv_done       1   48[COMRAM] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  8   24[COMRAM] unsigned long long 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2172 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Locals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Totals:        46       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;Total ram usage:       46 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 2
  2179 ;; This function calls:
  2180 ;;		___omul
  2181 ;;		_isalnum
  2182 ;;		_isalpha
  2183 ;;		_isdigit
  2184 ;;		_isspace
  2185 ;;		_toupper
  2186 ;; This function is called by:
  2187 ;;		_strtoll
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text2
  2192   001A22                     __ptext2:
  2193                           	callstack 0
  2194   001A22                     ___strtoxll:
  2195                           	callstack 27
  2196   001A22  0E00               	movlw	0
  2197   001A24  6E31               	movwf	___strtoxll@conv_done^0,c
  2198   001A26  EE20  F03C         	lfsr	2,___strtoxll@a
  2199   001A2A  0E07               	movlw	7
  2200   001A2C                     u6721:
  2201   001A2C  6ADE               	clrf	postinc2,c
  2202   001A2E  06E8               	decf	wreg,f,c
  2203   001A30  E2FD               	bc	u6721
  2204   001A32  C019  F044         	movff	___strtoxll@s,___strtoxll@cp
  2205   001A36  C01A  F045         	movff	___strtoxll@s+1,___strtoxll@cp+1
  2206   001A3A  BE1E               	btfsc	(___strtoxll@base+1)^0,7,c
  2207   001A3C  EF2B  F00D         	goto	u6730
  2208   001A40  501E               	movf	(___strtoxll@base+1)^0,w,c
  2209   001A42  E107               	bnz	u6731
  2210   001A44  0E25               	movlw	37
  2211   001A46  5C1D               	subwf	___strtoxll@base^0,w,c
  2212   001A48  B0D8               	btfsc	status,0,c
  2213   001A4A  EF29  F00D         	goto	u6731
  2214   001A4E  EF2B  F00D         	goto	u6730
  2215   001A52                     u6731:
  2216   001A52  EF34  F00D         	goto	l6300
  2217   001A56                     u6730:
  2218   001A56  041D               	decf	___strtoxll@base^0,w,c
  2219   001A58  101E               	iorwf	(___strtoxll@base+1)^0,w,c
  2220   001A5A  A4D8               	btfss	status,2,c
  2221   001A5C  EF32  F00D         	goto	u6741
  2222   001A60  EF34  F00D         	goto	u6740
  2223   001A64                     u6741:
  2224   001A64  EF3B  F00D         	goto	l6302
  2225   001A68                     u6740:
  2226   001A68                     l6300:
  2227   001A68  0E00               	movlw	0
  2228   001A6A  0100               	movlb	0	; () banked
  2229   001A6C  6F99               	movwf	(_errno+1)& (0+255),b
  2230   001A6E  0E16               	movlw	22
  2231   001A70  6F98               	movwf	_errno& (0+255),b
  2232   001A72  EF97  F00F         	goto	l6410
  2233   001A76                     l6302:
  2234   001A76  5044               	movf	___strtoxll@cp^0,w,c
  2235   001A78  1045               	iorwf	(___strtoxll@cp+1)^0,w,c
  2236   001A7A  B4D8               	btfsc	status,2,c
  2237   001A7C  EF42  F00D         	goto	u6751
  2238   001A80  EF44  F00D         	goto	u6750
  2239   001A84                     u6751:
  2240   001A84  EF97  F00F         	goto	l6410
  2241   001A88                     u6750:
  2242   001A88  C044  FFD9         	movff	___strtoxll@cp,fsr2l
  2243   001A8C  C045  FFDA         	movff	___strtoxll@cp+1,fsr2h
  2244   001A90  50DF               	movf	indf2,w,c
  2245   001A92  A4D8               	btfss	status,2,c
  2246   001A94  EF4E  F00D         	goto	u6761
  2247   001A98  EF50  F00D         	goto	u6760
  2248   001A9C                     u6761:
  2249   001A9C  EF52  F00D         	goto	l6306
  2250   001AA0                     u6760:
  2251   001AA0  EF97  F00F         	goto	l6410
  2252   001AA4                     l6306:
  2253   001AA4  C044  FFD9         	movff	___strtoxll@cp,fsr2l
  2254   001AA8  C045  FFDA         	movff	___strtoxll@cp+1,fsr2h
  2255   001AAC  50DF               	movf	indf2,w,c
  2256   001AAE  6E46               	movwf	___strtoxll@c^0,c
  2257   001AB0  EF62  F00D         	goto	l6312
  2258   001AB4                     l6308:
  2259   001AB4  4A44               	infsnz	___strtoxll@cp^0,f,c
  2260   001AB6  2A45               	incf	(___strtoxll@cp+1)^0,f,c
  2261   001AB8  C044  FFD9         	movff	___strtoxll@cp,fsr2l
  2262   001ABC  C045  FFDA         	movff	___strtoxll@cp+1,fsr2h
  2263   001AC0  50DF               	movf	indf2,w,c
  2264   001AC2  6E46               	movwf	___strtoxll@c^0,c
  2265   001AC4                     l6312:
  2266   001AC4  0E20               	movlw	32
  2267   001AC6  1846               	xorwf	___strtoxll@c^0,w,c
  2268   001AC8  B4D8               	btfsc	status,2,c
  2269   001ACA  EF69  F00D         	goto	u6771
  2270   001ACE  EF6B  F00D         	goto	u6770
  2271   001AD2                     u6771:
  2272   001AD2  EF5A  F00D         	goto	l6308
  2273   001AD6                     u6770:
  2274   001AD6  0EF7               	movlw	247
  2275   001AD8  2446               	addwf	___strtoxll@c^0,w,c
  2276   001ADA  6E21               	movwf	??___strtoxll^0,c
  2277   001ADC  6A22               	clrf	(??___strtoxll+1)^0,c
  2278   001ADE  0EFF               	movlw	255
  2279   001AE0  2222               	addwfc	(??___strtoxll+1)^0,f,c
  2280   001AE2  5022               	movf	(??___strtoxll+1)^0,w,c
  2281   001AE4  E109               	bnz	u6780
  2282   001AE6  0E05               	movlw	5
  2283   001AE8  5C21               	subwf	??___strtoxll^0,w,c
  2284   001AEA  A0D8               	btfss	status,0,c
  2285   001AEC  EF7A  F00D         	goto	u6781
  2286   001AF0  EF7C  F00D         	goto	u6780
  2287   001AF4                     u6781:
  2288   001AF4  EF5A  F00D         	goto	l6308
  2289   001AF8                     u6780:
  2290   001AF8  0E00               	movlw	0
  2291   001AFA  6E3A               	movwf	___strtoxll@sign^0,c
  2292   001AFC  0E00               	movlw	0
  2293   001AFE  6E3B               	movwf	___strtoxll@skip^0,c
  2294   001B00  0E2D               	movlw	45
  2295   001B02  1846               	xorwf	___strtoxll@c^0,w,c
  2296   001B04  A4D8               	btfss	status,2,c
  2297   001B06  EF87  F00D         	goto	u6791
  2298   001B0A  EF89  F00D         	goto	u6790
  2299   001B0E                     u6791:
  2300   001B0E  EF95  F00D         	goto	l6324
  2301   001B12                     u6790:
  2302   001B12  0E01               	movlw	1
  2303   001B14  6E3A               	movwf	___strtoxll@sign^0,c
  2304   001B16                     l6322:
  2305   001B16  4A44               	infsnz	___strtoxll@cp^0,f,c
  2306   001B18  2A45               	incf	(___strtoxll@cp+1)^0,f,c
  2307   001B1A  C044  FFD9         	movff	___strtoxll@cp,fsr2l
  2308   001B1E  C045  FFDA         	movff	___strtoxll@cp+1,fsr2h
  2309   001B22  50DF               	movf	indf2,w,c
  2310   001B24  6E46               	movwf	___strtoxll@c^0,c
  2311   001B26  EFA0  F00D         	goto	l6328
  2312   001B2A                     l6324:
  2313   001B2A  0E2B               	movlw	43
  2314   001B2C  1846               	xorwf	___strtoxll@c^0,w,c
  2315   001B2E  A4D8               	btfss	status,2,c
  2316   001B30  EF9C  F00D         	goto	u6801
  2317   001B34  EF9E  F00D         	goto	u6800
  2318   001B38                     u6801:
  2319   001B38  EFA0  F00D         	goto	l6328
  2320   001B3C                     u6800:
  2321   001B3C  EF8B  F00D         	goto	l6322
  2322   001B40                     l6328:
  2323   001B40  0E30               	movlw	48
  2324   001B42  1846               	xorwf	___strtoxll@c^0,w,c
  2325   001B44  A4D8               	btfss	status,2,c
  2326   001B46  EFA7  F00D         	goto	u6811
  2327   001B4A  EFA9  F00D         	goto	u6810
  2328   001B4E                     u6811:
  2329   001B4E  EF2D  F00E         	goto	l6362
  2330   001B52                     u6810:
  2331   001B52  4A44               	infsnz	___strtoxll@cp^0,f,c
  2332   001B54  2A45               	incf	(___strtoxll@cp+1)^0,f,c
  2333   001B56  C044  FFD9         	movff	___strtoxll@cp,fsr2l
  2334   001B5A  C045  FFDA         	movff	___strtoxll@cp+1,fsr2h
  2335   001B5E  50DF               	movf	indf2,w,c
  2336   001B60  6E46               	movwf	___strtoxll@c^0,c
  2337   001B62  501D               	movf	___strtoxll@base^0,w,c
  2338   001B64  101E               	iorwf	(___strtoxll@base+1)^0,w,c
  2339   001B66  B4D8               	btfsc	status,2,c
  2340   001B68  EFB8  F00D         	goto	u6821
  2341   001B6C  EFBA  F00D         	goto	u6820
  2342   001B70                     u6821:
  2343   001B70  EFC4  F00D         	goto	l6336
  2344   001B74                     u6820:
  2345   001B74  0E10               	movlw	16
  2346   001B76  181D               	xorwf	___strtoxll@base^0,w,c
  2347   001B78  101E               	iorwf	(___strtoxll@base+1)^0,w,c
  2348   001B7A  A4D8               	btfss	status,2,c
  2349   001B7C  EFC2  F00D         	goto	u6831
  2350   001B80  EFC4  F00D         	goto	u6830
  2351   001B84                     u6831:
  2352   001B84  EF1E  F00E         	goto	l6356
  2353   001B88                     u6830:
  2354   001B88                     l6336:
  2355   001B88  0E78               	movlw	120
  2356   001B8A  1846               	xorwf	___strtoxll@c^0,w,c
  2357   001B8C  B4D8               	btfsc	status,2,c
  2358   001B8E  EFCB  F00D         	goto	u6841
  2359   001B92  EFCD  F00D         	goto	u6840
  2360   001B96                     u6841:
  2361   001B96  EFD6  F00D         	goto	l6340
  2362   001B9A                     u6840:
  2363   001B9A  0E58               	movlw	88
  2364   001B9C  1846               	xorwf	___strtoxll@c^0,w,c
  2365   001B9E  A4D8               	btfss	status,2,c
  2366   001BA0  EFD4  F00D         	goto	u6851
  2367   001BA4  EFD6  F00D         	goto	u6850
  2368   001BA8                     u6851:
  2369   001BA8  EF1E  F00E         	goto	l6356
  2370   001BAC                     u6850:
  2371   001BAC                     l6340:
  2372   001BAC  0E00               	movlw	0
  2373   001BAE  6E1E               	movwf	(___strtoxll@base+1)^0,c
  2374   001BB0  0E10               	movlw	16
  2375   001BB2  6E1D               	movwf	___strtoxll@base^0,c
  2376   001BB4  4A44               	infsnz	___strtoxll@cp^0,f,c
  2377   001BB6  2A45               	incf	(___strtoxll@cp+1)^0,f,c
  2378   001BB8  C044  FFD9         	movff	___strtoxll@cp,fsr2l
  2379   001BBC  C045  FFDA         	movff	___strtoxll@cp+1,fsr2h
  2380   001BC0  50DF               	movf	indf2,w,c
  2381   001BC2  6E46               	movwf	___strtoxll@c^0,c
  2382   001BC4  5046               	movf	___strtoxll@c^0,w,c
  2383   001BC6  6E21               	movwf	??___strtoxll^0,c
  2384   001BC8  6A22               	clrf	(??___strtoxll+1)^0,c
  2385   001BCA  0E20               	movlw	32
  2386   001BCC  1221               	iorwf	??___strtoxll^0,f,c
  2387   001BCE  0E00               	movlw	0
  2388   001BD0  1222               	iorwf	(??___strtoxll+1)^0,f,c
  2389   001BD2  0E9F               	movlw	159
  2390   001BD4  2421               	addwf	??___strtoxll^0,w,c
  2391   001BD6  6E23               	movwf	(??___strtoxll+2)^0,c
  2392   001BD8  0EFF               	movlw	255
  2393   001BDA  2022               	addwfc	(??___strtoxll+1)^0,w,c
  2394   001BDC  6E24               	movwf	(??___strtoxll+3)^0,c
  2395   001BDE  5024               	movf	(??___strtoxll+3)^0,w,c
  2396   001BE0  E107               	bnz	u6861
  2397   001BE2  0E1A               	movlw	26
  2398   001BE4  5C23               	subwf	(??___strtoxll+2)^0,w,c
  2399   001BE6  B0D8               	btfsc	status,0,c
  2400   001BE8  EFF8  F00D         	goto	u6861
  2401   001BEC  EFFA  F00D         	goto	u6860
  2402   001BF0                     u6861:
  2403   001BF0  EF09  F00E         	goto	l6350
  2404   001BF4                     u6860:
  2405   001BF4  C046  F005         	movff	___strtoxll@c,toupper@c
  2406   001BF8  6A06               	clrf	(toupper@c+1)^0,c
  2407   001BFA  EC27  F02C         	call	_toupper	;wreg free
  2408   001BFE  0EC9               	movlw	201
  2409   001C00  2605               	addwf	?_toupper^0,f,c
  2410   001C02  0E10               	movlw	16
  2411   001C04  6005               	cpfslt	?_toupper^0,c
  2412   001C06  EF07  F00E         	goto	u6871
  2413   001C0A  EF09  F00E         	goto	u6870
  2414   001C0E                     u6871:
  2415   001C0E  EF17  F00E         	goto	l6352
  2416   001C12                     u6870:
  2417   001C12                     l6350:
  2418   001C12  C046  F007         	movff	___strtoxll@c,isalnum@c
  2419   001C16  6A08               	clrf	(isalnum@c+1)^0,c
  2420   001C18  EC47  F02A         	call	_isalnum	;wreg free
  2421   001C1C  5007               	movf	?_isalnum^0,w,c
  2422   001C1E  1008               	iorwf	(?_isalnum+1)^0,w,c
  2423   001C20  A4D8               	btfss	status,2,c
  2424   001C22  EF15  F00E         	goto	u6881
  2425   001C26  EF17  F00E         	goto	u6880
  2426   001C2A                     u6881:
  2427   001C2A  EF2D  F00E         	goto	l6362
  2428   001C2E                     u6880:
  2429   001C2E                     l6352:
  2430   001C2E  0E01               	movlw	1
  2431   001C30  6E31               	movwf	___strtoxll@conv_done^0,c
  2432   001C32  0644               	decf	___strtoxll@cp^0,f,c
  2433   001C34  A0D8               	btfss	status,0,c
  2434   001C36  0645               	decf	(___strtoxll@cp+1)^0,f,c
  2435   001C38  EF97  F00F         	goto	l6410
  2436   001C3C                     l6356:
  2437   001C3C  0E01               	movlw	1
  2438   001C3E  6E31               	movwf	___strtoxll@conv_done^0,c
  2439   001C40  501D               	movf	___strtoxll@base^0,w,c
  2440   001C42  101E               	iorwf	(___strtoxll@base+1)^0,w,c
  2441   001C44  A4D8               	btfss	status,2,c
  2442   001C46  EF27  F00E         	goto	u6891
  2443   001C4A  EF29  F00E         	goto	u6890
  2444   001C4E                     u6891:
  2445   001C4E  EF2D  F00E         	goto	l6362
  2446   001C52                     u6890:
  2447   001C52  0E00               	movlw	0
  2448   001C54  6E1E               	movwf	(___strtoxll@base+1)^0,c
  2449   001C56  0E08               	movlw	8
  2450   001C58  6E1D               	movwf	___strtoxll@base^0,c
  2451   001C5A                     l6362:
  2452   001C5A  501D               	movf	___strtoxll@base^0,w,c
  2453   001C5C  101E               	iorwf	(___strtoxll@base+1)^0,w,c
  2454   001C5E  A4D8               	btfss	status,2,c
  2455   001C60  EF34  F00E         	goto	u6901
  2456   001C64  EF36  F00E         	goto	u6900
  2457   001C68                     u6901:
  2458   001C68  EF3A  F00E         	goto	l1618
  2459   001C6C                     u6900:
  2460   001C6C  0E00               	movlw	0
  2461   001C6E  6E1E               	movwf	(___strtoxll@base+1)^0,c
  2462   001C70  0E0A               	movlw	10
  2463   001C72  6E1D               	movwf	___strtoxll@base^0,c
  2464   001C74                     l1618:
  2465   001C74  501F               	movf	___strtoxll@is_signed^0,w,c
  2466   001C76  B4D8               	btfsc	status,2,c
  2467   001C78  EF40  F00E         	goto	u6911
  2468   001C7C  EF42  F00E         	goto	u6910
  2469   001C80                     u6911:
  2470   001C80  EF6E  F00E         	goto	l1619
  2471   001C84                     u6910:
  2472   001C84  503A               	movf	___strtoxll@sign^0,w,c
  2473   001C86  A4D8               	btfss	status,2,c
  2474   001C88  EF48  F00E         	goto	u6921
  2475   001C8C  EF4A  F00E         	goto	u6920
  2476   001C90                     u6921:
  2477   001C90  EF5C  F00E         	goto	l6370
  2478   001C94                     u6920:
  2479   001C94  0EFF               	movlw	255
  2480   001C96  6E32               	movwf	___strtoxll@limit^0,c
  2481   001C98  0EFF               	movlw	255
  2482   001C9A  6E33               	movwf	(___strtoxll@limit+1)^0,c
  2483   001C9C  0EFF               	movlw	255
  2484   001C9E  6E34               	movwf	(___strtoxll@limit+2)^0,c
  2485   001CA0  0EFF               	movlw	255
  2486   001CA2  6E35               	movwf	(___strtoxll@limit+3)^0,c
  2487   001CA4  0EFF               	movlw	255
  2488   001CA6  6E36               	movwf	(___strtoxll@limit+4)^0,c
  2489   001CA8  0EFF               	movlw	255
  2490   001CAA  6E37               	movwf	(___strtoxll@limit+5)^0,c
  2491   001CAC  0EFF               	movlw	255
  2492   001CAE  6E38               	movwf	(___strtoxll@limit+6)^0,c
  2493   001CB0  0E7F               	movlw	127
  2494   001CB2  6E39               	movwf	(___strtoxll@limit+7)^0,c
  2495   001CB4  EF76  F00E         	goto	l1625
  2496   001CB8                     l6370:
  2497   001CB8  0E00               	movlw	0
  2498   001CBA  6E32               	movwf	___strtoxll@limit^0,c
  2499   001CBC  0E00               	movlw	0
  2500   001CBE  6E33               	movwf	(___strtoxll@limit+1)^0,c
  2501   001CC0  0E00               	movlw	0
  2502   001CC2  6E34               	movwf	(___strtoxll@limit+2)^0,c
  2503   001CC4  0E00               	movlw	0
  2504   001CC6  6E35               	movwf	(___strtoxll@limit+3)^0,c
  2505   001CC8  0E00               	movlw	0
  2506   001CCA  6E36               	movwf	(___strtoxll@limit+4)^0,c
  2507   001CCC  0E00               	movlw	0
  2508   001CCE  6E37               	movwf	(___strtoxll@limit+5)^0,c
  2509   001CD0  0E00               	movlw	0
  2510   001CD2  6E38               	movwf	(___strtoxll@limit+6)^0,c
  2511   001CD4  0E80               	movlw	128
  2512   001CD6  6E39               	movwf	(___strtoxll@limit+7)^0,c
  2513   001CD8  EF76  F00E         	goto	l1625
  2514   001CDC                     l1619:
  2515   001CDC  6832               	setf	___strtoxll@limit^0,c
  2516   001CDE  6833               	setf	(___strtoxll@limit+1)^0,c
  2517   001CE0  6834               	setf	(___strtoxll@limit+2)^0,c
  2518   001CE2  6835               	setf	(___strtoxll@limit+3)^0,c
  2519   001CE4  6836               	setf	(___strtoxll@limit+4)^0,c
  2520   001CE6  6837               	setf	(___strtoxll@limit+5)^0,c
  2521   001CE8  6838               	setf	(___strtoxll@limit+6)^0,c
  2522   001CEA  6839               	setf	(___strtoxll@limit+7)^0,c
  2523   001CEC                     l1625:
  2524   001CEC  C03C  F029         	movff	___strtoxll@a,___strtoxll@prev_a
  2525   001CF0  C03D  F02A         	movff	___strtoxll@a+1,___strtoxll@prev_a+1
  2526   001CF4  C03E  F02B         	movff	___strtoxll@a+2,___strtoxll@prev_a+2
  2527   001CF8  C03F  F02C         	movff	___strtoxll@a+3,___strtoxll@prev_a+3
  2528   001CFC  C040  F02D         	movff	___strtoxll@a+4,___strtoxll@prev_a+4
  2529   001D00  C041  F02E         	movff	___strtoxll@a+5,___strtoxll@prev_a+5
  2530   001D04  C042  F02F         	movff	___strtoxll@a+6,___strtoxll@prev_a+6
  2531   001D08  C043  F030         	movff	___strtoxll@a+7,___strtoxll@prev_a+7
  2532   001D0C  5046               	movf	___strtoxll@c^0,w,c
  2533   001D0E  6E21               	movwf	??___strtoxll^0,c
  2534   001D10  6A22               	clrf	(??___strtoxll+1)^0,c
  2535   001D12  0E20               	movlw	32
  2536   001D14  1221               	iorwf	??___strtoxll^0,f,c
  2537   001D16  0E00               	movlw	0
  2538   001D18  1222               	iorwf	(??___strtoxll+1)^0,f,c
  2539   001D1A  0E9F               	movlw	159
  2540   001D1C  2421               	addwf	??___strtoxll^0,w,c
  2541   001D1E  6E23               	movwf	(??___strtoxll+2)^0,c
  2542   001D20  0EFF               	movlw	255
  2543   001D22  2022               	addwfc	(??___strtoxll+1)^0,w,c
  2544   001D24  6E24               	movwf	(??___strtoxll+3)^0,c
  2545   001D26  5024               	movf	(??___strtoxll+3)^0,w,c
  2546   001D28  E107               	bnz	u6931
  2547   001D2A  0E1A               	movlw	26
  2548   001D2C  5C23               	subwf	(??___strtoxll+2)^0,w,c
  2549   001D2E  B0D8               	btfsc	status,0,c
  2550   001D30  EF9C  F00E         	goto	u6931
  2551   001D34  EF9E  F00E         	goto	u6930
  2552   001D38                     u6931:
  2553   001D38  EFA8  F00E         	goto	l6380
  2554   001D3C                     u6930:
  2555   001D3C  C046  F005         	movff	___strtoxll@c,toupper@c
  2556   001D40  6A06               	clrf	(toupper@c+1)^0,c
  2557   001D42  EC27  F02C         	call	_toupper	;wreg free
  2558   001D46  5005               	movf	?_toupper^0,w,c
  2559   001D48  0FC9               	addlw	201
  2560   001D4A  6E46               	movwf	___strtoxll@c^0,c
  2561   001D4C  EFBB  F00E         	goto	l6384
  2562   001D50                     l6380:
  2563   001D50  0ED0               	movlw	208
  2564   001D52  2446               	addwf	___strtoxll@c^0,w,c
  2565   001D54  6E21               	movwf	??___strtoxll^0,c
  2566   001D56  6A22               	clrf	(??___strtoxll+1)^0,c
  2567   001D58  0EFF               	movlw	255
  2568   001D5A  2222               	addwfc	(??___strtoxll+1)^0,f,c
  2569   001D5C  5022               	movf	(??___strtoxll+1)^0,w,c
  2570   001D5E  E107               	bnz	u6941
  2571   001D60  0E0A               	movlw	10
  2572   001D62  5C21               	subwf	??___strtoxll^0,w,c
  2573   001D64  B0D8               	btfsc	status,0,c
  2574   001D66  EFB7  F00E         	goto	u6941
  2575   001D6A  EFB9  F00E         	goto	u6940
  2576   001D6E                     u6941:
  2577   001D6E  EF77  F00F         	goto	l6404
  2578   001D72                     u6940:
  2579   001D72  0E30               	movlw	48
  2580   001D74  5E46               	subwf	___strtoxll@c^0,f,c
  2581   001D76                     l6384:
  2582   001D76  5046               	movf	___strtoxll@c^0,w,c
  2583   001D78  6E21               	movwf	??___strtoxll^0,c
  2584   001D7A  6A22               	clrf	(??___strtoxll+1)^0,c
  2585   001D7C  501D               	movf	___strtoxll@base^0,w,c
  2586   001D7E  5C21               	subwf	??___strtoxll^0,w,c
  2587   001D80  5022               	movf	(??___strtoxll+1)^0,w,c
  2588   001D82  0A80               	xorlw	128
  2589   001D84  6E23               	movwf	(??___strtoxll+2)^0,c
  2590   001D86  501E               	movf	(___strtoxll@base+1)^0,w,c
  2591   001D88  0A80               	xorlw	128
  2592   001D8A  5823               	subwfb	(??___strtoxll+2)^0,w,c
  2593   001D8C  A0D8               	btfss	status,0,c
  2594   001D8E  EFCB  F00E         	goto	u6951
  2595   001D92  EFCD  F00E         	goto	u6950
  2596   001D96                     u6951:
  2597   001D96  EFCF  F00E         	goto	l6388
  2598   001D9A                     u6950:
  2599   001D9A  EF77  F00F         	goto	l6404
  2600   001D9E                     l6388:
  2601   001D9E  503B               	movf	___strtoxll@skip^0,w,c
  2602   001DA0  A4D8               	btfss	status,2,c
  2603   001DA2  EFD5  F00E         	goto	u6961
  2604   001DA6  EFD7  F00E         	goto	u6960
  2605   001DAA                     u6961:
  2606   001DAA  EF6B  F00F         	goto	l6400
  2607   001DAE                     u6960:
  2608   001DAE  C01D  F001         	movff	___strtoxll@base,___omul@multiplier
  2609   001DB2  C01E  F002         	movff	___strtoxll@base+1,___omul@multiplier+1
  2610   001DB6  0E00               	movlw	0
  2611   001DB8  BE02               	btfsc	(___omul@multiplier+1)^0,7,c
  2612   001DBA  0EFF               	movlw	-1
  2613   001DBC  6E03               	movwf	(___omul@multiplier+2)^0,c
  2614   001DBE  6E04               	movwf	(___omul@multiplier+3)^0,c
  2615   001DC0  6E05               	movwf	(___omul@multiplier+4)^0,c
  2616   001DC2  6E06               	movwf	(___omul@multiplier+5)^0,c
  2617   001DC4  6E07               	movwf	(___omul@multiplier+6)^0,c
  2618   001DC6  6E08               	movwf	(___omul@multiplier+7)^0,c
  2619   001DC8  C03C  F009         	movff	___strtoxll@a,___omul@multiplicand
  2620   001DCC  C03D  F00A         	movff	___strtoxll@a+1,___omul@multiplicand+1
  2621   001DD0  C03E  F00B         	movff	___strtoxll@a+2,___omul@multiplicand+2
  2622   001DD4  C03F  F00C         	movff	___strtoxll@a+3,___omul@multiplicand+3
  2623   001DD8  C040  F00D         	movff	___strtoxll@a+4,___omul@multiplicand+4
  2624   001DDC  C041  F00E         	movff	___strtoxll@a+5,___omul@multiplicand+5
  2625   001DE0  C042  F00F         	movff	___strtoxll@a+6,___omul@multiplicand+6
  2626   001DE4  C043  F010         	movff	___strtoxll@a+7,___omul@multiplicand+7
  2627   001DE8  EC9E  F027         	call	___omul	;wreg free
  2628   001DEC  C001  F021         	movff	?___omul,??___strtoxll
  2629   001DF0  C002  F022         	movff	?___omul+1,??___strtoxll+1
  2630   001DF4  C003  F023         	movff	?___omul+2,??___strtoxll+2
  2631   001DF8  C004  F024         	movff	?___omul+3,??___strtoxll+3
  2632   001DFC  C005  F025         	movff	?___omul+4,??___strtoxll+4
  2633   001E00  C006  F026         	movff	?___omul+5,??___strtoxll+5
  2634   001E04  C007  F027         	movff	?___omul+6,??___strtoxll+6
  2635   001E08  C008  F028         	movff	?___omul+7,??___strtoxll+7
  2636   001E0C  5046               	movf	___strtoxll@c^0,w,c
  2637   001E0E  2421               	addwf	??___strtoxll^0,w,c
  2638   001E10  6E3C               	movwf	___strtoxll@a^0,c
  2639   001E12  0E00               	movlw	0
  2640   001E14  2022               	addwfc	(??___strtoxll+1)^0,w,c
  2641   001E16  6E3D               	movwf	(___strtoxll@a+1)^0,c
  2642   001E18  0E00               	movlw	0
  2643   001E1A  2023               	addwfc	(??___strtoxll+2)^0,w,c
  2644   001E1C  6E3E               	movwf	(___strtoxll@a+2)^0,c
  2645   001E1E  0E00               	movlw	0
  2646   001E20  2024               	addwfc	(??___strtoxll+3)^0,w,c
  2647   001E22  6E3F               	movwf	(___strtoxll@a+3)^0,c
  2648   001E24  0E00               	movlw	0
  2649   001E26  2025               	addwfc	(??___strtoxll+4)^0,w,c
  2650   001E28  6E40               	movwf	(___strtoxll@a+4)^0,c
  2651   001E2A  0E00               	movlw	0
  2652   001E2C  2026               	addwfc	(??___strtoxll+5)^0,w,c
  2653   001E2E  6E41               	movwf	(___strtoxll@a+5)^0,c
  2654   001E30  0E00               	movlw	0
  2655   001E32  2027               	addwfc	(??___strtoxll+6)^0,w,c
  2656   001E34  6E42               	movwf	(___strtoxll@a+6)^0,c
  2657   001E36  0E00               	movlw	0
  2658   001E38  2028               	addwfc	(??___strtoxll+7)^0,w,c
  2659   001E3A  6E43               	movwf	(___strtoxll@a+7)^0,c
  2660   001E3C  5029               	movf	___strtoxll@prev_a^0,w,c
  2661   001E3E  5C3C               	subwf	___strtoxll@a^0,w,c
  2662   001E40  502A               	movf	(___strtoxll@prev_a+1)^0,w,c
  2663   001E42  583D               	subwfb	(___strtoxll@a+1)^0,w,c
  2664   001E44  502B               	movf	(___strtoxll@prev_a+2)^0,w,c
  2665   001E46  583E               	subwfb	(___strtoxll@a+2)^0,w,c
  2666   001E48  502C               	movf	(___strtoxll@prev_a+3)^0,w,c
  2667   001E4A  583F               	subwfb	(___strtoxll@a+3)^0,w,c
  2668   001E4C  502D               	movf	(___strtoxll@prev_a+4)^0,w,c
  2669   001E4E  5840               	subwfb	(___strtoxll@a+4)^0,w,c
  2670   001E50  502E               	movf	(___strtoxll@prev_a+5)^0,w,c
  2671   001E52  5841               	subwfb	(___strtoxll@a+5)^0,w,c
  2672   001E54  502F               	movf	(___strtoxll@prev_a+6)^0,w,c
  2673   001E56  5842               	subwfb	(___strtoxll@a+6)^0,w,c
  2674   001E58  5030               	movf	(___strtoxll@prev_a+7)^0,w,c
  2675   001E5A  5843               	subwfb	(___strtoxll@a+7)^0,w,c
  2676   001E5C  A0D8               	btfss	status,0,c
  2677   001E5E  EF33  F00F         	goto	u6971
  2678   001E62  EF35  F00F         	goto	u6970
  2679   001E66                     u6971:
  2680   001E66  EF54  F00F         	goto	l1639
  2681   001E6A                     u6970:
  2682   001E6A  501F               	movf	___strtoxll@is_signed^0,w,c
  2683   001E6C  B4D8               	btfsc	status,2,c
  2684   001E6E  EF3B  F00F         	goto	u6981
  2685   001E72  EF3D  F00F         	goto	u6980
  2686   001E76                     u6981:
  2687   001E76  EF6B  F00F         	goto	l6400
  2688   001E7A                     u6980:
  2689   001E7A  503C               	movf	___strtoxll@a^0,w,c
  2690   001E7C  5C32               	subwf	___strtoxll@limit^0,w,c
  2691   001E7E  503D               	movf	(___strtoxll@a+1)^0,w,c
  2692   001E80  5833               	subwfb	(___strtoxll@limit+1)^0,w,c
  2693   001E82  503E               	movf	(___strtoxll@a+2)^0,w,c
  2694   001E84  5834               	subwfb	(___strtoxll@limit+2)^0,w,c
  2695   001E86  503F               	movf	(___strtoxll@a+3)^0,w,c
  2696   001E88  5835               	subwfb	(___strtoxll@limit+3)^0,w,c
  2697   001E8A  5040               	movf	(___strtoxll@a+4)^0,w,c
  2698   001E8C  5836               	subwfb	(___strtoxll@limit+4)^0,w,c
  2699   001E8E  5041               	movf	(___strtoxll@a+5)^0,w,c
  2700   001E90  5837               	subwfb	(___strtoxll@limit+5)^0,w,c
  2701   001E92  5042               	movf	(___strtoxll@a+6)^0,w,c
  2702   001E94  5838               	subwfb	(___strtoxll@limit+6)^0,w,c
  2703   001E96  5043               	movf	(___strtoxll@a+7)^0,w,c
  2704   001E98  5839               	subwfb	(___strtoxll@limit+7)^0,w,c
  2705   001E9A  B0D8               	btfsc	status,0,c
  2706   001E9C  EF52  F00F         	goto	u6991
  2707   001EA0  EF54  F00F         	goto	u6990
  2708   001EA4                     u6991:
  2709   001EA4  EF6B  F00F         	goto	l6400
  2710   001EA8                     u6990:
  2711   001EA8                     l1639:
  2712   001EA8  C032  F03C         	movff	___strtoxll@limit,___strtoxll@a
  2713   001EAC  C033  F03D         	movff	___strtoxll@limit+1,___strtoxll@a+1
  2714   001EB0  C034  F03E         	movff	___strtoxll@limit+2,___strtoxll@a+2
  2715   001EB4  C035  F03F         	movff	___strtoxll@limit+3,___strtoxll@a+3
  2716   001EB8  C036  F040         	movff	___strtoxll@limit+4,___strtoxll@a+4
  2717   001EBC  C037  F041         	movff	___strtoxll@limit+5,___strtoxll@a+5
  2718   001EC0  C038  F042         	movff	___strtoxll@limit+6,___strtoxll@a+6
  2719   001EC4  C039  F043         	movff	___strtoxll@limit+7,___strtoxll@a+7
  2720   001EC8  0E00               	movlw	0
  2721   001ECA  0100               	movlb	0	; () banked
  2722   001ECC  6F99               	movwf	(_errno+1)& (0+255),b
  2723   001ECE  0E22               	movlw	34
  2724   001ED0  6F98               	movwf	_errno& (0+255),b
  2725   001ED2  0E01               	movlw	1
  2726   001ED4  6E3B               	movwf	___strtoxll@skip^0,c
  2727   001ED6                     l6400:
  2728   001ED6  4A44               	infsnz	___strtoxll@cp^0,f,c
  2729   001ED8  2A45               	incf	(___strtoxll@cp+1)^0,f,c
  2730   001EDA  C044  FFD9         	movff	___strtoxll@cp,fsr2l
  2731   001EDE  C045  FFDA         	movff	___strtoxll@cp+1,fsr2h
  2732   001EE2  50DF               	movf	indf2,w,c
  2733   001EE4  6E46               	movwf	___strtoxll@c^0,c
  2734   001EE6  0E01               	movlw	1
  2735   001EE8  6E31               	movwf	___strtoxll@conv_done^0,c
  2736   001EEA  EF76  F00E         	goto	l1625
  2737   001EEE                     l6404:
  2738   001EEE  503B               	movf	___strtoxll@skip^0,w,c
  2739   001EF0  A4D8               	btfss	status,2,c
  2740   001EF2  EF7D  F00F         	goto	u7001
  2741   001EF6  EF7F  F00F         	goto	u7000
  2742   001EFA                     u7001:
  2743   001EFA  EF97  F00F         	goto	l6410
  2744   001EFE                     u7000:
  2745   001EFE  503A               	movf	___strtoxll@sign^0,w,c
  2746   001F00  B4D8               	btfsc	status,2,c
  2747   001F02  EF85  F00F         	goto	u7011
  2748   001F06  EF87  F00F         	goto	u7010
  2749   001F0A                     u7011:
  2750   001F0A  EF97  F00F         	goto	l6410
  2751   001F0E                     u7010:
  2752   001F0E  1E43               	comf	(___strtoxll@a+7)^0,f,c
  2753   001F10  1E42               	comf	(___strtoxll@a+6)^0,f,c
  2754   001F12  1E41               	comf	(___strtoxll@a+5)^0,f,c
  2755   001F14  1E40               	comf	(___strtoxll@a+4)^0,f,c
  2756   001F16  1E3F               	comf	(___strtoxll@a+3)^0,f,c
  2757   001F18  1E3E               	comf	(___strtoxll@a+2)^0,f,c
  2758   001F1A  1E3D               	comf	(___strtoxll@a+1)^0,f,c
  2759   001F1C  6C3C               	negf	___strtoxll@a^0,c
  2760   001F1E  0E00               	movlw	0
  2761   001F20  223D               	addwfc	(___strtoxll@a+1)^0,f,c
  2762   001F22  223E               	addwfc	(___strtoxll@a+2)^0,f,c
  2763   001F24  223F               	addwfc	(___strtoxll@a+3)^0,f,c
  2764   001F26  2240               	addwfc	(___strtoxll@a+4)^0,f,c
  2765   001F28  2241               	addwfc	(___strtoxll@a+5)^0,f,c
  2766   001F2A  2242               	addwfc	(___strtoxll@a+6)^0,f,c
  2767   001F2C  2243               	addwfc	(___strtoxll@a+7)^0,f,c
  2768   001F2E                     l6410:
  2769   001F2E  501B               	movf	___strtoxll@endptr^0,w,c
  2770   001F30  101C               	iorwf	(___strtoxll@endptr+1)^0,w,c
  2771   001F32  B4D8               	btfsc	status,2,c
  2772   001F34  EF9E  F00F         	goto	u7021
  2773   001F38  EFA0  F00F         	goto	u7020
  2774   001F3C                     u7021:
  2775   001F3C  EFB4  F00F         	goto	l6418
  2776   001F40                     u7020:
  2777   001F40  5031               	movf	___strtoxll@conv_done^0,w,c
  2778   001F42  A4D8               	btfss	status,2,c
  2779   001F44  EFA6  F00F         	goto	u7031
  2780   001F48  EFA8  F00F         	goto	u7030
  2781   001F4C                     u7031:
  2782   001F4C  EFAC  F00F         	goto	l6416
  2783   001F50                     u7030:
  2784   001F50  C019  F044         	movff	___strtoxll@s,___strtoxll@cp
  2785   001F54  C01A  F045         	movff	___strtoxll@s+1,___strtoxll@cp+1
  2786   001F58                     l6416:
  2787   001F58  C01B  FFD9         	movff	___strtoxll@endptr,fsr2l
  2788   001F5C  C01C  FFDA         	movff	___strtoxll@endptr+1,fsr2h
  2789   001F60  C044  FFDE         	movff	___strtoxll@cp,postinc2
  2790   001F64  C045  FFDD         	movff	___strtoxll@cp+1,postdec2
  2791   001F68                     l6418:
  2792   001F68  C03C  F019         	movff	___strtoxll@a,?___strtoxll
  2793   001F6C  C03D  F01A         	movff	___strtoxll@a+1,?___strtoxll+1
  2794   001F70  C03E  F01B         	movff	___strtoxll@a+2,?___strtoxll+2
  2795   001F74  C03F  F01C         	movff	___strtoxll@a+3,?___strtoxll+3
  2796   001F78  C040  F01D         	movff	___strtoxll@a+4,?___strtoxll+4
  2797   001F7C  C041  F01E         	movff	___strtoxll@a+5,?___strtoxll+5
  2798   001F80  C042  F01F         	movff	___strtoxll@a+6,?___strtoxll+6
  2799   001F84  C043  F020         	movff	___strtoxll@a+7,?___strtoxll+7
  2800   001F88  0012               	return		;funcret
  2801   001F8A                     __end_of___strtoxll:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _toupper *****************
  2805 ;; Defined at:
  2806 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\toupper.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  c               2    4[COMRAM] int 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  2    4[COMRAM] int 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;Total ram usage:        4 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 1
  2827 ;; This function calls:
  2828 ;;		_islower
  2829 ;; This function is called by:
  2830 ;;		___strtoxll
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           	psect	text3
  2835   00584E                     __ptext3:
  2836                           	callstack 0
  2837   00584E                     _toupper:
  2838                           	callstack 27
  2839   00584E  0E9F               	movlw	159
  2840   005850  2405               	addwf	toupper@c^0,w,c
  2841   005852  6E07               	movwf	??_toupper^0,c
  2842   005854  0EFF               	movlw	255
  2843   005856  2006               	addwfc	(toupper@c+1)^0,w,c
  2844   005858  6E08               	movwf	(??_toupper+1)^0,c
  2845   00585A  5008               	movf	(??_toupper+1)^0,w,c
  2846   00585C  E107               	bnz	u6541
  2847   00585E  0E1A               	movlw	26
  2848   005860  5C07               	subwf	??_toupper^0,w,c
  2849   005862  B0D8               	btfsc	status,0,c
  2850   005864  EF36  F02C         	goto	u6541
  2851   005868  EF38  F02C         	goto	u6540
  2852   00586C                     u6541:
  2853   00586C  EF3E  F02C         	goto	l1684
  2854   005870                     u6540:
  2855   005870  0E5F               	movlw	95
  2856   005872  1405               	andwf	toupper@c^0,w,c
  2857   005874  6E05               	movwf	?_toupper^0,c
  2858   005876  6A06               	clrf	(?_toupper+1)^0,c
  2859   005878  EF42  F02C         	goto	l1687
  2860   00587C                     l1684:
  2861   00587C  C005  F005         	movff	toupper@c,?_toupper
  2862   005880  C006  F006         	movff	toupper@c+1,?_toupper+1
  2863   005884                     l1687:
  2864   005884  0012               	return		;funcret
  2865   005886                     __end_of_toupper:
  2866                           	callstack 0
  2867                           
  2868 ;; *************** function _islower *****************
  2869 ;; Defined at:
  2870 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\islower.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  c               2    0[COMRAM] int 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  2    0[COMRAM] int 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;Total ram usage:        4 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_toupper
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text4
  2898   0058F6                     __ptext4:
  2899                           	callstack 0
  2900   0058F6                     _islower:
  2901                           	callstack 27
  2902   0058F6  0E9F               	movlw	159
  2903   0058F8  2401               	addwf	islower@c^0,w,c
  2904   0058FA  6E03               	movwf	??_islower^0,c
  2905   0058FC  0EFF               	movlw	255
  2906   0058FE  2002               	addwfc	(islower@c+1)^0,w,c
  2907   005900  6E04               	movwf	(??_islower+1)^0,c
  2908   005902  5004               	movf	(??_islower+1)^0,w,c
  2909   005904  E10A               	bnz	u6290
  2910   005906  0E1A               	movlw	26
  2911   005908  5C03               	subwf	??_islower^0,w,c
  2912   00590A  A0D8               	btfss	status,0,c
  2913   00590C  EF8A  F02C         	goto	u6291
  2914   005910  EF8D  F02C         	goto	u6290
  2915   005914                     u6291:
  2916   005914  0E01               	movlw	1
  2917   005916  EF8E  F02C         	goto	u6300
  2918   00591A                     u6290:
  2919   00591A  0E00               	movlw	0
  2920   00591C                     u6300:
  2921   00591C  6E01               	movwf	?_islower^0,c
  2922   00591E  6A02               	clrf	(?_islower+1)^0,c
  2923   005920  0012               	return		;funcret
  2924   005922                     __end_of_islower:
  2925                           	callstack 0
  2926                           
  2927 ;; *************** function _isspace *****************
  2928 ;; Defined at:
  2929 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\isspace.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  c               2    0[COMRAM] int 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;		None
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  2    0[COMRAM] int 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;Total ram usage:        5 bytes
  2948 ;; Hardware stack levels used: 1
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		___strtoxll
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text5
  2957   00563E                     __ptext5:
  2958                           	callstack 0
  2959   00563E                     _isspace:
  2960                           	callstack 28
  2961   00563E  0E01               	movlw	1
  2962   005640  6E05               	movwf	_isspace$1710^0,c
  2963   005642  0E20               	movlw	32
  2964   005644  1801               	xorwf	isspace@c^0,w,c
  2965   005646  1002               	iorwf	(isspace@c+1)^0,w,c
  2966   005648  B4D8               	btfsc	status,2,c
  2967   00564A  EF29  F02B         	goto	u6521
  2968   00564E  EF2B  F02B         	goto	u6520
  2969   005652                     u6521:
  2970   005652  EF3E  F02B         	goto	l6166
  2971   005656                     u6520:
  2972   005656  0EF7               	movlw	247
  2973   005658  2401               	addwf	isspace@c^0,w,c
  2974   00565A  6E03               	movwf	??_isspace^0,c
  2975   00565C  0EFF               	movlw	255
  2976   00565E  2002               	addwfc	(isspace@c+1)^0,w,c
  2977   005660  6E04               	movwf	(??_isspace+1)^0,c
  2978   005662  5004               	movf	(??_isspace+1)^0,w,c
  2979   005664  E109               	bnz	u6530
  2980   005666  0E05               	movlw	5
  2981   005668  5C03               	subwf	??_isspace^0,w,c
  2982   00566A  A0D8               	btfss	status,0,c
  2983   00566C  EF3A  F02B         	goto	u6531
  2984   005670  EF3C  F02B         	goto	u6530
  2985   005674                     u6531:
  2986   005674  EF3E  F02B         	goto	l6166
  2987   005678                     u6530:
  2988   005678  0E00               	movlw	0
  2989   00567A  6E05               	movwf	_isspace$1710^0,c
  2990   00567C                     l6166:
  2991   00567C  C005  F001         	movff	_isspace$1710,?_isspace
  2992   005680  6A02               	clrf	(?_isspace+1)^0,c
  2993   005682  0012               	return		;funcret
  2994   005684                     __end_of_isspace:
  2995                           	callstack 0
  2996                           
  2997 ;; *************** function _isdigit *****************
  2998 ;; Defined at:
  2999 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\isdigit.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  c               2    0[COMRAM] int 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;		None
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  2    0[COMRAM] int 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;Total ram usage:        4 bytes
  3018 ;; Hardware stack levels used: 1
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		___strtoxll
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text6
  3027   005922                     __ptext6:
  3028                           	callstack 0
  3029   005922                     _isdigit:
  3030                           	callstack 28
  3031   005922  0ED0               	movlw	208
  3032   005924  2401               	addwf	isdigit@c^0,w,c
  3033   005926  6E03               	movwf	??_isdigit^0,c
  3034   005928  0EFF               	movlw	255
  3035   00592A  2002               	addwfc	(isdigit@c+1)^0,w,c
  3036   00592C  6E04               	movwf	(??_isdigit+1)^0,c
  3037   00592E  5004               	movf	(??_isdigit+1)^0,w,c
  3038   005930  E10A               	bnz	u6570
  3039   005932  0E0A               	movlw	10
  3040   005934  5C03               	subwf	??_isdigit^0,w,c
  3041   005936  A0D8               	btfss	status,0,c
  3042   005938  EFA0  F02C         	goto	u6571
  3043   00593C  EFA3  F02C         	goto	u6570
  3044   005940                     u6571:
  3045   005940  0E01               	movlw	1
  3046   005942  EFA4  F02C         	goto	u6580
  3047   005946                     u6570:
  3048   005946  0E00               	movlw	0
  3049   005948                     u6580:
  3050   005948  6E01               	movwf	?_isdigit^0,c
  3051   00594A  6A02               	clrf	(?_isdigit+1)^0,c
  3052   00594C  0012               	return		;funcret
  3053   00594E                     __end_of_isdigit:
  3054                           	callstack 0
  3055                           
  3056 ;; *************** function _isalnum *****************
  3057 ;; Defined at:
  3058 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\isalnum.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  c               2    6[COMRAM] int 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  2    6[COMRAM] int 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;Total ram usage:        7 bytes
  3077 ;; Hardware stack levels used: 1
  3078 ;; Hardware stack levels required when called: 1
  3079 ;; This function calls:
  3080 ;;		_isalpha
  3081 ;; This function is called by:
  3082 ;;		___strtoxll
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text7
  3087   00548E                     __ptext7:
  3088                           	callstack 0
  3089   00548E                     _isalnum:
  3090                           	callstack 27
  3091   00548E  0E01               	movlw	1
  3092   005490  6E0D               	movwf	_isalnum$1682^0,c
  3093   005492  0E20               	movlw	32
  3094   005494  1007               	iorwf	isalnum@c^0,w,c
  3095   005496  6E09               	movwf	??_isalnum^0,c
  3096   005498  0E00               	movlw	0
  3097   00549A  1008               	iorwf	(isalnum@c+1)^0,w,c
  3098   00549C  6E0A               	movwf	(??_isalnum+1)^0,c
  3099   00549E  0E9F               	movlw	159
  3100   0054A0  2409               	addwf	??_isalnum^0,w,c
  3101   0054A2  6E0B               	movwf	(??_isalnum+2)^0,c
  3102   0054A4  0EFF               	movlw	255
  3103   0054A6  200A               	addwfc	(??_isalnum+1)^0,w,c
  3104   0054A8  6E0C               	movwf	(??_isalnum+3)^0,c
  3105   0054AA  500C               	movf	(??_isalnum+3)^0,w,c
  3106   0054AC  E109               	bnz	u6550
  3107   0054AE  0E1A               	movlw	26
  3108   0054B0  5C0B               	subwf	(??_isalnum+2)^0,w,c
  3109   0054B2  A0D8               	btfss	status,0,c
  3110   0054B4  EF5E  F02A         	goto	u6551
  3111   0054B8  EF60  F02A         	goto	u6550
  3112   0054BC                     u6551:
  3113   0054BC  EF73  F02A         	goto	l6194
  3114   0054C0                     u6550:
  3115   0054C0  0ED0               	movlw	208
  3116   0054C2  2407               	addwf	isalnum@c^0,w,c
  3117   0054C4  6E09               	movwf	??_isalnum^0,c
  3118   0054C6  0EFF               	movlw	255
  3119   0054C8  2008               	addwfc	(isalnum@c+1)^0,w,c
  3120   0054CA  6E0A               	movwf	(??_isalnum+1)^0,c
  3121   0054CC  500A               	movf	(??_isalnum+1)^0,w,c
  3122   0054CE  E109               	bnz	u6560
  3123   0054D0  0E0A               	movlw	10
  3124   0054D2  5C09               	subwf	??_isalnum^0,w,c
  3125   0054D4  A0D8               	btfss	status,0,c
  3126   0054D6  EF6F  F02A         	goto	u6561
  3127   0054DA  EF71  F02A         	goto	u6560
  3128   0054DE                     u6561:
  3129   0054DE  EF73  F02A         	goto	l6194
  3130   0054E2                     u6560:
  3131   0054E2  0E00               	movlw	0
  3132   0054E4  6E0D               	movwf	_isalnum$1682^0,c
  3133   0054E6                     l6194:
  3134   0054E6  C00D  F007         	movff	_isalnum$1682,?_isalnum
  3135   0054EA  6A08               	clrf	(?_isalnum+1)^0,c
  3136   0054EC  0012               	return		;funcret
  3137   0054EE                     __end_of_isalnum:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _isalpha *****************
  3141 ;; Defined at:
  3142 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\isalpha.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  c               2    0[COMRAM] int 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  2    0[COMRAM] int 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;Total ram usage:        6 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		___strtoxll
  3166 ;;		_isalnum
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text8
  3171   005886                     __ptext8:
  3172                           	callstack 0
  3173   005886                     _isalpha:
  3174                           	callstack 28
  3175   005886  0E20               	movlw	32
  3176   005888  1001               	iorwf	isalpha@c^0,w,c
  3177   00588A  6E03               	movwf	??_isalpha^0,c
  3178   00588C  0E00               	movlw	0
  3179   00588E  1002               	iorwf	(isalpha@c+1)^0,w,c
  3180   005890  6E04               	movwf	(??_isalpha+1)^0,c
  3181   005892  0E9F               	movlw	159
  3182   005894  2403               	addwf	??_isalpha^0,w,c
  3183   005896  6E05               	movwf	(??_isalpha+2)^0,c
  3184   005898  0EFF               	movlw	255
  3185   00589A  2004               	addwfc	(??_isalpha+1)^0,w,c
  3186   00589C  6E06               	movwf	(??_isalpha+3)^0,c
  3187   00589E  5006               	movf	(??_isalpha+3)^0,w,c
  3188   0058A0  E10A               	bnz	u6270
  3189   0058A2  0E1A               	movlw	26
  3190   0058A4  5C05               	subwf	(??_isalpha+2)^0,w,c
  3191   0058A6  A0D8               	btfss	status,0,c
  3192   0058A8  EF58  F02C         	goto	u6271
  3193   0058AC  EF5B  F02C         	goto	u6270
  3194   0058B0                     u6271:
  3195   0058B0  0E01               	movlw	1
  3196   0058B2  EF5C  F02C         	goto	u6280
  3197   0058B6                     u6270:
  3198   0058B6  0E00               	movlw	0
  3199   0058B8                     u6280:
  3200   0058B8  6E01               	movwf	?_isalpha^0,c
  3201   0058BA  6A02               	clrf	(?_isalpha+1)^0,c
  3202   0058BC  0012               	return		;funcret
  3203   0058BE                     __end_of_isalpha:
  3204                           	callstack 0
  3205                           
  3206 ;; *************** function ___omul *****************
  3207 ;; Defined at:
  3208 ;;		line 91 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul64.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  multiplier      8    0[COMRAM] unsigned long long 
  3211 ;;  multiplicand    8    8[COMRAM] unsigned long long 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  product         8   16[COMRAM] unsigned long long 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  8    0[COMRAM] unsigned long long 
  3216 ;; Registers used:
  3217 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3223 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3226 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;Total ram usage:       24 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		___strtoxll
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text9
  3237   004F3C                     __ptext9:
  3238                           	callstack 0
  3239   004F3C                     ___omul:
  3240                           	callstack 28
  3241   004F3C  EE20  F011         	lfsr	2,___omul@product
  3242   004F40  0E07               	movlw	7
  3243   004F42                     u6431:
  3244   004F42  6ADE               	clrf	postinc2,c
  3245   004F44  06E8               	decf	wreg,f,c
  3246   004F46  E2FD               	bc	u6431
  3247   004F48                     l5998:
  3248   004F48  A001               	btfss	___omul@multiplier^0,0,c
  3249   004F4A  EFA9  F027         	goto	u6441
  3250   004F4E  EFAB  F027         	goto	u6440
  3251   004F52                     u6441:
  3252   004F52  EFBB  F027         	goto	l6002
  3253   004F56                     u6440:
  3254   004F56  5009               	movf	___omul@multiplicand^0,w,c
  3255   004F58  2611               	addwf	___omul@product^0,f,c
  3256   004F5A  500A               	movf	(___omul@multiplicand+1)^0,w,c
  3257   004F5C  2212               	addwfc	(___omul@product+1)^0,f,c
  3258   004F5E  500B               	movf	(___omul@multiplicand+2)^0,w,c
  3259   004F60  2213               	addwfc	(___omul@product+2)^0,f,c
  3260   004F62  500C               	movf	(___omul@multiplicand+3)^0,w,c
  3261   004F64  2214               	addwfc	(___omul@product+3)^0,f,c
  3262   004F66  500D               	movf	(___omul@multiplicand+4)^0,w,c
  3263   004F68  2215               	addwfc	(___omul@product+4)^0,f,c
  3264   004F6A  500E               	movf	(___omul@multiplicand+5)^0,w,c
  3265   004F6C  2216               	addwfc	(___omul@product+5)^0,f,c
  3266   004F6E  500F               	movf	(___omul@multiplicand+6)^0,w,c
  3267   004F70  2217               	addwfc	(___omul@product+6)^0,f,c
  3268   004F72  5010               	movf	(___omul@multiplicand+7)^0,w,c
  3269   004F74  2218               	addwfc	(___omul@product+7)^0,f,c
  3270   004F76                     l6002:
  3271   004F76  90D8               	bcf	status,0,c
  3272   004F78  3609               	rlcf	___omul@multiplicand^0,f,c
  3273   004F7A  360A               	rlcf	(___omul@multiplicand+1)^0,f,c
  3274   004F7C  360B               	rlcf	(___omul@multiplicand+2)^0,f,c
  3275   004F7E  360C               	rlcf	(___omul@multiplicand+3)^0,f,c
  3276   004F80  360D               	rlcf	(___omul@multiplicand+4)^0,f,c
  3277   004F82  360E               	rlcf	(___omul@multiplicand+5)^0,f,c
  3278   004F84  360F               	rlcf	(___omul@multiplicand+6)^0,f,c
  3279   004F86  3610               	rlcf	(___omul@multiplicand+7)^0,f,c
  3280   004F88  90D8               	bcf	status,0,c
  3281   004F8A  3208               	rrcf	(___omul@multiplier+7)^0,f,c
  3282   004F8C  3207               	rrcf	(___omul@multiplier+6)^0,f,c
  3283   004F8E  3206               	rrcf	(___omul@multiplier+5)^0,f,c
  3284   004F90  3205               	rrcf	(___omul@multiplier+4)^0,f,c
  3285   004F92  3204               	rrcf	(___omul@multiplier+3)^0,f,c
  3286   004F94  3203               	rrcf	(___omul@multiplier+2)^0,f,c
  3287   004F96  3202               	rrcf	(___omul@multiplier+1)^0,f,c
  3288   004F98  3201               	rrcf	___omul@multiplier^0,f,c
  3289   004F9A  5001               	movf	___omul@multiplier^0,w,c
  3290   004F9C  1002               	iorwf	(___omul@multiplier+1)^0,w,c
  3291   004F9E  1003               	iorwf	(___omul@multiplier+2)^0,w,c
  3292   004FA0  1004               	iorwf	(___omul@multiplier+3)^0,w,c
  3293   004FA2  1005               	iorwf	(___omul@multiplier+4)^0,w,c
  3294   004FA4  1006               	iorwf	(___omul@multiplier+5)^0,w,c
  3295   004FA6  1007               	iorwf	(___omul@multiplier+6)^0,w,c
  3296   004FA8  1008               	iorwf	(___omul@multiplier+7)^0,w,c
  3297   004FAA  A4D8               	btfss	status,2,c
  3298   004FAC  EFDA  F027         	goto	u6451
  3299   004FB0  EFDC  F027         	goto	u6450
  3300   004FB4                     u6451:
  3301   004FB4  EFA4  F027         	goto	l5998
  3302   004FB8                     u6450:
  3303   004FB8  C011  F001         	movff	___omul@product,?___omul
  3304   004FBC  C012  F002         	movff	___omul@product+1,?___omul+1
  3305   004FC0  C013  F003         	movff	___omul@product+2,?___omul+2
  3306   004FC4  C014  F004         	movff	___omul@product+3,?___omul+3
  3307   004FC8  C015  F005         	movff	___omul@product+4,?___omul+4
  3308   004FCC  C016  F006         	movff	___omul@product+5,?___omul+5
  3309   004FD0  C017  F007         	movff	___omul@product+6,?___omul+6
  3310   004FD4  C018  F008         	movff	___omul@product+7,?___omul+7
  3311   004FD8  0012               	return		;funcret
  3312   004FDA                     __end_of___omul:
  3313                           	callstack 0
  3314                           
  3315 ;; *************** function _strcmp *****************
  3316 ;; Defined at:
  3317 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcmp.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  l               2    0[COMRAM] PTR const unsigned char 
  3320 ;;		 -> result_str(20), 
  3321 ;;  r               2    2[COMRAM] PTR const unsigned char 
  3322 ;;		 -> STR_7(19), 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  2    0[COMRAM] int 
  3327 ;; Registers used:
  3328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;Total ram usage:        5 bytes
  3339 ;; Hardware stack levels used: 1
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_main
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text10
  3348   0052E6                     __ptext10:
  3349                           	callstack 0
  3350   0052E6                     _strcmp:
  3351                           	callstack 30
  3352   0052E6  EF79  F029         	goto	l6628
  3353   0052EA                     l6626:
  3354   0052EA  4A01               	infsnz	strcmp@l^0,f,c
  3355   0052EC  2A02               	incf	(strcmp@l+1)^0,f,c
  3356   0052EE  4A03               	infsnz	strcmp@r^0,f,c
  3357   0052F0  2A04               	incf	(strcmp@r+1)^0,f,c
  3358   0052F2                     l6628:
  3359   0052F2  C001  FFD9         	movff	strcmp@l,fsr2l
  3360   0052F6  C002  FFDA         	movff	strcmp@l+1,fsr2h
  3361   0052FA  50DF               	movf	indf2,w,c
  3362   0052FC  6E05               	movwf	??_strcmp^0,c
  3363   0052FE  C003  FFF6         	movff	strcmp@r,tblptrl
  3364   005302  C004  FFF7         	movff	strcmp@r+1,tblptrh
  3365   005306                     	if	0	;tblptru may be non-zero
  3366   005306                     	endif
  3367   005306                     	if	0	;tblptru may be non-zero
  3368   005306                     	endif
  3369   005306  0008               	tblrd		*
  3370   005308  50F5               	movf	tablat,w,c
  3371   00530A  1805               	xorwf	??_strcmp^0,w,c
  3372   00530C  A4D8               	btfss	status,2,c
  3373   00530E  EF8B  F029         	goto	u7271
  3374   005312  EF8D  F029         	goto	u7270
  3375   005316                     u7271:
  3376   005316  EF99  F029         	goto	l6632
  3377   00531A                     u7270:
  3378   00531A  C001  FFD9         	movff	strcmp@l,fsr2l
  3379   00531E  C002  FFDA         	movff	strcmp@l+1,fsr2h
  3380   005322  50DF               	movf	indf2,w,c
  3381   005324  A4D8               	btfss	status,2,c
  3382   005326  EF97  F029         	goto	u7281
  3383   00532A  EF99  F029         	goto	u7280
  3384   00532E                     u7281:
  3385   00532E  EF75  F029         	goto	l6626
  3386   005332                     u7280:
  3387   005332                     l6632:
  3388   005332  C001  FFD9         	movff	strcmp@l,fsr2l
  3389   005336  C002  FFDA         	movff	strcmp@l+1,fsr2h
  3390   00533A  50DF               	movf	indf2,w,c
  3391   00533C  6E05               	movwf	??_strcmp^0,c
  3392   00533E  C003  FFF6         	movff	strcmp@r,tblptrl
  3393   005342  C004  FFF7         	movff	strcmp@r+1,tblptrh
  3394   005346                     	if	0	;tblptru may be non-zero
  3395   005346                     	endif
  3396   005346                     	if	0	;tblptru may be non-zero
  3397   005346                     	endif
  3398   005346  0008               	tblrd		*
  3399   005348  50F5               	movf	tablat,w,c
  3400   00534A  5C05               	subwf	??_strcmp^0,w,c
  3401   00534C  6E01               	movwf	?_strcmp^0,c
  3402   00534E  6A02               	clrf	(?_strcmp+1)^0,c
  3403   005350  A0D8               	btfss	status,0,c
  3404   005352  0602               	decf	(?_strcmp+1)^0,f,c
  3405   005354  0012               	return		;funcret
  3406   005356                     __end_of_strcmp:
  3407                           	callstack 0
  3408                           
  3409 ;; *************** function _sprintf *****************
  3410 ;; Defined at:
  3411 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  s               2   13[BANK0 ] PTR unsigned char 
  3414 ;;		 -> result_str(20), 
  3415 ;;  fmt             2   15[BANK0 ] PTR const unsigned char 
  3416 ;;		 -> STR_9(4), STR_8(5), STR_3(4), STR_2(4), 
  3417 ;;		 -> STR_1(4), 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  f              12   23[BANK0 ] struct _IO_FILE
  3420 ;;  ap              2   21[BANK0 ] PTR void [1]
  3421 ;;		 -> ?_sprintf(2), 
  3422 ;;  ret             2    0        int 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  2   13[BANK0 ] int 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3432 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;Total ram usage:       22 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 7
  3439 ;; This function calls:
  3440 ;;		_vfprintf
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;;		_convert_byte_to_str
  3444 ;;		_convert_short_to_str
  3445 ;;		_convert_int_to_str
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text11
  3450   00554E                     __ptext11:
  3451                           	callstack 0
  3452   00554E                     _sprintf:
  3453                           	callstack 23
  3454   00554E  0EC6               	movlw	low (?_sprintf+4)
  3455   005550  0100               	movlb	0	; () banked
  3456   005552  6FCA               	movwf	sprintf@ap& (0+255),b
  3457   005554  0E00               	movlw	high (?_sprintf+4)
  3458   005556  6FCB               	movwf	(sprintf@ap+1)& (0+255),b
  3459   005558  C0C2  F0CC         	movff	sprintf@s,sprintf@f
  3460   00555C  C0C3  F0CD         	movff	sprintf@s+1,sprintf@f+1
  3461   005560                     
  3462                           ; BSR set to: 0
  3463   005560  0E00               	movlw	0
  3464   005562  6FD0               	movwf	(sprintf@f+4)& (0+255),b
  3465   005564  0E00               	movlw	0
  3466   005566  6FCF               	movwf	(sprintf@f+3)& (0+255),b
  3467   005568                     
  3468                           ; BSR set to: 0
  3469   005568  0E00               	movlw	0
  3470   00556A  6FD7               	movwf	(sprintf@f+11)& (0+255),b
  3471   00556C  0E00               	movlw	0
  3472   00556E  6FD6               	movwf	(sprintf@f+10)& (0+255),b
  3473   005570                     
  3474                           ; BSR set to: 0
  3475   005570  0ECC               	movlw	low sprintf@f
  3476   005572  6FBC               	movwf	vfprintf@fp& (0+255),b
  3477   005574  0E00               	movlw	high sprintf@f
  3478   005576  6FBD               	movwf	(vfprintf@fp+1)& (0+255),b
  3479   005578  C0C4  F0BE         	movff	sprintf@fmt,vfprintf@fmt
  3480   00557C  C0C5  F0BF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3481   005580  0ECA               	movlw	low sprintf@ap
  3482   005582  6FC0               	movwf	vfprintf@ap& (0+255),b
  3483   005584  0E00               	movlw	high sprintf@ap
  3484   005586  6FC1               	movwf	(vfprintf@ap+1)& (0+255),b
  3485   005588  ECCF  F02A         	call	_vfprintf	;wreg free
  3486   00558C  0100               	movlb	0	; () banked
  3487   00558E  51CF               	movf	(sprintf@f+3)& (0+255),w,b
  3488   005590  25C2               	addwf	sprintf@s& (0+255),w,b
  3489   005592  6ED9               	movwf	fsr2l,c
  3490   005594  51D0               	movf	(sprintf@f+4)& (0+255),w,b
  3491   005596  21C3               	addwfc	(sprintf@s+1)& (0+255),w,b
  3492   005598  6EDA               	movwf	fsr2h,c
  3493   00559A  6ADF               	clrf	indf2,c
  3494   00559C                     
  3495                           ; BSR set to: 0
  3496   00559C  0012               	return		;funcret
  3497   00559E                     __end_of_sprintf:
  3498                           	callstack 0
  3499                           
  3500 ;; *************** function _vfprintf *****************
  3501 ;; Defined at:
  3502 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  fp              2    7[BANK0 ] PTR struct _IO_FILE
  3505 ;;		 -> sprintf@f(12), 
  3506 ;;  fmt             2    9[BANK0 ] PTR const unsigned char 
  3507 ;;		 -> STR_9(4), STR_8(5), STR_3(4), STR_2(4), 
  3508 ;;		 -> STR_1(4), 
  3509 ;;  ap              2   11[BANK0 ] PTR PTR void 
  3510 ;;		 -> sprintf@ap(2), 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  cfmt            2  122[COMRAM] PTR unsigned char 
  3513 ;;		 -> STR_9(4), STR_8(5), STR_3(4), STR_2(4), 
  3514 ;;		 -> STR_1(4), 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  2    7[BANK0 ] int 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3524 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;Total ram usage:        8 bytes
  3529 ;; Hardware stack levels used: 1
  3530 ;; Hardware stack levels required when called: 6
  3531 ;; This function calls:
  3532 ;;		_vfpfcnvrt
  3533 ;; This function is called by:
  3534 ;;		_sprintf
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text12
  3539   00559E                     __ptext12:
  3540                           	callstack 0
  3541   00559E                     _vfprintf:
  3542                           	callstack 23
  3543   00559E                     
  3544                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  3545   00559E  C0BE  F07B         	movff	vfprintf@fmt,vfprintf@cfmt
  3546   0055A2  C0BF  F07C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3547                           
  3548                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  3549   0055A6  EFE3  F02A         	goto	l6284
  3550   0055AA                     l6282:
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3553   0055AA  C0BC  F071         	movff	vfprintf@fp,vfpfcnvrt@fp
  3554   0055AE  C0BD  F072         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3555   0055B2  0E7B               	movlw	low vfprintf@cfmt
  3556   0055B4  6E73               	movwf	vfpfcnvrt@fmt^0,c
  3557   0055B6  0E00               	movlw	high vfprintf@cfmt
  3558   0055B8  6E74               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3559   0055BA  C0C0  F075         	movff	vfprintf@ap,vfpfcnvrt@ap
  3560   0055BE  C0C1  F076         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3561   0055C2  EC76  F012         	call	_vfpfcnvrt	;wreg free
  3562   0055C6                     l6284:
  3563                           
  3564                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  3565   0055C6  C07B  FFF6         	movff	vfprintf@cfmt,tblptrl
  3566   0055CA  C07C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3567   0055CE                     	if	0	;tblptru may be non-zero
  3568   0055CE                     	endif
  3569   0055CE                     	if	0	;tblptru may be non-zero
  3570   0055CE                     	endif
  3571   0055CE  0008               	tblrd		*
  3572   0055D0  50F5               	movf	tablat,w,c
  3573   0055D2  0900               	iorlw	0
  3574   0055D4  A4D8               	btfss	status,2,c
  3575   0055D6  EFEF  F02A         	goto	u6711
  3576   0055DA  EFF1  F02A         	goto	u6710
  3577   0055DE                     u6711:
  3578   0055DE  EFD5  F02A         	goto	l6282
  3579   0055E2                     u6710:
  3580   0055E2                     
  3581                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  3582   0055E2  0E00               	movlw	0
  3583   0055E4  0100               	movlb	0	; () banked
  3584   0055E6  6FBD               	movwf	(?_vfprintf+1)& (0+255),b
  3585   0055E8  0E00               	movlw	0
  3586   0055EA  6FBC               	movwf	?_vfprintf& (0+255),b
  3587   0055EC                     
  3588                           ; BSR set to: 0
  3589   0055EC  0012               	return		;funcret
  3590   0055EE                     __end_of_vfprintf:
  3591                           	callstack 0
  3592                           
  3593 ;; *************** function _vfpfcnvrt *****************
  3594 ;; Defined at:
  3595 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  fp              2  112[COMRAM] PTR struct _IO_FILE
  3598 ;;		 -> sprintf@f(12), 
  3599 ;;  fmt             2  114[COMRAM] PTR PTR unsigned char 
  3600 ;;		 -> vfprintf@cfmt(2), 
  3601 ;;  ap              2  116[COMRAM] PTR PTR void 
  3602 ;;		 -> sprintf@ap(2), 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  convarg         4    0[BANK0 ] struct .
  3605 ;;  cp              2    5[BANK0 ] PTR unsigned char 
  3606 ;;		 -> STR_9(4), STR_8(5), STR_3(4), STR_2(4), 
  3607 ;;		 -> STR_1(4), 
  3608 ;;  i               2    0        int 
  3609 ;;  done            2    0        int 
  3610 ;;  c               1    4[BANK0 ] unsigned char 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3620 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;      Totals:        10       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;Total ram usage:       17 bytes
  3625 ;; Hardware stack levels used: 1
  3626 ;; Hardware stack levels required when called: 5
  3627 ;; This function calls:
  3628 ;;		_dtoa
  3629 ;;		_efgtoa
  3630 ;;		_fputc
  3631 ;;		_read_prec_or_width
  3632 ;;		_utoa
  3633 ;; This function is called by:
  3634 ;;		_vfprintf
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text13
  3639   0024EC                     __ptext13:
  3640                           	callstack 0
  3641   0024EC                     _vfpfcnvrt:
  3642                           	callstack 23
  3643   0024EC                     
  3644                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  3645   0024EC  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3646   0024F0  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3647   0024F4  CFDE FFF6          	movff	postinc2,tblptrl
  3648   0024F8  CFDD FFF7          	movff	postdec2,tblptrh
  3649   0024FC                     	if	0	;tblptru may be non-zero
  3650   0024FC                     	endif
  3651   0024FC                     	if	0	;tblptru may be non-zero
  3652   0024FC                     	endif
  3653   0024FC  0008               	tblrd		*
  3654   0024FE  50F5               	movf	tablat,w,c
  3655   002500  0A25               	xorlw	37
  3656   002502  A4D8               	btfss	status,2,c
  3657   002504  EF86  F012         	goto	u6461
  3658   002508  EF88  F012         	goto	u6460
  3659   00250C                     u6461:
  3660   00250C  EFE6  F014         	goto	l6110
  3661   002510                     u6460:
  3662   002510                     
  3663                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  3664   002510  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3665   002514  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3666   002518  2ADE               	incf	postinc2,f,c
  3667   00251A  0E00               	movlw	0
  3668   00251C  22DD               	addwfc	postdec2,f,c
  3669   00251E                     
  3670                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  3671   00251E  0E00               	movlw	0
  3672   002520  0100               	movlb	0	; () banked
  3673   002522  6F9B               	movwf	(_width+1)& (0+255),b
  3674   002524  0E00               	movlw	0
  3675   002526  6F9A               	movwf	_width& (0+255),b
  3676   002528  C09A  F09C         	movff	_width,_flags
  3677   00252C                     
  3678                           ; BSR set to: 0
  3679                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  3680   00252C  687D               	setf	_prec^0,c
  3681   00252E  687E               	setf	(_prec+1)^0,c
  3682   002530                     
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  3685   002530  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3686   002534  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3687   002538  CFDE FFF6          	movff	postinc2,tblptrl
  3688   00253C  CFDD FFF7          	movff	postdec2,tblptrh
  3689   002540                     	if	0	;tblptru may be non-zero
  3690   002540                     	endif
  3691   002540                     	if	0	;tblptru may be non-zero
  3692   002540                     	endif
  3693   002540  0008               	tblrd		*
  3694   002542  50F5               	movf	tablat,w,c
  3695   002544  0A2E               	xorlw	46
  3696   002546  A4D8               	btfss	status,2,c
  3697   002548  EFA8  F012         	goto	u6471
  3698   00254C  EFAA  F012         	goto	u6470
  3699   002550                     u6471:
  3700   002550  EFBF  F012         	goto	l6020
  3701   002554                     u6470:
  3702   002554                     
  3703                           ; BSR set to: 0
  3704                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  3705   002554  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3706   002558  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3707   00255C  2ADE               	incf	postinc2,f,c
  3708   00255E  0E00               	movlw	0
  3709   002560  22DD               	addwfc	postdec2,f,c
  3710   002562                     
  3711                           ; BSR set to: 0
  3712                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  3713   002562  C073  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  3714   002566  C074  F008         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  3715   00256A  C075  F009         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  3716   00256E  C076  F00A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  3717   002572  EC26  F025         	call	_read_prec_or_width	;wreg free
  3718   002576  C007  F07D         	movff	?_read_prec_or_width,_prec
  3719   00257A  C008  F07E         	movff	?_read_prec_or_width+1,_prec+1
  3720   00257E                     l6020:
  3721                           
  3722                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  3723   00257E  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3724   002582  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3725   002586  CFDE F0BA          	movff	postinc2,vfpfcnvrt@cp
  3726   00258A  CFDD F0BB          	movff	postdec2,vfpfcnvrt@cp+1
  3727   00258E                     
  3728                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1145:   c = *cp;
  3729   00258E  C0BA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3730   002592  C0BB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3731   002596                     	if	0	;tblptru may be non-zero
  3732   002596                     	endif
  3733   002596                     	if	0	;tblptru may be non-zero
  3734   002596                     	endif
  3735   002596  0008               	tblrd		*
  3736   002598  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  3737                           
  3738                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1146:   switch(c)
      +                           {
  3739   00259C  EFDC  F012         	goto	l6032
  3740   0025A0                     l6024:
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1161:     cp++;
  3744   0025A0  4BBA               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3745   0025A2  2BBB               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3746                           
  3747                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1168:     break;
  3748   0025A4  EFFA  F012         	goto	l6034
  3749   0025A8                     l6026:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1202:     c = 'i'
      +                          ;
  3753   0025A8  0E69               	movlw	105
  3754   0025AA  6FB9               	movwf	vfpfcnvrt@c& (0+255),b
  3755                           
  3756                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1203:     break;
  3757   0025AC  EFFA  F012         	goto	l6034
  3758   0025B0                     l6028:
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1205:     c = 0;
  3762   0025B0  0E00               	movlw	0
  3763   0025B2  6FB9               	movwf	vfpfcnvrt@c& (0+255),b
  3764                           
  3765                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1206:     break;
  3766   0025B4  EFFA  F012         	goto	l6034
  3767   0025B8                     l6032:
  3768   0025B8  0100               	movlb	0	; () banked
  3769   0025BA  51B9               	movf	vfpfcnvrt@c& (0+255),w,b
  3770   0025BC  6E77               	movwf	??_vfpfcnvrt^0,c
  3771   0025BE  6A78               	clrf	(??_vfpfcnvrt+1)^0,c
  3772                           
  3773                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3774                           ; Switch size 1, requested type "simple"
  3775                           ; Number of cases is 1, Range of values is 0 to 0
  3776                           ; switch strategies available:
  3777                           ; Name         Instructions Cycles
  3778                           ; simple_byte            4     3 (average)
  3779                           ;	Chosen strategy is simple_byte
  3780   0025C0  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  3781   0025C2  0A00               	xorlw	0	; case 0
  3782   0025C4  B4D8               	btfsc	status,2,c
  3783   0025C6  EFE7  F012         	goto	l7688
  3784   0025CA  EFD8  F012         	goto	l6028
  3785   0025CE                     l7688:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ; Switch size 1, requested type "simple"
  3789                           ; Number of cases is 4, Range of values is 100 to 117
  3790                           ; switch strategies available:
  3791                           ; Name         Instructions Cycles
  3792                           ; simple_byte           13     7 (average)
  3793                           ;	Chosen strategy is simple_byte
  3794   0025CE  5077               	movf	??_vfpfcnvrt^0,w,c
  3795   0025D0  0A64               	xorlw	100	; case 100
  3796   0025D2  B4D8               	btfsc	status,2,c
  3797   0025D4  EFD4  F012         	goto	l6026
  3798   0025D8  0A0D               	xorlw	13	; case 105
  3799   0025DA  B4D8               	btfsc	status,2,c
  3800   0025DC  EFD4  F012         	goto	l6026
  3801   0025E0  0A05               	xorlw	5	; case 108
  3802   0025E2  B4D8               	btfsc	status,2,c
  3803   0025E4  EFD0  F012         	goto	l6024
  3804   0025E8  0A19               	xorlw	25	; case 117
  3805   0025EA  B4D8               	btfsc	status,2,c
  3806   0025EC  EFD4  F012         	goto	l6026
  3807   0025F0  EFD8  F012         	goto	l6028
  3808   0025F4                     l6034:
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3812   0025F4  C0BA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3813   0025F8  C0BB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3814   0025FC                     	if	0	;tblptru may be non-zero
  3815   0025FC                     	endif
  3816   0025FC                     	if	0	;tblptru may be non-zero
  3817   0025FC                     	endif
  3818   0025FC  0008               	tblrd		*
  3819   0025FE  50F5               	movf	tablat,w,c
  3820   002600  0A64               	xorlw	100
  3821   002602  B4D8               	btfsc	status,2,c
  3822   002604  EF06  F013         	goto	u6481
  3823   002608  EF08  F013         	goto	u6480
  3824   00260C                     u6481:
  3825   00260C  EF4D  F013         	goto	l6044
  3826   002610                     u6480:
  3827   002610                     
  3828                           ; BSR set to: 0
  3829   002610  C0BA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3830   002614  C0BB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3831   002618                     	if	0	;tblptru may be non-zero
  3832   002618                     	endif
  3833   002618                     	if	0	;tblptru may be non-zero
  3834   002618                     	endif
  3835   002618  0008               	tblrd		*
  3836   00261A  50F5               	movf	tablat,w,c
  3837   00261C  0A69               	xorlw	105
  3838   00261E  A4D8               	btfss	status,2,c
  3839   002620  EF14  F013         	goto	u6491
  3840   002624  EF16  F013         	goto	u6490
  3841   002628                     u6491:
  3842   002628  EF80  F013         	goto	l6052
  3843   00262C                     u6490:
  3844   00262C  EF4D  F013         	goto	l6044
  3845   002630                     l6038:
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1217:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3849   002630  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3850   002634  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3851   002638  CFDF F077          	movff	indf2,??_vfpfcnvrt
  3852   00263C  0E02               	movlw	2
  3853   00263E  26DE               	addwf	postinc2,f,c
  3854   002640  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  3855   002644  0E00               	movlw	0
  3856   002646  22DD               	addwfc	postdec2,f,c
  3857   002648  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3858   00264C  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3859   002650  CFDE F0B5          	movff	postinc2,vfpfcnvrt@convarg
  3860   002654  CFDD F0B6          	movff	postdec2,vfpfcnvrt@convarg+1
  3861   002658  0E00               	movlw	0
  3862   00265A  BFB6               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3863   00265C  0EFF               	movlw	-1
  3864   00265E  6FB7               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  3865   002660  6FB8               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  3866                           
  3867                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1218:      break;
  3868   002662  EF62  F013         	goto	l6046
  3869   002666                     l6040:
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1231:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  3873   002666  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3874   00266A  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3875   00266E  CFDF F077          	movff	indf2,??_vfpfcnvrt
  3876   002672  0E04               	movlw	4
  3877   002674  26DE               	addwf	postinc2,f,c
  3878   002676  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  3879   00267A  0E00               	movlw	0
  3880   00267C  22DD               	addwfc	postdec2,f,c
  3881   00267E  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3882   002682  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3883   002686  CFDE F0B5          	movff	postinc2,vfpfcnvrt@convarg
  3884   00268A  CFDE F0B6          	movff	postinc2,vfpfcnvrt@convarg+1
  3885   00268E  CFDE F0B7          	movff	postinc2,vfpfcnvrt@convarg+2
  3886   002692  CFDE F0B8          	movff	postinc2,vfpfcnvrt@convarg+3
  3887                           
  3888                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1232:      break;
  3889   002696  EF62  F013         	goto	l6046
  3890   00269A                     l6044:
  3891                           
  3892                           ; BSR set to: 0
  3893   00269A  51B9               	movf	vfpfcnvrt@c& (0+255),w,b
  3894   00269C  6E77               	movwf	??_vfpfcnvrt^0,c
  3895   00269E  6A78               	clrf	(??_vfpfcnvrt+1)^0,c
  3896                           
  3897                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3898                           ; Switch size 1, requested type "simple"
  3899                           ; Number of cases is 1, Range of values is 0 to 0
  3900                           ; switch strategies available:
  3901                           ; Name         Instructions Cycles
  3902                           ; simple_byte            4     3 (average)
  3903                           ;	Chosen strategy is simple_byte
  3904   0026A0  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  3905   0026A2  0A00               	xorlw	0	; case 0
  3906   0026A4  B4D8               	btfsc	status,2,c
  3907   0026A6  EF57  F013         	goto	l7690
  3908   0026AA  EF62  F013         	goto	l6046
  3909   0026AE                     l7690:
  3910                           
  3911                           ; BSR set to: 0
  3912                           ; Switch size 1, requested type "simple"
  3913                           ; Number of cases is 2, Range of values is 105 to 108
  3914                           ; switch strategies available:
  3915                           ; Name         Instructions Cycles
  3916                           ; simple_byte            7     4 (average)
  3917                           ;	Chosen strategy is simple_byte
  3918   0026AE  5077               	movf	??_vfpfcnvrt^0,w,c
  3919   0026B0  0A69               	xorlw	105	; case 105
  3920   0026B2  B4D8               	btfsc	status,2,c
  3921   0026B4  EF18  F013         	goto	l6038
  3922   0026B8  0A05               	xorlw	5	; case 108
  3923   0026BA  B4D8               	btfsc	status,2,c
  3924   0026BC  EF33  F013         	goto	l6040
  3925   0026C0  EF62  F013         	goto	l6046
  3926   0026C4                     l6046:
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  3930   0026C4  0E01               	movlw	1
  3931   0026C6  25BA               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3932   0026C8  6E77               	movwf	??_vfpfcnvrt^0,c
  3933   0026CA  0E00               	movlw	0
  3934   0026CC  21BB               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3935   0026CE  6E78               	movwf	(??_vfpfcnvrt+1)^0,c
  3936   0026D0  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3937   0026D4  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3938   0026D8  C077  FFDE         	movff	??_vfpfcnvrt,postinc2
  3939   0026DC  C078  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3940   0026E0                     
  3941                           ; BSR set to: 0
  3942                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3943   0026E0  C071  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3944   0026E4  C072  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3945   0026E8  C0B5  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  3946   0026EC  C0B6  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3947   0026F0  C0B7  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3948   0026F4  C0B8  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3949   0026F8  EC46  F01C         	call	_dtoa	;wreg free
  3950   0026FC  EFFA  F014         	goto	l1455
  3951   002700                     l6052:
  3952                           
  3953                           ; BSR set to: 0
  3954   002700  C0BA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3955   002704  C0BB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3956   002708                     	if	0	;tblptru may be non-zero
  3957   002708                     	endif
  3958   002708                     	if	0	;tblptru may be non-zero
  3959   002708                     	endif
  3960   002708  0008               	tblrd		*
  3961   00270A  50F5               	movf	tablat,w,c
  3962   00270C  0A75               	xorlw	117
  3963   00270E  A4D8               	btfss	status,2,c
  3964   002710  EF8C  F013         	goto	u6501
  3965   002714  EF8E  F013         	goto	u6500
  3966   002718                     u6501:
  3967   002718  EF11  F014         	goto	l6072
  3968   00271C                     u6500:
  3969   00271C  EFC6  F013         	goto	l6060
  3970   002720                     l6054:
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1282:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  3974   002720  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3975   002724  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3976   002728  CFDF F077          	movff	indf2,??_vfpfcnvrt
  3977   00272C  0E02               	movlw	2
  3978   00272E  26DE               	addwf	postinc2,f,c
  3979   002730  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  3980   002734  0E00               	movlw	0
  3981   002736  22DD               	addwfc	postdec2,f,c
  3982   002738  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3983   00273C  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3984   002740  CFDE F079          	movff	postinc2,??_vfpfcnvrt+2
  3985   002744  CFDD F07A          	movff	postdec2,??_vfpfcnvrt+3
  3986   002748  C079  F0B5         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  3987   00274C  C07A  F0B6         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  3988   002750  6BB7               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  3989   002752  6BB8               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  3990                           
  3991                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1283:      break;
  3992   002754  EFDB  F013         	goto	l6062
  3993   002758                     l6056:
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1296:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
  3997   002758  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3998   00275C  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3999   002760  CFDF F077          	movff	indf2,??_vfpfcnvrt
  4000   002764  0E04               	movlw	4
  4001   002766  26DE               	addwf	postinc2,f,c
  4002   002768  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  4003   00276C  0E00               	movlw	0
  4004   00276E  22DD               	addwfc	postdec2,f,c
  4005   002770  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4006   002774  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4007   002778  CFDE F0B5          	movff	postinc2,vfpfcnvrt@convarg
  4008   00277C  CFDE F0B6          	movff	postinc2,vfpfcnvrt@convarg+1
  4009   002780  CFDE F0B7          	movff	postinc2,vfpfcnvrt@convarg+2
  4010   002784  CFDE F0B8          	movff	postinc2,vfpfcnvrt@convarg+3
  4011                           
  4012                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1297:      break;
  4013   002788  EFDB  F013         	goto	l6062
  4014   00278C                     l6060:
  4015                           
  4016                           ; BSR set to: 0
  4017   00278C  51B9               	movf	vfpfcnvrt@c& (0+255),w,b
  4018   00278E  6E77               	movwf	??_vfpfcnvrt^0,c
  4019   002790  6A78               	clrf	(??_vfpfcnvrt+1)^0,c
  4020                           
  4021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4022                           ; Switch size 1, requested type "simple"
  4023                           ; Number of cases is 1, Range of values is 0 to 0
  4024                           ; switch strategies available:
  4025                           ; Name         Instructions Cycles
  4026                           ; simple_byte            4     3 (average)
  4027                           ;	Chosen strategy is simple_byte
  4028   002792  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  4029   002794  0A00               	xorlw	0	; case 0
  4030   002796  B4D8               	btfsc	status,2,c
  4031   002798  EFD0  F013         	goto	l7692
  4032   00279C  EFDB  F013         	goto	l6062
  4033   0027A0                     l7692:
  4034                           
  4035                           ; BSR set to: 0
  4036                           ; Switch size 1, requested type "simple"
  4037                           ; Number of cases is 2, Range of values is 105 to 108
  4038                           ; switch strategies available:
  4039                           ; Name         Instructions Cycles
  4040                           ; simple_byte            7     4 (average)
  4041                           ;	Chosen strategy is simple_byte
  4042   0027A0  5077               	movf	??_vfpfcnvrt^0,w,c
  4043   0027A2  0A69               	xorlw	105	; case 105
  4044   0027A4  B4D8               	btfsc	status,2,c
  4045   0027A6  EF90  F013         	goto	l6054
  4046   0027AA  0A05               	xorlw	5	; case 108
  4047   0027AC  B4D8               	btfsc	status,2,c
  4048   0027AE  EFAC  F013         	goto	l6056
  4049   0027B2  EFDB  F013         	goto	l6062
  4050   0027B6                     l6062:
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1323:    *fmt = c
      +                          p+1;
  4054   0027B6  0E01               	movlw	1
  4055   0027B8  25BA               	addwf	vfpfcnvrt@cp& (0+255),w,b
  4056   0027BA  6E77               	movwf	??_vfpfcnvrt^0,c
  4057   0027BC  0E00               	movlw	0
  4058   0027BE  21BB               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  4059   0027C0  6E78               	movwf	(??_vfpfcnvrt+1)^0,c
  4060   0027C2  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4061   0027C6  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4062   0027CA  C077  FFDE         	movff	??_vfpfcnvrt,postinc2
  4063   0027CE  C078  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4064                           
  4065                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1324:    switch (
      +                          *cp) {
  4066   0027D2  EFFB  F013         	goto	l6070
  4067   0027D6                     l6064:
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1331:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  4071   0027D6  C071  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  4072   0027DA  C072  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4073   0027DE  C0B5  F01E         	movff	vfpfcnvrt@convarg,utoa@d
  4074   0027E2  C0B6  F01F         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  4075   0027E6  C0B7  F020         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  4076   0027EA  C0B8  F021         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  4077   0027EE  ECB3  F021         	call	_utoa	;wreg free
  4078   0027F2  EFFA  F014         	goto	l1455
  4079   0027F6                     l6070:
  4080                           
  4081                           ; BSR set to: 0
  4082   0027F6  C0BA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4083   0027FA  C0BB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4084   0027FE                     	if	0	;tblptru may be non-zero
  4085   0027FE                     	endif
  4086   0027FE                     	if	0	;tblptru may be non-zero
  4087   0027FE                     	endif
  4088   0027FE  0008               	tblrd		*
  4089   002800  50F5               	movf	tablat,w,c
  4090   002802  6E77               	movwf	??_vfpfcnvrt^0,c
  4091   002804  6A78               	clrf	(??_vfpfcnvrt+1)^0,c
  4092                           
  4093                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4094                           ; Switch size 1, requested type "simple"
  4095                           ; Number of cases is 1, Range of values is 0 to 0
  4096                           ; switch strategies available:
  4097                           ; Name         Instructions Cycles
  4098                           ; simple_byte            4     3 (average)
  4099                           ;	Chosen strategy is simple_byte
  4100   002806  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  4101   002808  0A00               	xorlw	0	; case 0
  4102   00280A  B4D8               	btfsc	status,2,c
  4103   00280C  EF0A  F014         	goto	l7694
  4104   002810  EF11  F014         	goto	l6072
  4105   002814                     l7694:
  4106                           
  4107                           ; BSR set to: 0
  4108                           ; Switch size 1, requested type "simple"
  4109                           ; Number of cases is 1, Range of values is 117 to 117
  4110                           ; switch strategies available:
  4111                           ; Name         Instructions Cycles
  4112                           ; simple_byte            4     3 (average)
  4113                           ;	Chosen strategy is simple_byte
  4114   002814  5077               	movf	??_vfpfcnvrt^0,w,c
  4115   002816  0A75               	xorlw	117	; case 117
  4116   002818  B4D8               	btfsc	status,2,c
  4117   00281A  EFEB  F013         	goto	l6064
  4118   00281E  EF11  F014         	goto	l6072
  4119   002822                     l6072:
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  4123   002822  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4124   002826  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4125   00282A  CFDE F0BA          	movff	postinc2,vfpfcnvrt@cp
  4126   00282E  CFDD F0BB          	movff	postdec2,vfpfcnvrt@cp+1
  4127   002832                     
  4128                           ; BSR set to: 0
  4129                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  4130   002832  C0BA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4131   002836  C0BB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4132   00283A                     	if	0	;tblptru may be non-zero
  4133   00283A                     	endif
  4134   00283A                     	if	0	;tblptru may be non-zero
  4135   00283A                     	endif
  4136   00283A  0008               	tblrd		*
  4137   00283C  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  4138                           
  4139                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  4140   002840  EF2E  F014         	goto	l6084
  4141   002844                     l6076:
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  4145   002844  4BBA               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  4146   002846  2BBB               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  4147                           
  4148                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  4149   002848  EF47  F014         	goto	l6086
  4150   00284C                     l6078:
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  4154   00284C  0E6C               	movlw	108
  4155   00284E  6FB9               	movwf	vfpfcnvrt@c& (0+255),b
  4156                           
  4157                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  4158   002850  EF47  F014         	goto	l6086
  4159   002854                     l6080:
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  4163   002854  0E00               	movlw	0
  4164   002856  6FB9               	movwf	vfpfcnvrt@c& (0+255),b
  4165                           
  4166                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  4167   002858  EF47  F014         	goto	l6086
  4168   00285C                     l6084:
  4169                           
  4170                           ; BSR set to: 0
  4171   00285C  51B9               	movf	vfpfcnvrt@c& (0+255),w,b
  4172   00285E  6E77               	movwf	??_vfpfcnvrt^0,c
  4173   002860  6A78               	clrf	(??_vfpfcnvrt+1)^0,c
  4174                           
  4175                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4176                           ; Switch size 1, requested type "simple"
  4177                           ; Number of cases is 1, Range of values is 0 to 0
  4178                           ; switch strategies available:
  4179                           ; Name         Instructions Cycles
  4180                           ; simple_byte            4     3 (average)
  4181                           ;	Chosen strategy is simple_byte
  4182   002862  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  4183   002864  0A00               	xorlw	0	; case 0
  4184   002866  B4D8               	btfsc	status,2,c
  4185   002868  EF38  F014         	goto	l7696
  4186   00286C  EF2A  F014         	goto	l6080
  4187   002870                     l7696:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ; Switch size 1, requested type "simple"
  4191                           ; Number of cases is 3, Range of values is 76 to 108
  4192                           ; switch strategies available:
  4193                           ; Name         Instructions Cycles
  4194                           ; simple_byte           10     6 (average)
  4195                           ;	Chosen strategy is simple_byte
  4196   002870  5077               	movf	??_vfpfcnvrt^0,w,c
  4197   002872  0A4C               	xorlw	76	; case 76
  4198   002874  B4D8               	btfsc	status,2,c
  4199   002876  EF22  F014         	goto	l6076
  4200   00287A  0A2A               	xorlw	42	; case 102
  4201   00287C  B4D8               	btfsc	status,2,c
  4202   00287E  EF26  F014         	goto	l6078
  4203   002882  0A0A               	xorlw	10	; case 108
  4204   002884  B4D8               	btfsc	status,2,c
  4205   002886  EF22  F014         	goto	l6076
  4206   00288A  EF2A  F014         	goto	l6080
  4207   00288E                     l6086:
  4208                           
  4209                           ; BSR set to: 0
  4210   00288E  C0BA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4211   002892  C0BB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4212   002896                     	if	0	;tblptru may be non-zero
  4213   002896                     	endif
  4214   002896                     	if	0	;tblptru may be non-zero
  4215   002896                     	endif
  4216   002896  0008               	tblrd		*
  4217   002898  50F5               	movf	tablat,w,c
  4218   00289A  0A66               	xorlw	102
  4219   00289C  A4D8               	btfss	status,2,c
  4220   00289E  EF53  F014         	goto	u6511
  4221   0028A2  EF55  F014         	goto	u6510
  4222   0028A6                     u6511:
  4223   0028A6  EFDD  F014         	goto	l6106
  4224   0028AA                     u6510:
  4225   0028AA  EF8B  F014         	goto	l6094
  4226   0028AE                     l6088:
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4230   0028AE  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4231   0028B2  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4232   0028B6  CFDF F077          	movff	indf2,??_vfpfcnvrt
  4233   0028BA  0E04               	movlw	4
  4234   0028BC  26DE               	addwf	postinc2,f,c
  4235   0028BE  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  4236   0028C2  0E00               	movlw	0
  4237   0028C4  22DD               	addwfc	postdec2,f,c
  4238   0028C6  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4239   0028CA  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4240   0028CE  CFDE F0B5          	movff	postinc2,vfpfcnvrt@convarg
  4241   0028D2  CFDE F0B6          	movff	postinc2,vfpfcnvrt@convarg+1
  4242   0028D6  CFDE F0B7          	movff	postinc2,vfpfcnvrt@convarg+2
  4243   0028DA  CFDE F0B8          	movff	postinc2,vfpfcnvrt@convarg+3
  4244                           
  4245                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  4246   0028DE  EFA0  F014         	goto	l6096
  4247   0028E2                     l6090:
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4251   0028E2  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4252   0028E6  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4253   0028EA  CFDF F077          	movff	indf2,??_vfpfcnvrt
  4254   0028EE  0E04               	movlw	4
  4255   0028F0  26DE               	addwf	postinc2,f,c
  4256   0028F2  CFDF F078          	movff	indf2,??_vfpfcnvrt+1
  4257   0028F6  0E00               	movlw	0
  4258   0028F8  22DD               	addwfc	postdec2,f,c
  4259   0028FA  C077  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4260   0028FE  C078  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4261   002902  CFDE F0B5          	movff	postinc2,vfpfcnvrt@convarg
  4262   002906  CFDE F0B6          	movff	postinc2,vfpfcnvrt@convarg+1
  4263   00290A  CFDE F0B7          	movff	postinc2,vfpfcnvrt@convarg+2
  4264   00290E  CFDE F0B8          	movff	postinc2,vfpfcnvrt@convarg+3
  4265                           
  4266                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  4267   002912  EFA0  F014         	goto	l6096
  4268   002916                     l6094:
  4269                           
  4270                           ; BSR set to: 0
  4271   002916  51B9               	movf	vfpfcnvrt@c& (0+255),w,b
  4272   002918  6E77               	movwf	??_vfpfcnvrt^0,c
  4273   00291A  6A78               	clrf	(??_vfpfcnvrt+1)^0,c
  4274                           
  4275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4276                           ; Switch size 1, requested type "simple"
  4277                           ; Number of cases is 1, Range of values is 0 to 0
  4278                           ; switch strategies available:
  4279                           ; Name         Instructions Cycles
  4280                           ; simple_byte            4     3 (average)
  4281                           ;	Chosen strategy is simple_byte
  4282   00291C  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  4283   00291E  0A00               	xorlw	0	; case 0
  4284   002920  B4D8               	btfsc	status,2,c
  4285   002922  EF95  F014         	goto	l7698
  4286   002926  EFA0  F014         	goto	l6096
  4287   00292A                     l7698:
  4288                           
  4289                           ; BSR set to: 0
  4290                           ; Switch size 1, requested type "simple"
  4291                           ; Number of cases is 2, Range of values is 76 to 108
  4292                           ; switch strategies available:
  4293                           ; Name         Instructions Cycles
  4294                           ; simple_byte            7     4 (average)
  4295                           ;	Chosen strategy is simple_byte
  4296   00292A  5077               	movf	??_vfpfcnvrt^0,w,c
  4297   00292C  0A4C               	xorlw	76	; case 76
  4298   00292E  B4D8               	btfsc	status,2,c
  4299   002930  EF71  F014         	goto	l6090
  4300   002934  0A20               	xorlw	32	; case 108
  4301   002936  B4D8               	btfsc	status,2,c
  4302   002938  EF57  F014         	goto	l6088
  4303   00293C  EFA0  F014         	goto	l6096
  4304   002940                     l6096:
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  4308   002940  0E01               	movlw	1
  4309   002942  25BA               	addwf	vfpfcnvrt@cp& (0+255),w,b
  4310   002944  6E77               	movwf	??_vfpfcnvrt^0,c
  4311   002946  0E00               	movlw	0
  4312   002948  21BB               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  4313   00294A  6E78               	movwf	(??_vfpfcnvrt+1)^0,c
  4314   00294C  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4315   002950  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4316   002954  C077  FFDE         	movff	??_vfpfcnvrt,postinc2
  4317   002958  C078  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4318                           
  4319                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  4320   00295C  EFC7  F014         	goto	l6104
  4321   002960                     l6098:
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  4325   002960  C071  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  4326   002964  C072  F03D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4327   002968  C0B5  F03E         	movff	vfpfcnvrt@convarg,efgtoa@f
  4328   00296C  C0B6  F03F         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  4329   002970  C0B7  F040         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  4330   002974  C0B8  F041         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  4331   002978  C0BA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4332   00297C  C0BB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4333   002980                     	if	0	;tblptru may be non-zero
  4334   002980                     	endif
  4335   002980                     	if	0	;tblptru may be non-zero
  4336   002980                     	endif
  4337   002980  0008               	tblrd		*
  4338   002982  CFF5 F042          	movff	tablat,efgtoa@c
  4339   002986  EC2A  F008         	call	_efgtoa	;wreg free
  4340   00298A  EFFA  F014         	goto	l1455
  4341   00298E                     l6104:
  4342                           
  4343                           ; BSR set to: 0
  4344   00298E  C0BA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4345   002992  C0BB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4346   002996                     	if	0	;tblptru may be non-zero
  4347   002996                     	endif
  4348   002996                     	if	0	;tblptru may be non-zero
  4349   002996                     	endif
  4350   002996  0008               	tblrd		*
  4351   002998  50F5               	movf	tablat,w,c
  4352   00299A  6E77               	movwf	??_vfpfcnvrt^0,c
  4353   00299C  6A78               	clrf	(??_vfpfcnvrt+1)^0,c
  4354                           
  4355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4356                           ; Switch size 1, requested type "simple"
  4357                           ; Number of cases is 1, Range of values is 0 to 0
  4358                           ; switch strategies available:
  4359                           ; Name         Instructions Cycles
  4360                           ; simple_byte            4     3 (average)
  4361                           ;	Chosen strategy is simple_byte
  4362   00299E  5078               	movf	(??_vfpfcnvrt+1)^0,w,c
  4363   0029A0  0A00               	xorlw	0	; case 0
  4364   0029A2  B4D8               	btfsc	status,2,c
  4365   0029A4  EFD6  F014         	goto	l7700
  4366   0029A8  EFDD  F014         	goto	l6106
  4367   0029AC                     l7700:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ; Switch size 1, requested type "simple"
  4371                           ; Number of cases is 1, Range of values is 102 to 102
  4372                           ; switch strategies available:
  4373                           ; Name         Instructions Cycles
  4374                           ; simple_byte            4     3 (average)
  4375                           ;	Chosen strategy is simple_byte
  4376   0029AC  5077               	movf	??_vfpfcnvrt^0,w,c
  4377   0029AE  0A66               	xorlw	102	; case 102
  4378   0029B0  B4D8               	btfsc	status,2,c
  4379   0029B2  EFB0  F014         	goto	l6098
  4380   0029B6  EFDD  F014         	goto	l6106
  4381   0029BA                     l6106:
  4382                           
  4383                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  4384   0029BA  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4385   0029BE  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4386   0029C2  2ADE               	incf	postinc2,f,c
  4387   0029C4  0E00               	movlw	0
  4388   0029C6  22DD               	addwfc	postdec2,f,c
  4389   0029C8  EFFA  F014         	goto	l1455
  4390   0029CC                     l6110:
  4391                           
  4392                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  4393   0029CC  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4394   0029D0  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4395   0029D4  CFDE FFF6          	movff	postinc2,tblptrl
  4396   0029D8  CFDD FFF7          	movff	postdec2,tblptrh
  4397   0029DC                     	if	0	;tblptru may be non-zero
  4398   0029DC                     	endif
  4399   0029DC                     	if	0	;tblptru may be non-zero
  4400   0029DC                     	endif
  4401   0029DC  0008               	tblrd		*
  4402   0029DE  50F5               	movf	tablat,w,c
  4403   0029E0  6E01               	movwf	fputc@c^0,c
  4404   0029E2  6A02               	clrf	(fputc@c+1)^0,c
  4405   0029E4  C071  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4406   0029E8  C072  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4407   0029EC  ECC1  F024         	call	_fputc	;wreg free
  4408   0029F0  EFDD  F014         	goto	l6106
  4409   0029F4                     l1455:
  4410   0029F4  0012               	return		;funcret
  4411   0029F6                     __end_of_vfpfcnvrt:
  4412                           	callstack 0
  4413                           
  4414 ;; *************** function _utoa *****************
  4415 ;; Defined at:
  4416 ;;		line 917 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4419 ;;		 -> sprintf@f(12), 
  4420 ;;  d               4   29[COMRAM] unsigned long 
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;  i               2   37[COMRAM] int 
  4423 ;;  p               2   35[COMRAM] int 
  4424 ;;  w               2   33[COMRAM] int 
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      void 
  4427 ;; Registers used:
  4428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4434 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;Total ram usage:       12 bytes
  4439 ;; Hardware stack levels used: 1
  4440 ;; Hardware stack levels required when called: 4
  4441 ;; This function calls:
  4442 ;;		___lldiv
  4443 ;;		___llmod
  4444 ;;		_pad
  4445 ;; This function is called by:
  4446 ;;		_vfpfcnvrt
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text14
  4451   004366                     __ptext14:
  4452                           	callstack 0
  4453   004366                     _utoa:
  4454                           	callstack 23
  4455   004366                     
  4456                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 917: static void 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 918: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           919:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprn
      +                          t.c: 927:     p = (0 <= prec) ? prec : 1;
  4457   004366  BE7E               	btfsc	(_prec+1)^0,7,c
  4458   004368  EFBA  F021         	goto	u6210
  4459   00436C  EFB8  F021         	goto	u6211
  4460   004370                     u6211:
  4461   004370  EFC0  F021         	goto	l1420
  4462   004374                     u6210:
  4463   004374  0E00               	movlw	0
  4464   004376  6E25               	movwf	(utoa@p+1)^0,c
  4465   004378  0E01               	movlw	1
  4466   00437A  6E24               	movwf	utoa@p^0,c
  4467   00437C  EFC4  F021         	goto	l1422
  4468   004380                     l1420:
  4469   004380  C07D  F024         	movff	_prec,utoa@p
  4470   004384  C07E  F025         	movff	_prec+1,utoa@p+1
  4471   004388                     l1422:
  4472                           
  4473                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 928:     w = widt
      +                          h;
  4474   004388  C09A  F022         	movff	_width,utoa@w
  4475   00438C  C09B  F023         	movff	_width+1,utoa@w+1
  4476   004390                     
  4477                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 931:     i = size
      +                          of(dbuf) - 1;
  4478   004390  0E00               	movlw	0
  4479   004392  6E27               	movwf	(utoa@i+1)^0,c
  4480   004394  0E4F               	movlw	79
  4481   004396  6E26               	movwf	utoa@i^0,c
  4482   004398                     
  4483                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 932:     dbuf[i] 
      +                          = '\0';
  4484   004398  0E00               	movlw	0
  4485   00439A  0101               	movlb	1	; () banked
  4486   00439C  6FB3               	movwf	(_dbuf+79)& (0+255),b
  4487                           
  4488                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
  4489   00439E  EF0F  F022         	goto	l5834
  4490   0043A2                     l5824:
  4491                           
  4492                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 937:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 938:         --i;
  4493   0043A2  0626               	decf	utoa@i^0,f,c
  4494   0043A4  A0D8               	btfss	status,0,c
  4495   0043A6  0627               	decf	(utoa@i+1)^0,f,c
  4496   0043A8                     
  4497                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 939:         dbuf
      +                          [i] = '0' + (d % 10);
  4498   0043A8  0E64               	movlw	low _dbuf
  4499   0043AA  2426               	addwf	utoa@i^0,w,c
  4500   0043AC  6ED9               	movwf	fsr2l,c
  4501   0043AE  0E01               	movlw	high _dbuf
  4502   0043B0  2027               	addwfc	(utoa@i+1)^0,w,c
  4503   0043B2  6EDA               	movwf	fsr2h,c
  4504   0043B4  C01E  F001         	movff	utoa@d,___llmod@dividend
  4505   0043B8  C01F  F002         	movff	utoa@d+1,___llmod@dividend+1
  4506   0043BC  C020  F003         	movff	utoa@d+2,___llmod@dividend+2
  4507   0043C0  C021  F004         	movff	utoa@d+3,___llmod@dividend+3
  4508   0043C4  0E0A               	movlw	10
  4509   0043C6  6E05               	movwf	___llmod@divisor^0,c
  4510   0043C8  0E00               	movlw	0
  4511   0043CA  6E06               	movwf	(___llmod@divisor+1)^0,c
  4512   0043CC  0E00               	movlw	0
  4513   0043CE  6E07               	movwf	(___llmod@divisor+2)^0,c
  4514   0043D0  0E00               	movlw	0
  4515   0043D2  6E08               	movwf	(___llmod@divisor+3)^0,c
  4516   0043D4  EC78  F028         	call	___llmod	;wreg free
  4517   0043D8  5001               	movf	?___llmod^0,w,c
  4518   0043DA  0F30               	addlw	48
  4519   0043DC  6EDF               	movwf	indf2,c
  4520   0043DE                     
  4521                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 940:         --p;
  4522   0043DE  0624               	decf	utoa@p^0,f,c
  4523   0043E0  A0D8               	btfss	status,0,c
  4524   0043E2  0625               	decf	(utoa@p+1)^0,f,c
  4525   0043E4                     
  4526                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 941:         --w;
  4527   0043E4  0622               	decf	utoa@w^0,f,c
  4528   0043E6  A0D8               	btfss	status,0,c
  4529   0043E8  0623               	decf	(utoa@w+1)^0,f,c
  4530   0043EA                     
  4531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 942:         d = 
      +                          d / 10;
  4532   0043EA  C01E  F001         	movff	utoa@d,___lldiv@dividend
  4533   0043EE  C01F  F002         	movff	utoa@d+1,___lldiv@dividend+1
  4534   0043F2  C020  F003         	movff	utoa@d+2,___lldiv@dividend+2
  4535   0043F6  C021  F004         	movff	utoa@d+3,___lldiv@dividend+3
  4536   0043FA  0E0A               	movlw	10
  4537   0043FC  6E05               	movwf	___lldiv@divisor^0,c
  4538   0043FE  0E00               	movlw	0
  4539   004400  6E06               	movwf	(___lldiv@divisor+1)^0,c
  4540   004402  0E00               	movlw	0
  4541   004404  6E07               	movwf	(___lldiv@divisor+2)^0,c
  4542   004406  0E00               	movlw	0
  4543   004408  6E08               	movwf	(___lldiv@divisor+3)^0,c
  4544   00440A  EC4C  F027         	call	___lldiv	;wreg free
  4545   00440E  C001  F01E         	movff	?___lldiv,utoa@d
  4546   004412  C002  F01F         	movff	?___lldiv+1,utoa@d+1
  4547   004416  C003  F020         	movff	?___lldiv+2,utoa@d+2
  4548   00441A  C004  F021         	movff	?___lldiv+3,utoa@d+3
  4549   00441E                     l5834:
  4550                           
  4551                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
  4552   00441E  5026               	movf	utoa@i^0,w,c
  4553   004420  1027               	iorwf	(utoa@i+1)^0,w,c
  4554   004422  B4D8               	btfsc	status,2,c
  4555   004424  EF16  F022         	goto	u6221
  4556   004428  EF18  F022         	goto	u6220
  4557   00442C                     u6221:
  4558   00442C  EF30  F022         	goto	l5840
  4559   004430                     u6220:
  4560   004430  501E               	movf	utoa@d^0,w,c
  4561   004432  101F               	iorwf	(utoa@d+1)^0,w,c
  4562   004434  1020               	iorwf	(utoa@d+2)^0,w,c
  4563   004436  1021               	iorwf	(utoa@d+3)^0,w,c
  4564   004438  A4D8               	btfss	status,2,c
  4565   00443A  EF21  F022         	goto	u6231
  4566   00443E  EF23  F022         	goto	u6230
  4567   004442                     u6231:
  4568   004442  EFD1  F021         	goto	l5824
  4569   004446                     u6230:
  4570   004446  BE25               	btfsc	(utoa@p+1)^0,7,c
  4571   004448  EF30  F022         	goto	u6240
  4572   00444C  5025               	movf	(utoa@p+1)^0,w,c
  4573   00444E  E106               	bnz	u6241
  4574   004450  0424               	decf	utoa@p^0,w,c
  4575   004452  B0D8               	btfsc	status,0,c
  4576   004454  EF2E  F022         	goto	u6241
  4577   004458  EF30  F022         	goto	u6240
  4578   00445C                     u6241:
  4579   00445C  EFD1  F021         	goto	l5824
  4580   004460                     u6240:
  4581   004460                     l5840:
  4582                           
  4583                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 946:     return (
      +                          void) pad(fp, &dbuf[i], w);
  4584   004460  C01C  F011         	movff	utoa@fp,pad@fp
  4585   004464  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  4586   004468  0E64               	movlw	low _dbuf
  4587   00446A  2426               	addwf	utoa@i^0,w,c
  4588   00446C  6E13               	movwf	pad@buf^0,c
  4589   00446E  0E01               	movlw	high _dbuf
  4590   004470  2027               	addwfc	(utoa@i+1)^0,w,c
  4591   004472  6E14               	movwf	(pad@buf+1)^0,c
  4592   004474  C022  F015         	movff	utoa@w,pad@p
  4593   004478  C023  F016         	movff	utoa@w+1,pad@p+1
  4594   00447C  ECFD  F028         	call	_pad	;wreg free
  4595   004480  0012               	return		;funcret
  4596   004482                     __end_of_utoa:
  4597                           	callstack 0
  4598                           
  4599 ;; *************** function ___llmod *****************
  4600 ;; Defined at:
  4601 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\llmod.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  dividend        4    0[COMRAM] unsigned long 
  4604 ;;  divisor         4    4[COMRAM] unsigned long 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  counter         1    8[COMRAM] unsigned char 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  4    0[COMRAM] unsigned long 
  4609 ;; Registers used:
  4610 ;;		wreg, status,2, status,0
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4616 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4620 ;;Total ram usage:        9 bytes
  4621 ;; Hardware stack levels used: 1
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_utoa
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text15
  4630   0050F0                     __ptext15:
  4631                           	callstack 0
  4632   0050F0                     ___llmod:
  4633                           	callstack 26
  4634   0050F0  5005               	movf	___llmod@divisor^0,w,c
  4635   0050F2  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  4636   0050F4  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  4637   0050F6  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  4638   0050F8  B4D8               	btfsc	status,2,c
  4639   0050FA  EF81  F028         	goto	u5461
  4640   0050FE  EF83  F028         	goto	u5460
  4641   005102                     u5461:
  4642   005102  EFB3  F028         	goto	l1041
  4643   005106                     u5460:
  4644   005106  0E01               	movlw	1
  4645   005108  6E09               	movwf	___llmod@counter^0,c
  4646   00510A  EF8D  F028         	goto	l5406
  4647   00510E                     l5404:
  4648   00510E  90D8               	bcf	status,0,c
  4649   005110  3605               	rlcf	___llmod@divisor^0,f,c
  4650   005112  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  4651   005114  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  4652   005116  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  4653   005118  2A09               	incf	___llmod@counter^0,f,c
  4654   00511A                     l5406:
  4655   00511A  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  4656   00511C  EF92  F028         	goto	u5471
  4657   005120  EF94  F028         	goto	u5470
  4658   005124                     u5471:
  4659   005124  EF87  F028         	goto	l5404
  4660   005128                     u5470:
  4661   005128                     l5408:
  4662   005128  5005               	movf	___llmod@divisor^0,w,c
  4663   00512A  5C01               	subwf	___llmod@dividend^0,w,c
  4664   00512C  5006               	movf	(___llmod@divisor+1)^0,w,c
  4665   00512E  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  4666   005130  5007               	movf	(___llmod@divisor+2)^0,w,c
  4667   005132  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  4668   005134  5008               	movf	(___llmod@divisor+3)^0,w,c
  4669   005136  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  4670   005138  A0D8               	btfss	status,0,c
  4671   00513A  EFA1  F028         	goto	u5481
  4672   00513E  EFA3  F028         	goto	u5480
  4673   005142                     u5481:
  4674   005142  EFAB  F028         	goto	l5412
  4675   005146                     u5480:
  4676   005146  5005               	movf	___llmod@divisor^0,w,c
  4677   005148  5E01               	subwf	___llmod@dividend^0,f,c
  4678   00514A  5006               	movf	(___llmod@divisor+1)^0,w,c
  4679   00514C  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  4680   00514E  5007               	movf	(___llmod@divisor+2)^0,w,c
  4681   005150  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  4682   005152  5008               	movf	(___llmod@divisor+3)^0,w,c
  4683   005154  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  4684   005156                     l5412:
  4685   005156  90D8               	bcf	status,0,c
  4686   005158  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  4687   00515A  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  4688   00515C  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  4689   00515E  3205               	rrcf	___llmod@divisor^0,f,c
  4690   005160  2E09               	decfsz	___llmod@counter^0,f,c
  4691   005162  EF94  F028         	goto	l5408
  4692   005166                     l1041:
  4693   005166  C001  F001         	movff	___llmod@dividend,?___llmod
  4694   00516A  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4695   00516E  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4696   005172  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4697   005176  0012               	return		;funcret
  4698   005178                     __end_of___llmod:
  4699                           	callstack 0
  4700                           
  4701 ;; *************** function ___lldiv *****************
  4702 ;; Defined at:
  4703 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  dividend        4    0[COMRAM] unsigned long 
  4706 ;;  divisor         4    4[COMRAM] unsigned long 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  quotient        4    8[COMRAM] unsigned long 
  4709 ;;  counter         1   12[COMRAM] unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  4    0[COMRAM] unsigned long 
  4712 ;; Registers used:
  4713 ;;		wreg, status,2, status,0
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4719 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;Total ram usage:       13 bytes
  4724 ;; Hardware stack levels used: 1
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_utoa
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text16
  4733   004E98                     __ptext16:
  4734                           	callstack 0
  4735   004E98                     ___lldiv:
  4736                           	callstack 26
  4737   004E98  0E00               	movlw	0
  4738   004E9A  6E09               	movwf	___lldiv@quotient^0,c
  4739   004E9C  0E00               	movlw	0
  4740   004E9E  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  4741   004EA0  0E00               	movlw	0
  4742   004EA2  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  4743   004EA4  0E00               	movlw	0
  4744   004EA6  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  4745   004EA8  5005               	movf	___lldiv@divisor^0,w,c
  4746   004EAA  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  4747   004EAC  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  4748   004EAE  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  4749   004EB0  B4D8               	btfsc	status,2,c
  4750   004EB2  EF5D  F027         	goto	u4731
  4751   004EB6  EF5F  F027         	goto	u4730
  4752   004EBA                     u4731:
  4753   004EBA  EF95  F027         	goto	l648
  4754   004EBE                     u4730:
  4755   004EBE  0E01               	movlw	1
  4756   004EC0  6E0D               	movwf	___lldiv@counter^0,c
  4757   004EC2  EF69  F027         	goto	l4942
  4758   004EC6                     l4940:
  4759   004EC6  90D8               	bcf	status,0,c
  4760   004EC8  3605               	rlcf	___lldiv@divisor^0,f,c
  4761   004ECA  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  4762   004ECC  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  4763   004ECE  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  4764   004ED0  2A0D               	incf	___lldiv@counter^0,f,c
  4765   004ED2                     l4942:
  4766   004ED2  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  4767   004ED4  EF6E  F027         	goto	u4741
  4768   004ED8  EF70  F027         	goto	u4740
  4769   004EDC                     u4741:
  4770   004EDC  EF63  F027         	goto	l4940
  4771   004EE0                     u4740:
  4772   004EE0                     l4944:
  4773   004EE0  90D8               	bcf	status,0,c
  4774   004EE2  3609               	rlcf	___lldiv@quotient^0,f,c
  4775   004EE4  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  4776   004EE6  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  4777   004EE8  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  4778   004EEA  5005               	movf	___lldiv@divisor^0,w,c
  4779   004EEC  5C01               	subwf	___lldiv@dividend^0,w,c
  4780   004EEE  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4781   004EF0  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  4782   004EF2  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4783   004EF4  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  4784   004EF6  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4785   004EF8  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  4786   004EFA  A0D8               	btfss	status,0,c
  4787   004EFC  EF82  F027         	goto	u4751
  4788   004F00  EF84  F027         	goto	u4750
  4789   004F04                     u4751:
  4790   004F04  EF8D  F027         	goto	l4952
  4791   004F08                     u4750:
  4792   004F08  5005               	movf	___lldiv@divisor^0,w,c
  4793   004F0A  5E01               	subwf	___lldiv@dividend^0,f,c
  4794   004F0C  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4795   004F0E  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  4796   004F10  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4797   004F12  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  4798   004F14  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4799   004F16  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  4800   004F18  8009               	bsf	___lldiv@quotient^0,0,c
  4801   004F1A                     l4952:
  4802   004F1A  90D8               	bcf	status,0,c
  4803   004F1C  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  4804   004F1E  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  4805   004F20  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  4806   004F22  3205               	rrcf	___lldiv@divisor^0,f,c
  4807   004F24  2E0D               	decfsz	___lldiv@counter^0,f,c
  4808   004F26  EF70  F027         	goto	l4944
  4809   004F2A                     l648:
  4810   004F2A  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4811   004F2E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4812   004F32  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4813   004F36  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4814   004F3A  0012               	return		;funcret
  4815   004F3C                     __end_of___lldiv:
  4816                           	callstack 0
  4817                           
  4818 ;; *************** function _read_prec_or_width *****************
  4819 ;; Defined at:
  4820 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  fmt             2    6[COMRAM] PTR PTR const unsigned c
  4823 ;;		 -> vfprintf@cfmt(2), 
  4824 ;;  ap              2    8[COMRAM] PTR PTR void [1]
  4825 ;;		 -> sprintf@ap(2), 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  c               1   12[COMRAM] unsigned char 
  4828 ;;  n               2   13[COMRAM] int 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  2    6[COMRAM] int 
  4831 ;; Registers used:
  4832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4838 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;Total ram usage:        9 bytes
  4843 ;; Hardware stack levels used: 1
  4844 ;; Hardware stack levels required when called: 1
  4845 ;; This function calls:
  4846 ;;		___wmul
  4847 ;; This function is called by:
  4848 ;;		_vfpfcnvrt
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text17
  4853   004A4C                     __ptext17:
  4854                           	callstack 0
  4855   004A4C                     _read_prec_or_width:
  4856                           	callstack 26
  4857   004A4C                     
  4858                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  4859   004A4C  0E00               	movlw	0
  4860   004A4E  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  4861   004A50  0E00               	movlw	0
  4862   004A52  6E0E               	movwf	read_prec_or_width@n^0,c
  4863   004A54                     
  4864                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  4865   004A54  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  4866   004A58  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  4867   004A5C  CFDE FFF6          	movff	postinc2,tblptrl
  4868   004A60  CFDD FFF7          	movff	postdec2,tblptrh
  4869   004A64                     	if	0	;tblptru may be non-zero
  4870   004A64                     	endif
  4871   004A64                     	if	0	;tblptru may be non-zero
  4872   004A64                     	endif
  4873   004A64  0008               	tblrd		*
  4874   004A66  50F5               	movf	tablat,w,c
  4875   004A68  0A2A               	xorlw	42
  4876   004A6A  A4D8               	btfss	status,2,c
  4877   004A6C  EF3A  F025         	goto	u6251
  4878   004A70  EF3C  F025         	goto	u6250
  4879   004A74                     u6251:
  4880   004A74  EF70  F025         	goto	l5854
  4881   004A78                     u6250:
  4882   004A78                     
  4883                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  4884   004A78  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  4885   004A7C  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  4886   004A80  2ADE               	incf	postinc2,f,c
  4887   004A82  0E00               	movlw	0
  4888   004A84  22DD               	addwfc	postdec2,f,c
  4889                           
  4890                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  4891   004A86  C009  FFD9         	movff	read_prec_or_width@ap,fsr2l
  4892   004A8A  C00A  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  4893   004A8E  CFDF F00B          	movff	indf2,??_read_prec_or_width
  4894   004A92  0E02               	movlw	2
  4895   004A94  26DE               	addwf	postinc2,f,c
  4896   004A96  CFDF F00C          	movff	indf2,??_read_prec_or_width+1
  4897   004A9A  0E00               	movlw	0
  4898   004A9C  22DD               	addwfc	postdec2,f,c
  4899   004A9E  C00B  FFD9         	movff	??_read_prec_or_width,fsr2l
  4900   004AA2  C00C  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  4901   004AA6  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  4902   004AAA  CFDD F00F          	movff	postdec2,read_prec_or_width@n+1
  4903                           
  4904                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  4905   004AAE  EF84  F025         	goto	l1432
  4906   004AB2                     l5850:
  4907                           
  4908                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  4909   004AB2  C00E  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  4910   004AB6  C00F  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  4911   004ABA  0E00               	movlw	0
  4912   004ABC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4913   004ABE  0E0A               	movlw	10
  4914   004AC0  6E03               	movwf	___wmul@multiplicand^0,c
  4915   004AC2  ECA7  F02C         	call	___wmul	;wreg free
  4916   004AC6  500D               	movf	read_prec_or_width@c^0,w,c
  4917   004AC8  2401               	addwf	?___wmul^0,w,c
  4918   004ACA  6E0E               	movwf	read_prec_or_width@n^0,c
  4919   004ACC  0E00               	movlw	0
  4920   004ACE  2002               	addwfc	(?___wmul+1)^0,w,c
  4921   004AD0  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  4922   004AD2                     
  4923                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  4924   004AD2  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  4925   004AD6  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  4926   004ADA  2ADE               	incf	postinc2,f,c
  4927   004ADC  0E00               	movlw	0
  4928   004ADE  22DD               	addwfc	postdec2,f,c
  4929   004AE0                     l5854:
  4930                           
  4931                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4932   004AE0  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  4933   004AE4  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  4934   004AE8  CFDE FFF6          	movff	postinc2,tblptrl
  4935   004AEC  CFDD FFF7          	movff	postdec2,tblptrh
  4936   004AF0                     	if	0	;tblptru may be non-zero
  4937   004AF0                     	endif
  4938   004AF0                     	if	0	;tblptru may be non-zero
  4939   004AF0                     	endif
  4940   004AF0  0008               	tblrd		*
  4941   004AF2  50F5               	movf	tablat,w,c
  4942   004AF4  0FD0               	addlw	208
  4943   004AF6  6E0D               	movwf	read_prec_or_width@c^0,c
  4944   004AF8  0E09               	movlw	9
  4945   004AFA  640D               	cpfsgt	read_prec_or_width@c^0,c
  4946   004AFC  EF82  F025         	goto	u6261
  4947   004B00  EF84  F025         	goto	u6260
  4948   004B04                     u6261:
  4949   004B04  EF59  F025         	goto	l5850
  4950   004B08                     u6260:
  4951   004B08                     l1432:
  4952                           
  4953                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  4954   004B08  C00E  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  4955   004B0C  C00F  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  4956   004B10  0012               	return		;funcret
  4957   004B12                     __end_of_read_prec_or_width:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function ___wmul *****************
  4961 ;; Defined at:
  4962 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  multiplier      2    0[COMRAM] unsigned int 
  4965 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  product         2    4[COMRAM] unsigned int 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  2    0[COMRAM] unsigned int 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0, prodl, prodh
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;Total ram usage:        6 bytes
  4982 ;; Hardware stack levels used: 1
  4983 ;; This function calls:
  4984 ;;		Nothing
  4985 ;; This function is called by:
  4986 ;;		_read_prec_or_width
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text18
  4991   00594E                     __ptext18:
  4992                           	callstack 0
  4993   00594E                     ___wmul:
  4994                           	callstack 26
  4995   00594E  5001               	movf	___wmul@multiplier^0,w,c
  4996   005950  0203               	mulwf	___wmul@multiplicand^0,c
  4997   005952  CFF3 F005          	movff	prodl,___wmul@product
  4998   005956  CFF4 F006          	movff	prodh,___wmul@product+1
  4999   00595A  5001               	movf	___wmul@multiplier^0,w,c
  5000   00595C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5001   00595E  50F3               	movf	243,w,c
  5002   005960  2606               	addwf	(___wmul@product+1)^0,f,c
  5003   005962  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5004   005964  0203               	mulwf	___wmul@multiplicand^0,c
  5005   005966  50F3               	movf	243,w,c
  5006   005968  2606               	addwf	(___wmul@product+1)^0,f,c
  5007   00596A  C005  F001         	movff	___wmul@product,?___wmul
  5008   00596E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5009   005972  0012               	return		;funcret
  5010   005974                     __end_of___wmul:
  5011                           	callstack 0
  5012                           
  5013 ;; *************** function _efgtoa *****************
  5014 ;; Defined at:
  5015 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  5018 ;;		 -> sprintf@f(12), 
  5019 ;;  f               4   61[COMRAM] PTR struct _IO_FILE
  5020 ;;  c               1   65[COMRAM] unsigned char 
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;  u               4  108[COMRAM] struct flui
  5023 ;;  g               4  104[COMRAM] struct flui
  5024 ;;  l               4   97[COMRAM] struct flui
  5025 ;;  h               4   93[COMRAM] struct flui
  5026 ;;  ou              4   87[COMRAM] struct flui
  5027 ;;  n               2  102[COMRAM] int 
  5028 ;;  i               2   91[COMRAM] int 
  5029 ;;  w               2   85[COMRAM] int 
  5030 ;;  e               2   83[COMRAM] int 
  5031 ;;  m               2   81[COMRAM] int 
  5032 ;;  d               2   79[COMRAM] int 
  5033 ;;  t               2   72[COMRAM] int 
  5034 ;;  p               2   70[COMRAM] int 
  5035 ;;  ne              2   68[COMRAM] int 
  5036 ;;  sign            1  101[COMRAM] unsigned char 
  5037 ;;  nmode           1   78[COMRAM] unsigned char 
  5038 ;;  mode            1   77[COMRAM] unsigned char 
  5039 ;;  pp              1   76[COMRAM] unsigned char 
  5040 ;;  esign           1    0        unsigned char 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      void 
  5043 ;; Registers used:
  5044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5050 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5051 ;;      Locals:        44       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;      Totals:        53       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;Total ram usage:       53 bytes
  5055 ;; Hardware stack levels used: 1
  5056 ;; Hardware stack levels required when called: 4
  5057 ;; This function calls:
  5058 ;;		___fladd
  5059 ;;		___fldiv
  5060 ;;		___fleq
  5061 ;;		___flge
  5062 ;;		___flmul
  5063 ;;		___flneg
  5064 ;;		___flsub
  5065 ;;		___fltol
  5066 ;;		___fpclassifyf
  5067 ;;		_floorf
  5068 ;;		_labs
  5069 ;;		_memcpy
  5070 ;;		_pad
  5071 ;;		_strcpy
  5072 ;; This function is called by:
  5073 ;;		_vfpfcnvrt
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text19
  5078   001054                     __ptext19:
  5079                           	callstack 0
  5080   001054                     _efgtoa:
  5081                           	callstack 23
  5082   001054                     
  5083                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  5084   001054  0E00               	movlw	0
  5085   001056  6E66               	movwf	efgtoa@sign^0,c
  5086   001058                     
  5087                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  5088   001058  C03E  F069         	movff	efgtoa@f,efgtoa@g
  5089   00105C  C03F  F06A         	movff	efgtoa@f+1,efgtoa@g+1
  5090   001060  C040  F06B         	movff	efgtoa@f+2,efgtoa@g+2
  5091   001064  C041  F06C         	movff	efgtoa@f+3,efgtoa@g+3
  5092   001068                     
  5093                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  5094   001068  BE6C               	btfsc	(efgtoa@g+3)^0,7,c
  5095   00106A  EF3B  F008         	goto	u5890
  5096   00106E  EF39  F008         	goto	u5891
  5097   001072                     u5891:
  5098   001072  EF4F  F008         	goto	l5604
  5099   001076                     u5890:
  5100   001076                     
  5101                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  5102   001076  0E01               	movlw	1
  5103   001078  6E66               	movwf	efgtoa@sign^0,c
  5104   00107A                     
  5105                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  5106   00107A  C069  F001         	movff	efgtoa@g,___flneg@f1
  5107   00107E  C06A  F002         	movff	efgtoa@g+1,___flneg@f1+1
  5108   001082  C06B  F003         	movff	efgtoa@g+2,___flneg@f1+2
  5109   001086  C06C  F004         	movff	efgtoa@g+3,___flneg@f1+3
  5110   00108A  EC5F  F02C         	call	___flneg	;wreg free
  5111   00108E  C001  F069         	movff	?___flneg,efgtoa@g
  5112   001092  C002  F06A         	movff	?___flneg+1,efgtoa@g+1
  5113   001096  C003  F06B         	movff	?___flneg+2,efgtoa@g+2
  5114   00109A  C004  F06C         	movff	?___flneg+3,efgtoa@g+3
  5115   00109E                     l5604:
  5116                           
  5117                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  5118   00109E  0E00               	movlw	0
  5119   0010A0  6E68               	movwf	(efgtoa@n+1)^0,c
  5120   0010A2  0E00               	movlw	0
  5121   0010A4  6E67               	movwf	efgtoa@n^0,c
  5122   0010A6                     
  5123                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  5124   0010A6  C09A  F056         	movff	_width,efgtoa@w
  5125   0010AA  C09B  F057         	movff	_width+1,efgtoa@w+1
  5126   0010AE                     
  5127                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  5128   0010AE  5066               	movf	efgtoa@sign^0,w,c
  5129   0010B0  B4D8               	btfsc	status,2,c
  5130   0010B2  EF5D  F008         	goto	u5901
  5131   0010B6  EF5F  F008         	goto	u5900
  5132   0010BA                     u5901:
  5133   0010BA  EF73  F008         	goto	l5618
  5134   0010BE                     u5900:
  5135   0010BE                     
  5136                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  5137   0010BE  5066               	movf	efgtoa@sign^0,w,c
  5138   0010C0  A4D8               	btfss	status,2,c
  5139   0010C2  EF65  F008         	goto	u5911
  5140   0010C6  EF67  F008         	goto	u5910
  5141   0010CA                     u5911:
  5142   0010CA  EF6D  F008         	goto	l5614
  5143   0010CE                     u5910:
  5144   0010CE  0E00               	movlw	0
  5145   0010D0  6E4C               	movwf	(_efgtoa$1489+1)^0,c
  5146   0010D2  0E2B               	movlw	43
  5147   0010D4  6E4B               	movwf	_efgtoa$1489^0,c
  5148   0010D6  EF71  F008         	goto	l5616
  5149   0010DA                     l5614:
  5150   0010DA  0E00               	movlw	0
  5151   0010DC  6E4C               	movwf	(_efgtoa$1489+1)^0,c
  5152   0010DE  0E2D               	movlw	45
  5153   0010E0  6E4B               	movwf	_efgtoa$1489^0,c
  5154   0010E2                     l5616:
  5155   0010E2  C04B  F066         	movff	_efgtoa$1489,efgtoa@sign
  5156   0010E6                     l5618:
  5157                           
  5158                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  5159   0010E6  C069  F001         	movff	efgtoa@g,___fpclassifyf@x
  5160   0010EA  C06A  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5161   0010EE  C06B  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5162   0010F2  C06C  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5163   0010F6  ECCC  F023         	call	___fpclassifyf	;wreg free
  5164   0010FA  0401               	decf	?___fpclassifyf^0,w,c
  5165   0010FC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5166   0010FE  A4D8               	btfss	status,2,c
  5167   001100  EF84  F008         	goto	u5921
  5168   001104  EF86  F008         	goto	u5920
  5169   001108                     u5921:
  5170   001108  EFB7  F008         	goto	l5636
  5171   00110C                     u5920:
  5172   00110C                     
  5173                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  5174   00110C  5066               	movf	efgtoa@sign^0,w,c
  5175   00110E  B4D8               	btfsc	status,2,c
  5176   001110  EF8C  F008         	goto	u5931
  5177   001114  EF8E  F008         	goto	u5930
  5178   001118                     u5931:
  5179   001118  EF97  F008         	goto	l5628
  5180   00111C                     u5930:
  5181   00111C                     
  5182                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  5183   00111C  C066  F164         	movff	efgtoa@sign,_dbuf
  5184   001120                     
  5185                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  5186   001120  0656               	decf	efgtoa@w^0,f,c
  5187   001122  A0D8               	btfss	status,0,c
  5188   001124  0657               	decf	(efgtoa@w+1)^0,f,c
  5189   001126                     
  5190                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  5191   001126  0E00               	movlw	0
  5192   001128  6E68               	movwf	(efgtoa@n+1)^0,c
  5193   00112A  0E01               	movlw	1
  5194   00112C  6E67               	movwf	efgtoa@n^0,c
  5195   00112E                     l5628:
  5196                           
  5197                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  5198   00112E  0E64               	movlw	low _dbuf
  5199   001130  2467               	addwf	efgtoa@n^0,w,c
  5200   001132  6E01               	movwf	strcpy@dest^0,c
  5201   001134  0E01               	movlw	high _dbuf
  5202   001136  2068               	addwfc	(efgtoa@n+1)^0,w,c
  5203   001138  6E02               	movwf	(strcpy@dest+1)^0,c
  5204   00113A  0E42               	movlw	low STR_10
  5205   00113C  6E03               	movwf	strcpy@src^0,c
  5206   00113E  0E10               	movlw	high STR_10
  5207   001140  6E04               	movwf	(strcpy@src+1)^0,c
  5208   001142  ECCA  F02B         	call	_strcpy	;wreg free
  5209   001146                     l5630:
  5210                           
  5211                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  5212   001146  0EFD               	movlw	253
  5213   001148  2656               	addwf	efgtoa@w^0,f,c
  5214   00114A  0EFF               	movlw	255
  5215   00114C  2257               	addwfc	(efgtoa@w+1)^0,f,c
  5216   00114E                     
  5217                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  5218   00114E  C03C  F011         	movff	efgtoa@fp,pad@fp
  5219   001152  C03D  F012         	movff	efgtoa@fp+1,pad@fp+1
  5220   001156  0E64               	movlw	low _dbuf
  5221   001158  6E13               	movwf	pad@buf^0,c
  5222   00115A  0E01               	movlw	high _dbuf
  5223   00115C  6E14               	movwf	(pad@buf+1)^0,c
  5224   00115E  C056  F015         	movff	efgtoa@w,pad@p
  5225   001162  C057  F016         	movff	efgtoa@w+1,pad@p+1
  5226   001166  ECFD  F028         	call	_pad	;wreg free
  5227   00116A  EF10  F00D         	goto	l1375
  5228   00116E                     l5636:
  5229                           
  5230                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  5231   00116E  C069  F001         	movff	efgtoa@g,___fpclassifyf@x
  5232   001172  C06A  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5233   001176  C06B  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5234   00117A  C06C  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5235   00117E  ECCC  F023         	call	___fpclassifyf	;wreg free
  5236   001182  5001               	movf	?___fpclassifyf^0,w,c
  5237   001184  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5238   001186  A4D8               	btfss	status,2,c
  5239   001188  EFC8  F008         	goto	u5941
  5240   00118C  EFCA  F008         	goto	u5940
  5241   001190                     u5941:
  5242   001190  EFE9  F008         	goto	l5654
  5243   001194                     u5940:
  5244   001194                     
  5245                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  5246   001194  5066               	movf	efgtoa@sign^0,w,c
  5247   001196  B4D8               	btfsc	status,2,c
  5248   001198  EFD0  F008         	goto	u5951
  5249   00119C  EFD2  F008         	goto	u5950
  5250   0011A0                     u5951:
  5251   0011A0  EFDB  F008         	goto	l5646
  5252   0011A4                     u5950:
  5253   0011A4                     
  5254                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  5255   0011A4  C066  F164         	movff	efgtoa@sign,_dbuf
  5256   0011A8                     
  5257                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  5258   0011A8  0656               	decf	efgtoa@w^0,f,c
  5259   0011AA  A0D8               	btfss	status,0,c
  5260   0011AC  0657               	decf	(efgtoa@w+1)^0,f,c
  5261   0011AE                     
  5262                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  5263   0011AE  0E00               	movlw	0
  5264   0011B0  6E68               	movwf	(efgtoa@n+1)^0,c
  5265   0011B2  0E01               	movlw	1
  5266   0011B4  6E67               	movwf	efgtoa@n^0,c
  5267   0011B6                     l5646:
  5268                           
  5269                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  5270   0011B6  0E64               	movlw	low _dbuf
  5271   0011B8  2467               	addwf	efgtoa@n^0,w,c
  5272   0011BA  6E01               	movwf	strcpy@dest^0,c
  5273   0011BC  0E01               	movlw	high _dbuf
  5274   0011BE  2068               	addwfc	(efgtoa@n+1)^0,w,c
  5275   0011C0  6E02               	movwf	(strcpy@dest+1)^0,c
  5276   0011C2  0E46               	movlw	low STR_13
  5277   0011C4  6E03               	movwf	strcpy@src^0,c
  5278   0011C6  0E10               	movlw	high STR_13
  5279   0011C8  6E04               	movwf	(strcpy@src+1)^0,c
  5280   0011CA  ECCA  F02B         	call	_strcpy	;wreg free
  5281   0011CE  EFA3  F008         	goto	l5630
  5282   0011D2                     l5654:
  5283                           
  5284                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  5285   0011D2  0E00               	movlw	0
  5286   0011D4  6E6D               	movwf	efgtoa@u^0,c
  5287   0011D6  0E00               	movlw	0
  5288   0011D8  6E6E               	movwf	(efgtoa@u+1)^0,c
  5289   0011DA  0E80               	movlw	128
  5290   0011DC  6E6F               	movwf	(efgtoa@u+2)^0,c
  5291   0011DE  0E3F               	movlw	63
  5292   0011E0  6E70               	movwf	(efgtoa@u+3)^0,c
  5293                           
  5294                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  5295   0011E2  0E00               	movlw	0
  5296   0011E4  6E55               	movwf	(efgtoa@e+1)^0,c
  5297   0011E6  0E00               	movlw	0
  5298   0011E8  6E54               	movwf	efgtoa@e^0,c
  5299   0011EA                     
  5300                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  5301   0011EA  C069  F001         	movff	efgtoa@g,___fleq@ff1
  5302   0011EE  C06A  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5303   0011F2  C06B  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5304   0011F6  C06C  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5305   0011FA  0E00               	movlw	0
  5306   0011FC  6E05               	movwf	___fleq@ff2^0,c
  5307   0011FE  0E00               	movlw	0
  5308   001200  6E06               	movwf	(___fleq@ff2+1)^0,c
  5309   001202  0E00               	movlw	0
  5310   001204  6E07               	movwf	(___fleq@ff2+2)^0,c
  5311   001206  0E00               	movlw	0
  5312   001208  6E08               	movwf	(___fleq@ff2+3)^0,c
  5313   00120A  ECF7  F026         	call	___fleq	;wreg free
  5314   00120E  B0D8               	btfsc	status,0,c
  5315   001210  EF0C  F009         	goto	u5961
  5316   001214  EF0E  F009         	goto	u5960
  5317   001218                     u5961:
  5318   001218  EFE9  F009         	goto	l1378
  5319   00121C                     u5960:
  5320   00121C  EF1A  F009         	goto	l5662
  5321   001220                     l1380:
  5322                           
  5323                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  5324   001220  C058  F06D         	movff	efgtoa@ou,efgtoa@u
  5325   001224  C059  F06E         	movff	efgtoa@ou+1,efgtoa@u+1
  5326   001228  C05A  F06F         	movff	efgtoa@ou+2,efgtoa@u+2
  5327   00122C  C05B  F070         	movff	efgtoa@ou+3,efgtoa@u+3
  5328   001230                     
  5329                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  5330   001230  4A54               	infsnz	efgtoa@e^0,f,c
  5331   001232  2A55               	incf	(efgtoa@e+1)^0,f,c
  5332   001234                     l5662:
  5333                           
  5334                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  5335   001234  C06D  F001         	movff	efgtoa@u,___flmul@b
  5336   001238  C06E  F002         	movff	efgtoa@u+1,___flmul@b+1
  5337   00123C  C06F  F003         	movff	efgtoa@u+2,___flmul@b+2
  5338   001240  C070  F004         	movff	efgtoa@u+3,___flmul@b+3
  5339   001244  0E00               	movlw	0
  5340   001246  6E05               	movwf	___flmul@a^0,c
  5341   001248  0E00               	movlw	0
  5342   00124A  6E06               	movwf	(___flmul@a+1)^0,c
  5343   00124C  0E20               	movlw	32
  5344   00124E  6E07               	movwf	(___flmul@a+2)^0,c
  5345   001250  0E41               	movlw	65
  5346   001252  6E08               	movwf	(___flmul@a+3)^0,c
  5347   001254  EC5B  F017         	call	___flmul	;wreg free
  5348   001258  C001  F058         	movff	?___flmul,efgtoa@ou
  5349   00125C  C002  F059         	movff	?___flmul+1,efgtoa@ou+1
  5350   001260  C003  F05A         	movff	?___flmul+2,efgtoa@ou+2
  5351   001264  C004  F05B         	movff	?___flmul+3,efgtoa@ou+3
  5352   001268  5058               	movf	efgtoa@ou^0,w,c
  5353   00126A  5C69               	subwf	efgtoa@g^0,w,c
  5354   00126C  6E01               	movwf	labs@a^0,c
  5355   00126E  5059               	movf	(efgtoa@ou+1)^0,w,c
  5356   001270  586A               	subwfb	(efgtoa@g+1)^0,w,c
  5357   001272  6E02               	movwf	(labs@a+1)^0,c
  5358   001274  505A               	movf	(efgtoa@ou+2)^0,w,c
  5359   001276  586B               	subwfb	(efgtoa@g+2)^0,w,c
  5360   001278  6E03               	movwf	(labs@a+2)^0,c
  5361   00127A  505B               	movf	(efgtoa@ou+3)^0,w,c
  5362   00127C  586C               	subwfb	(efgtoa@g+3)^0,w,c
  5363   00127E  6E04               	movwf	(labs@a+3)^0,c
  5364   001280  EC14  F02A         	call	_labs	;wreg free
  5365   001284  BE04               	btfsc	(?_labs+3)^0,7,c
  5366   001286  EF50  F009         	goto	u5971
  5367   00128A  5004               	movf	(?_labs+3)^0,w,c
  5368   00128C  1003               	iorwf	(?_labs+2)^0,w,c
  5369   00128E  1002               	iorwf	(?_labs+1)^0,w,c
  5370   001290  E109               	bnz	u5970
  5371   001292  0E02               	movlw	2
  5372   001294  5C01               	subwf	?_labs^0,w,c
  5373   001296  A0D8               	btfss	status,0,c
  5374   001298  EF50  F009         	goto	u5971
  5375   00129C  EF52  F009         	goto	u5970
  5376   0012A0                     u5971:
  5377   0012A0  EF10  F009         	goto	l1380
  5378   0012A4                     u5970:
  5379   0012A4  C058  F01A         	movff	efgtoa@ou,___flge@ff1
  5380   0012A8  C059  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  5381   0012AC  C05A  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  5382   0012B0  C05B  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  5383   0012B4  C069  F01E         	movff	efgtoa@g,___flge@ff2
  5384   0012B8  C06A  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  5385   0012BC  C06B  F020         	movff	efgtoa@g+2,___flge@ff2+2
  5386   0012C0  C06C  F021         	movff	efgtoa@g+3,___flge@ff2+3
  5387   0012C4  EC4A  F023         	call	___flge	;wreg free
  5388   0012C8  A0D8               	btfss	status,0,c
  5389   0012CA  EF69  F009         	goto	u5981
  5390   0012CE  EF6B  F009         	goto	u5980
  5391   0012D2                     u5981:
  5392   0012D2  EF10  F009         	goto	l1380
  5393   0012D6                     u5980:
  5394   0012D6                     
  5395                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  5396   0012D6  506D               	movf	efgtoa@u^0,w,c
  5397   0012D8  5C69               	subwf	efgtoa@g^0,w,c
  5398   0012DA  6E01               	movwf	labs@a^0,c
  5399   0012DC  506E               	movf	(efgtoa@u+1)^0,w,c
  5400   0012DE  586A               	subwfb	(efgtoa@g+1)^0,w,c
  5401   0012E0  6E02               	movwf	(labs@a+1)^0,c
  5402   0012E2  506F               	movf	(efgtoa@u+2)^0,w,c
  5403   0012E4  586B               	subwfb	(efgtoa@g+2)^0,w,c
  5404   0012E6  6E03               	movwf	(labs@a+2)^0,c
  5405   0012E8  5070               	movf	(efgtoa@u+3)^0,w,c
  5406   0012EA  586C               	subwfb	(efgtoa@g+3)^0,w,c
  5407   0012EC  6E04               	movwf	(labs@a+3)^0,c
  5408   0012EE  EC14  F02A         	call	_labs	;wreg free
  5409   0012F2  BE04               	btfsc	(?_labs+3)^0,7,c
  5410   0012F4  EF89  F009         	goto	u5990
  5411   0012F8  5004               	movf	(?_labs+3)^0,w,c
  5412   0012FA  1003               	iorwf	(?_labs+2)^0,w,c
  5413   0012FC  1002               	iorwf	(?_labs+1)^0,w,c
  5414   0012FE  E107               	bnz	u5991
  5415   001300  0E02               	movlw	2
  5416   001302  5C01               	subwf	?_labs^0,w,c
  5417   001304  B0D8               	btfsc	status,0,c
  5418   001306  EF87  F009         	goto	u5991
  5419   00130A  EF89  F009         	goto	u5990
  5420   00130E                     u5991:
  5421   00130E  EFD0  F009         	goto	l5680
  5422   001312                     u5990:
  5423   001312                     l5670:
  5424                           
  5425                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  5426   001312  C06D  F069         	movff	efgtoa@u,efgtoa@g
  5427   001316  C06E  F06A         	movff	efgtoa@u+1,efgtoa@g+1
  5428   00131A  C06F  F06B         	movff	efgtoa@u+2,efgtoa@g+2
  5429   00131E  C070  F06C         	movff	efgtoa@u+3,efgtoa@g+3
  5430                           
  5431                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  5432   001322  EFE9  F009         	goto	l1378
  5433   001326                     l5672:
  5434                           
  5435                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  5436   001326  C06D  F00F         	movff	efgtoa@u,___fldiv@b
  5437   00132A  C06E  F010         	movff	efgtoa@u+1,___fldiv@b+1
  5438   00132E  C06F  F011         	movff	efgtoa@u+2,___fldiv@b+2
  5439   001332  C070  F012         	movff	efgtoa@u+3,___fldiv@b+3
  5440   001336  0E00               	movlw	0
  5441   001338  6E13               	movwf	___fldiv@a^0,c
  5442   00133A  0E00               	movlw	0
  5443   00133C  6E14               	movwf	(___fldiv@a+1)^0,c
  5444   00133E  0E20               	movlw	32
  5445   001340  6E15               	movwf	(___fldiv@a+2)^0,c
  5446   001342  0E41               	movlw	65
  5447   001344  6E16               	movwf	(___fldiv@a+3)^0,c
  5448   001346  EC70  F019         	call	___fldiv	;wreg free
  5449   00134A  C00F  F06D         	movff	?___fldiv,efgtoa@u
  5450   00134E  C010  F06E         	movff	?___fldiv+1,efgtoa@u+1
  5451   001352  C011  F06F         	movff	?___fldiv+2,efgtoa@u+2
  5452   001356  C012  F070         	movff	?___fldiv+3,efgtoa@u+3
  5453   00135A                     
  5454                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  5455   00135A  0654               	decf	efgtoa@e^0,f,c
  5456   00135C  A0D8               	btfss	status,0,c
  5457   00135E  0655               	decf	(efgtoa@e+1)^0,f,c
  5458   001360                     
  5459                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  5460   001360  506D               	movf	efgtoa@u^0,w,c
  5461   001362  5C69               	subwf	efgtoa@g^0,w,c
  5462   001364  6E01               	movwf	labs@a^0,c
  5463   001366  506E               	movf	(efgtoa@u+1)^0,w,c
  5464   001368  586A               	subwfb	(efgtoa@g+1)^0,w,c
  5465   00136A  6E02               	movwf	(labs@a+1)^0,c
  5466   00136C  506F               	movf	(efgtoa@u+2)^0,w,c
  5467   00136E  586B               	subwfb	(efgtoa@g+2)^0,w,c
  5468   001370  6E03               	movwf	(labs@a+2)^0,c
  5469   001372  5070               	movf	(efgtoa@u+3)^0,w,c
  5470   001374  586C               	subwfb	(efgtoa@g+3)^0,w,c
  5471   001376  6E04               	movwf	(labs@a+3)^0,c
  5472   001378  EC14  F02A         	call	_labs	;wreg free
  5473   00137C  BE04               	btfsc	(?_labs+3)^0,7,c
  5474   00137E  EFCE  F009         	goto	u6000
  5475   001382  5004               	movf	(?_labs+3)^0,w,c
  5476   001384  1003               	iorwf	(?_labs+2)^0,w,c
  5477   001386  1002               	iorwf	(?_labs+1)^0,w,c
  5478   001388  E107               	bnz	u6001
  5479   00138A  0E02               	movlw	2
  5480   00138C  5C01               	subwf	?_labs^0,w,c
  5481   00138E  B0D8               	btfsc	status,0,c
  5482   001390  EFCC  F009         	goto	u6001
  5483   001394  EFCE  F009         	goto	u6000
  5484   001398                     u6001:
  5485   001398  EFD0  F009         	goto	l5680
  5486   00139C                     u6000:
  5487   00139C  EF89  F009         	goto	l5670
  5488   0013A0                     l5680:
  5489                           
  5490                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  5491   0013A0  C069  F01A         	movff	efgtoa@g,___flge@ff1
  5492   0013A4  C06A  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  5493   0013A8  C06B  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  5494   0013AC  C06C  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  5495   0013B0  C06D  F01E         	movff	efgtoa@u,___flge@ff2
  5496   0013B4  C06E  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  5497   0013B8  C06F  F020         	movff	efgtoa@u+2,___flge@ff2+2
  5498   0013BC  C070  F021         	movff	efgtoa@u+3,___flge@ff2+3
  5499   0013C0  EC4A  F023         	call	___flge	;wreg free
  5500   0013C4  A0D8               	btfss	status,0,c
  5501   0013C6  EFE7  F009         	goto	u6011
  5502   0013CA  EFE9  F009         	goto	u6010
  5503   0013CE                     u6011:
  5504   0013CE  EF93  F009         	goto	l5672
  5505   0013D2                     u6010:
  5506   0013D2                     l1378:
  5507                           
  5508                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  5509   0013D2  C042  F04E         	movff	efgtoa@c,efgtoa@mode
  5510                           
  5511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  5512   0013D6  C04E  F04F         	movff	efgtoa@mode,efgtoa@nmode
  5513   0013DA                     
  5514                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  5515   0013DA  BE7E               	btfsc	(_prec+1)^0,7,c
  5516   0013DC  EFF2  F009         	goto	u6021
  5517   0013E0  EFF4  F009         	goto	u6020
  5518   0013E4                     u6021:
  5519   0013E4  EFFA  F009         	goto	l5686
  5520   0013E8                     u6020:
  5521   0013E8  C07D  F047         	movff	_prec,efgtoa@p
  5522   0013EC  C07E  F048         	movff	_prec+1,efgtoa@p+1
  5523   0013F0  EFFE  F009         	goto	l5688
  5524   0013F4                     l5686:
  5525   0013F4  0E00               	movlw	0
  5526   0013F6  6E48               	movwf	(efgtoa@p+1)^0,c
  5527   0013F8  0E06               	movlw	6
  5528   0013FA  6E47               	movwf	efgtoa@p^0,c
  5529   0013FC                     l5688:
  5530                           
  5531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  5532   0013FC  C047  F052         	movff	efgtoa@p,efgtoa@m
  5533   001400  C048  F053         	movff	efgtoa@p+1,efgtoa@m+1
  5534   001404                     
  5535                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  5536   001404  4A52               	infsnz	efgtoa@m^0,f,c
  5537   001406  2A53               	incf	(efgtoa@m+1)^0,f,c
  5538   001408                     
  5539                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  5540   001408  0E66               	movlw	102
  5541   00140A  184F               	xorwf	efgtoa@nmode^0,w,c
  5542   00140C  A4D8               	btfss	status,2,c
  5543   00140E  EF0B  F00A         	goto	u6031
  5544   001412  EF0D  F00A         	goto	u6030
  5545   001416                     u6031:
  5546   001416  EF2D  F00A         	goto	l5702
  5547   00141A                     u6030:
  5548   00141A                     
  5549                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  5550   00141A  BE55               	btfsc	(efgtoa@e+1)^0,7,c
  5551   00141C  EF14  F00A         	goto	u6040
  5552   001420  EF12  F00A         	goto	u6041
  5553   001424                     u6041:
  5554   001424  EF20  F00A         	goto	l5698
  5555   001428                     u6040:
  5556   001428                     
  5557                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  5558   001428  0E00               	movlw	0
  5559   00142A  6E6D               	movwf	efgtoa@u^0,c
  5560   00142C  0E00               	movlw	0
  5561   00142E  6E6E               	movwf	(efgtoa@u+1)^0,c
  5562   001430  0E80               	movlw	128
  5563   001432  6E6F               	movwf	(efgtoa@u+2)^0,c
  5564   001434  0E3F               	movlw	63
  5565   001436  6E70               	movwf	(efgtoa@u+3)^0,c
  5566                           
  5567                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  5568   001438  0E00               	movlw	0
  5569   00143A  6E55               	movwf	(efgtoa@e+1)^0,c
  5570   00143C  0E00               	movlw	0
  5571   00143E  6E54               	movwf	efgtoa@e^0,c
  5572   001440                     l5698:
  5573                           
  5574                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  5575   001440  0E67               	movlw	103
  5576   001442  184E               	xorwf	efgtoa@mode^0,w,c
  5577   001444  B4D8               	btfsc	status,2,c
  5578   001446  EF27  F00A         	goto	u6051
  5579   00144A  EF29  F00A         	goto	u6050
  5580   00144E                     u6051:
  5581   00144E  EF2D  F00A         	goto	l5702
  5582   001452                     u6050:
  5583   001452                     
  5584                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  5585   001452  5054               	movf	efgtoa@e^0,w,c
  5586   001454  2652               	addwf	efgtoa@m^0,f,c
  5587   001456  5055               	movf	(efgtoa@e+1)^0,w,c
  5588   001458  2253               	addwfc	(efgtoa@m+1)^0,f,c
  5589   00145A                     l5702:
  5590                           
  5591                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  5592   00145A  0E00               	movlw	0
  5593   00145C  6E5D               	movwf	(efgtoa@i+1)^0,c
  5594   00145E  0E00               	movlw	0
  5595   001460  6E5C               	movwf	efgtoa@i^0,c
  5596   001462                     
  5597                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  5598   001462  C069  F05E         	movff	efgtoa@g,efgtoa@h
  5599   001466  C06A  F05F         	movff	efgtoa@g+1,efgtoa@h+1
  5600   00146A  C06B  F060         	movff	efgtoa@g+2,efgtoa@h+2
  5601   00146E  C06C  F061         	movff	efgtoa@g+3,efgtoa@h+3
  5602   001472                     
  5603                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  5604   001472  C06D  F058         	movff	efgtoa@u,efgtoa@ou
  5605   001476  C06E  F059         	movff	efgtoa@u+1,efgtoa@ou+1
  5606   00147A  C06F  F05A         	movff	efgtoa@u+2,efgtoa@ou+2
  5607   00147E  C070  F05B         	movff	efgtoa@u+3,efgtoa@ou+3
  5608                           
  5609                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  5610   001482  EFBD  F00A         	goto	l5716
  5611   001486                     l5708:
  5612                           
  5613                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  5614   001486  C05E  F00F         	movff	efgtoa@h,___fldiv@b
  5615   00148A  C05F  F010         	movff	efgtoa@h+1,___fldiv@b+1
  5616   00148E  C060  F011         	movff	efgtoa@h+2,___fldiv@b+2
  5617   001492  C061  F012         	movff	efgtoa@h+3,___fldiv@b+3
  5618   001496  C06D  F013         	movff	efgtoa@u,___fldiv@a
  5619   00149A  C06E  F014         	movff	efgtoa@u+1,___fldiv@a+1
  5620   00149E  C06F  F015         	movff	efgtoa@u+2,___fldiv@a+2
  5621   0014A2  C070  F016         	movff	efgtoa@u+3,___fldiv@a+3
  5622   0014A6  EC70  F019         	call	___fldiv	;wreg free
  5623   0014AA  C00F  F028         	movff	?___fldiv,floorf@x
  5624   0014AE  C010  F029         	movff	?___fldiv+1,floorf@x+1
  5625   0014B2  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  5626   0014B6  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  5627   0014BA  EC3D  F01B         	call	_floorf	;wreg free
  5628   0014BE  C028  F062         	movff	?_floorf,efgtoa@l
  5629   0014C2  C029  F063         	movff	?_floorf+1,efgtoa@l+1
  5630   0014C6  C02A  F064         	movff	?_floorf+2,efgtoa@l+2
  5631   0014CA  C02B  F065         	movff	?_floorf+3,efgtoa@l+3
  5632                           
  5633                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  5634   0014CE  C062  F001         	movff	efgtoa@l,___fltol@f1
  5635   0014D2  C063  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5636   0014D6  C064  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5637   0014DA  C065  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5638   0014DE  ECC7  F022         	call	___fltol	;wreg free
  5639   0014E2  C001  F050         	movff	?___fltol,efgtoa@d
  5640   0014E6  C002  F051         	movff	?___fltol+1,efgtoa@d+1
  5641   0014EA                     
  5642                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  5643   0014EA  C05E  F01A         	movff	efgtoa@h,___flsub@b
  5644   0014EE  C05F  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5645   0014F2  C060  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5646   0014F6  C061  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5647   0014FA  C062  F005         	movff	efgtoa@l,___flmul@a
  5648   0014FE  C063  F006         	movff	efgtoa@l+1,___flmul@a+1
  5649   001502  C064  F007         	movff	efgtoa@l+2,___flmul@a+2
  5650   001506  C065  F008         	movff	efgtoa@l+3,___flmul@a+3
  5651   00150A  C06D  F001         	movff	efgtoa@u,___flmul@b
  5652   00150E  C06E  F002         	movff	efgtoa@u+1,___flmul@b+1
  5653   001512  C06F  F003         	movff	efgtoa@u+2,___flmul@b+2
  5654   001516  C070  F004         	movff	efgtoa@u+3,___flmul@b+3
  5655   00151A  EC5B  F017         	call	___flmul	;wreg free
  5656   00151E  C001  F01E         	movff	?___flmul,___flsub@a
  5657   001522  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5658   001526  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5659   00152A  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5660   00152E  EC42  F02B         	call	___flsub	;wreg free
  5661   001532  C01A  F05E         	movff	?___flsub,efgtoa@h
  5662   001536  C01B  F05F         	movff	?___flsub+1,efgtoa@h+1
  5663   00153A  C01C  F060         	movff	?___flsub+2,efgtoa@h+2
  5664   00153E  C01D  F061         	movff	?___flsub+3,efgtoa@h+3
  5665   001542                     
  5666                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  5667   001542  C06D  F00F         	movff	efgtoa@u,___fldiv@b
  5668   001546  C06E  F010         	movff	efgtoa@u+1,___fldiv@b+1
  5669   00154A  C06F  F011         	movff	efgtoa@u+2,___fldiv@b+2
  5670   00154E  C070  F012         	movff	efgtoa@u+3,___fldiv@b+3
  5671   001552  0E00               	movlw	0
  5672   001554  6E13               	movwf	___fldiv@a^0,c
  5673   001556  0E00               	movlw	0
  5674   001558  6E14               	movwf	(___fldiv@a+1)^0,c
  5675   00155A  0E20               	movlw	32
  5676   00155C  6E15               	movwf	(___fldiv@a+2)^0,c
  5677   00155E  0E41               	movlw	65
  5678   001560  6E16               	movwf	(___fldiv@a+3)^0,c
  5679   001562  EC70  F019         	call	___fldiv	;wreg free
  5680   001566  C00F  F06D         	movff	?___fldiv,efgtoa@u
  5681   00156A  C010  F06E         	movff	?___fldiv+1,efgtoa@u+1
  5682   00156E  C011  F06F         	movff	?___fldiv+2,efgtoa@u+2
  5683   001572  C012  F070         	movff	?___fldiv+3,efgtoa@u+3
  5684   001576                     
  5685                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  5686   001576  4A5C               	infsnz	efgtoa@i^0,f,c
  5687   001578  2A5D               	incf	(efgtoa@i+1)^0,f,c
  5688   00157A                     l5716:
  5689                           
  5690                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  5691   00157A  5052               	movf	efgtoa@m^0,w,c
  5692   00157C  5C5C               	subwf	efgtoa@i^0,w,c
  5693   00157E  505D               	movf	(efgtoa@i+1)^0,w,c
  5694   001580  0A80               	xorlw	128
  5695   001582  6E43               	movwf	??_efgtoa^0,c
  5696   001584  5053               	movf	(efgtoa@m+1)^0,w,c
  5697   001586  0A80               	xorlw	128
  5698   001588  5843               	subwfb	??_efgtoa^0,w,c
  5699   00158A  A0D8               	btfss	status,0,c
  5700   00158C  EFCA  F00A         	goto	u6061
  5701   001590  EFCC  F00A         	goto	u6060
  5702   001594                     u6061:
  5703   001594  EF43  F00A         	goto	l5708
  5704   001598                     u6060:
  5705   001598                     
  5706                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  5707   001598  C06D  F001         	movff	efgtoa@u,___flmul@b
  5708   00159C  C06E  F002         	movff	efgtoa@u+1,___flmul@b+1
  5709   0015A0  C06F  F003         	movff	efgtoa@u+2,___flmul@b+2
  5710   0015A4  C070  F004         	movff	efgtoa@u+3,___flmul@b+3
  5711   0015A8  0E00               	movlw	0
  5712   0015AA  6E05               	movwf	___flmul@a^0,c
  5713   0015AC  0E00               	movlw	0
  5714   0015AE  6E06               	movwf	(___flmul@a+1)^0,c
  5715   0015B0  0EA0               	movlw	160
  5716   0015B2  6E07               	movwf	(___flmul@a+2)^0,c
  5717   0015B4  0E40               	movlw	64
  5718   0015B6  6E08               	movwf	(___flmul@a+3)^0,c
  5719   0015B8  EC5B  F017         	call	___flmul	;wreg free
  5720   0015BC  C001  F062         	movff	?___flmul,efgtoa@l
  5721   0015C0  C002  F063         	movff	?___flmul+1,efgtoa@l+1
  5722   0015C4  C003  F064         	movff	?___flmul+2,efgtoa@l+2
  5723   0015C8  C004  F065         	movff	?___flmul+3,efgtoa@l+3
  5724   0015CC                     
  5725                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  5726   0015CC  C05E  F01A         	movff	efgtoa@h,___flge@ff1
  5727   0015D0  C05F  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  5728   0015D4  C060  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  5729   0015D8  C061  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  5730   0015DC  C062  F01E         	movff	efgtoa@l,___flge@ff2
  5731   0015E0  C063  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  5732   0015E4  C064  F020         	movff	efgtoa@l+2,___flge@ff2+2
  5733   0015E8  C065  F021         	movff	efgtoa@l+3,___flge@ff2+3
  5734   0015EC  EC4A  F023         	call	___flge	;wreg free
  5735   0015F0  B0D8               	btfsc	status,0,c
  5736   0015F2  EFFD  F00A         	goto	u6071
  5737   0015F6  EFFF  F00A         	goto	u6070
  5738   0015FA                     u6071:
  5739   0015FA  EF09  F00B         	goto	l5724
  5740   0015FE                     u6070:
  5741   0015FE                     
  5742                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  5743   0015FE  0E00               	movlw	0
  5744   001600  6E62               	movwf	efgtoa@l^0,c
  5745   001602  0E00               	movlw	0
  5746   001604  6E63               	movwf	(efgtoa@l+1)^0,c
  5747   001606  0E00               	movlw	0
  5748   001608  6E64               	movwf	(efgtoa@l+2)^0,c
  5749   00160A  0E00               	movlw	0
  5750   00160C  6E65               	movwf	(efgtoa@l+3)^0,c
  5751                           
  5752                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  5753   00160E  EF31  F00B         	goto	l5730
  5754   001612                     l5724:
  5755                           
  5756                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  5757   001612  C05E  F001         	movff	efgtoa@h,___fleq@ff1
  5758   001616  C05F  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5759   00161A  C060  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5760   00161E  C061  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5761   001622  C062  F005         	movff	efgtoa@l,___fleq@ff2
  5762   001626  C063  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5763   00162A  C064  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5764   00162E  C065  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5765   001632  ECF7  F026         	call	___fleq	;wreg free
  5766   001636  A0D8               	btfss	status,0,c
  5767   001638  EF20  F00B         	goto	u6081
  5768   00163C  EF22  F00B         	goto	u6080
  5769   001640                     u6081:
  5770   001640  EF31  F00B         	goto	l5730
  5771   001644                     u6080:
  5772   001644  B050               	btfsc	efgtoa@d^0,0,c
  5773   001646  EF27  F00B         	goto	u6091
  5774   00164A  EF29  F00B         	goto	u6090
  5775   00164E                     u6091:
  5776   00164E  EF31  F00B         	goto	l5730
  5777   001652                     u6090:
  5778   001652                     
  5779                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  5780   001652  0E00               	movlw	0
  5781   001654  6E62               	movwf	efgtoa@l^0,c
  5782   001656  0E00               	movlw	0
  5783   001658  6E63               	movwf	(efgtoa@l+1)^0,c
  5784   00165A  0E00               	movlw	0
  5785   00165C  6E64               	movwf	(efgtoa@l+2)^0,c
  5786   00165E  0E00               	movlw	0
  5787   001660  6E65               	movwf	(efgtoa@l+3)^0,c
  5788   001662                     l5730:
  5789                           
  5790                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  5791   001662  C069  F001         	movff	efgtoa@g,___fladd@b
  5792   001666  C06A  F002         	movff	efgtoa@g+1,___fladd@b+1
  5793   00166A  C06B  F003         	movff	efgtoa@g+2,___fladd@b+2
  5794   00166E  C06C  F004         	movff	efgtoa@g+3,___fladd@b+3
  5795   001672  C062  F005         	movff	efgtoa@l,___fladd@a
  5796   001676  C063  F006         	movff	efgtoa@l+1,___fladd@a+1
  5797   00167A  C064  F007         	movff	efgtoa@l+2,___fladd@a+2
  5798   00167E  C065  F008         	movff	efgtoa@l+3,___fladd@a+3
  5799   001682  ECFB  F014         	call	___fladd	;wreg free
  5800   001686  C001  F05E         	movff	?___fladd,efgtoa@h
  5801   00168A  C002  F05F         	movff	?___fladd+1,efgtoa@h+1
  5802   00168E  C003  F060         	movff	?___fladd+2,efgtoa@h+2
  5803   001692  C004  F061         	movff	?___fladd+3,efgtoa@h+3
  5804   001696                     
  5805                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  5806   001696  C05E  F01A         	movff	efgtoa@h,___flge@ff1
  5807   00169A  C05F  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  5808   00169E  C060  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  5809   0016A2  C061  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  5810   0016A6  0E00               	movlw	0
  5811   0016A8  6E05               	movwf	___flmul@a^0,c
  5812   0016AA  0E00               	movlw	0
  5813   0016AC  6E06               	movwf	(___flmul@a+1)^0,c
  5814   0016AE  0E20               	movlw	32
  5815   0016B0  6E07               	movwf	(___flmul@a+2)^0,c
  5816   0016B2  0E41               	movlw	65
  5817   0016B4  6E08               	movwf	(___flmul@a+3)^0,c
  5818   0016B6  C058  F001         	movff	efgtoa@ou,___flmul@b
  5819   0016BA  C059  F002         	movff	efgtoa@ou+1,___flmul@b+1
  5820   0016BE  C05A  F003         	movff	efgtoa@ou+2,___flmul@b+2
  5821   0016C2  C05B  F004         	movff	efgtoa@ou+3,___flmul@b+3
  5822   0016C6  EC5B  F017         	call	___flmul	;wreg free
  5823   0016CA  C001  F01E         	movff	?___flmul,___flge@ff2
  5824   0016CE  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  5825   0016D2  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  5826   0016D6  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  5827   0016DA  EC4A  F023         	call	___flge	;wreg free
  5828   0016DE  A0D8               	btfss	status,0,c
  5829   0016E0  EF74  F00B         	goto	u6101
  5830   0016E4  EF76  F00B         	goto	u6100
  5831   0016E8                     u6101:
  5832   0016E8  EF9D  F00B         	goto	l5742
  5833   0016EC                     u6100:
  5834   0016EC                     
  5835                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  5836   0016EC  4A54               	infsnz	efgtoa@e^0,f,c
  5837   0016EE  2A55               	incf	(efgtoa@e+1)^0,f,c
  5838   0016F0                     
  5839                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  5840   0016F0  C058  F001         	movff	efgtoa@ou,___flmul@b
  5841   0016F4  C059  F002         	movff	efgtoa@ou+1,___flmul@b+1
  5842   0016F8  C05A  F003         	movff	efgtoa@ou+2,___flmul@b+2
  5843   0016FC  C05B  F004         	movff	efgtoa@ou+3,___flmul@b+3
  5844   001700  0E00               	movlw	0
  5845   001702  6E05               	movwf	___flmul@a^0,c
  5846   001704  0E00               	movlw	0
  5847   001706  6E06               	movwf	(___flmul@a+1)^0,c
  5848   001708  0E20               	movlw	32
  5849   00170A  6E07               	movwf	(___flmul@a+2)^0,c
  5850   00170C  0E41               	movlw	65
  5851   00170E  6E08               	movwf	(___flmul@a+3)^0,c
  5852   001710  EC5B  F017         	call	___flmul	;wreg free
  5853   001714  C001  F058         	movff	?___flmul,efgtoa@ou
  5854   001718  C002  F059         	movff	?___flmul+1,efgtoa@ou+1
  5855   00171C  C003  F05A         	movff	?___flmul+2,efgtoa@ou+2
  5856   001720  C004  F05B         	movff	?___flmul+3,efgtoa@ou+3
  5857   001724                     
  5858                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  5859   001724  0E66               	movlw	102
  5860   001726  184F               	xorwf	efgtoa@nmode^0,w,c
  5861   001728  A4D8               	btfss	status,2,c
  5862   00172A  EF99  F00B         	goto	u6111
  5863   00172E  EF9B  F00B         	goto	u6110
  5864   001732                     u6111:
  5865   001732  EF9D  F00B         	goto	l5742
  5866   001736                     u6110:
  5867   001736                     
  5868                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  5869   001736  4A52               	infsnz	efgtoa@m^0,f,c
  5870   001738  2A53               	incf	(efgtoa@m+1)^0,f,c
  5871   00173A                     l5742:
  5872                           
  5873                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  5874   00173A  C058  F06D         	movff	efgtoa@ou,efgtoa@u
  5875   00173E  C059  F06E         	movff	efgtoa@ou+1,efgtoa@u+1
  5876   001742  C05A  F06F         	movff	efgtoa@ou+2,efgtoa@u+2
  5877   001746  C05B  F070         	movff	efgtoa@ou+3,efgtoa@u+3
  5878   00174A                     
  5879                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  5880   00174A  C054  F045         	movff	efgtoa@e,efgtoa@ne
  5881   00174E  C055  F046         	movff	efgtoa@e+1,efgtoa@ne+1
  5882   001752                     
  5883                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  5884   001752  0E00               	movlw	0
  5885   001754  6E4D               	movwf	efgtoa@pp^0,c
  5886   001756                     
  5887                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  5888   001756  0E00               	movlw	0
  5889   001758  6E4A               	movwf	(efgtoa@t+1)^0,c
  5890   00175A  0E00               	movlw	0
  5891   00175C  6E49               	movwf	efgtoa@t^0,c
  5892   00175E                     
  5893                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  5894   00175E  0E00               	movlw	0
  5895   001760  6E5D               	movwf	(efgtoa@i+1)^0,c
  5896   001762  0E00               	movlw	0
  5897   001764  6E5C               	movwf	efgtoa@i^0,c
  5898                           
  5899                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5900   001766  EF97  F00C         	goto	l5792
  5901   00176A                     l5752:
  5902                           
  5903                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  5904   00176A  C05E  F00F         	movff	efgtoa@h,___fldiv@b
  5905   00176E  C05F  F010         	movff	efgtoa@h+1,___fldiv@b+1
  5906   001772  C060  F011         	movff	efgtoa@h+2,___fldiv@b+2
  5907   001776  C061  F012         	movff	efgtoa@h+3,___fldiv@b+3
  5908   00177A  C06D  F013         	movff	efgtoa@u,___fldiv@a
  5909   00177E  C06E  F014         	movff	efgtoa@u+1,___fldiv@a+1
  5910   001782  C06F  F015         	movff	efgtoa@u+2,___fldiv@a+2
  5911   001786  C070  F016         	movff	efgtoa@u+3,___fldiv@a+3
  5912   00178A  EC70  F019         	call	___fldiv	;wreg free
  5913   00178E  C00F  F028         	movff	?___fldiv,floorf@x
  5914   001792  C010  F029         	movff	?___fldiv+1,floorf@x+1
  5915   001796  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  5916   00179A  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  5917   00179E  EC3D  F01B         	call	_floorf	;wreg free
  5918   0017A2  C028  F062         	movff	?_floorf,efgtoa@l
  5919   0017A6  C029  F063         	movff	?_floorf+1,efgtoa@l+1
  5920   0017AA  C02A  F064         	movff	?_floorf+2,efgtoa@l+2
  5921   0017AE  C02B  F065         	movff	?_floorf+3,efgtoa@l+3
  5922                           
  5923                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  5924   0017B2  C062  F001         	movff	efgtoa@l,___fltol@f1
  5925   0017B6  C063  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5926   0017BA  C064  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5927   0017BE  C065  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5928   0017C2  ECC7  F022         	call	___fltol	;wreg free
  5929   0017C6  BE02               	btfsc	(?___fltol+1)^0,7,c
  5930   0017C8  EFF1  F00B         	goto	u6120
  5931   0017CC  5002               	movf	(?___fltol+1)^0,w,c
  5932   0017CE  E107               	bnz	u6121
  5933   0017D0  0E0A               	movlw	10
  5934   0017D2  5C01               	subwf	?___fltol^0,w,c
  5935   0017D4  B0D8               	btfsc	status,0,c
  5936   0017D6  EFEF  F00B         	goto	u6121
  5937   0017DA  EFF1  F00B         	goto	u6120
  5938   0017DE                     u6121:
  5939   0017DE  EF01  F00C         	goto	l5756
  5940   0017E2                     u6120:
  5941   0017E2  C062  F001         	movff	efgtoa@l,___fltol@f1
  5942   0017E6  C063  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5943   0017EA  C064  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5944   0017EE  C065  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5945   0017F2  ECC7  F022         	call	___fltol	;wreg free
  5946   0017F6  C001  F050         	movff	?___fltol,efgtoa@d
  5947   0017FA  C002  F051         	movff	?___fltol+1,efgtoa@d+1
  5948   0017FE  EF05  F00C         	goto	l1408
  5949   001802                     l5756:
  5950   001802  0E00               	movlw	0
  5951   001804  6E51               	movwf	(efgtoa@d+1)^0,c
  5952   001806  0E09               	movlw	9
  5953   001808  6E50               	movwf	efgtoa@d^0,c
  5954   00180A                     l1408:
  5955                           
  5956                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  5957   00180A  504D               	movf	efgtoa@pp^0,w,c
  5958   00180C  A4D8               	btfss	status,2,c
  5959   00180E  EF0B  F00C         	goto	u6131
  5960   001812  EF0D  F00C         	goto	u6130
  5961   001816                     u6131:
  5962   001816  EF35  F00C         	goto	l5776
  5963   00181A                     u6130:
  5964   00181A  BE46               	btfsc	(efgtoa@ne+1)^0,7,c
  5965   00181C  EF14  F00C         	goto	u6140
  5966   001820  EF12  F00C         	goto	u6141
  5967   001824                     u6141:
  5968   001824  EF35  F00C         	goto	l5776
  5969   001828                     u6140:
  5970   001828                     
  5971                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  5972   001828  0E64               	movlw	low _dbuf
  5973   00182A  2467               	addwf	efgtoa@n^0,w,c
  5974   00182C  6ED9               	movwf	fsr2l,c
  5975   00182E  0E01               	movlw	high _dbuf
  5976   001830  2068               	addwfc	(efgtoa@n+1)^0,w,c
  5977   001832  6EDA               	movwf	fsr2h,c
  5978   001834  0E2E               	movlw	46
  5979   001836  6EDF               	movwf	indf2,c
  5980   001838  4A67               	infsnz	efgtoa@n^0,f,c
  5981   00183A  2A68               	incf	(efgtoa@n+1)^0,f,c
  5982   00183C                     
  5983                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  5984   00183C  0656               	decf	efgtoa@w^0,f,c
  5985   00183E  A0D8               	btfss	status,0,c
  5986   001840  0657               	decf	(efgtoa@w+1)^0,f,c
  5987   001842                     
  5988                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  5989   001842  0E01               	movlw	1
  5990   001844  6E4D               	movwf	efgtoa@pp^0,c
  5991   001846  EF35  F00C         	goto	l5776
  5992   00184A                     l5768:
  5993                           
  5994                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  5995   00184A  0E64               	movlw	low _dbuf
  5996   00184C  2467               	addwf	efgtoa@n^0,w,c
  5997   00184E  6ED9               	movwf	fsr2l,c
  5998   001850  0E01               	movlw	high _dbuf
  5999   001852  2068               	addwfc	(efgtoa@n+1)^0,w,c
  6000   001854  6EDA               	movwf	fsr2h,c
  6001   001856  0E30               	movlw	48
  6002   001858  6EDF               	movwf	indf2,c
  6003   00185A  4A67               	infsnz	efgtoa@n^0,f,c
  6004   00185C  2A68               	incf	(efgtoa@n+1)^0,f,c
  6005   00185E                     
  6006                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  6007   00185E  0656               	decf	efgtoa@w^0,f,c
  6008   001860  A0D8               	btfss	status,0,c
  6009   001862  0657               	decf	(efgtoa@w+1)^0,f,c
  6010   001864                     
  6011                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  6012   001864  0649               	decf	efgtoa@t^0,f,c
  6013   001866  A0D8               	btfss	status,0,c
  6014   001868  064A               	decf	(efgtoa@t+1)^0,f,c
  6015   00186A                     l5776:
  6016                           
  6017                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  6018   00186A  5049               	movf	efgtoa@t^0,w,c
  6019   00186C  104A               	iorwf	(efgtoa@t+1)^0,w,c
  6020   00186E  A4D8               	btfss	status,2,c
  6021   001870  EF3C  F00C         	goto	u6151
  6022   001874  EF3E  F00C         	goto	u6150
  6023   001878                     u6151:
  6024   001878  EF25  F00C         	goto	l5768
  6025   00187C                     u6150:
  6026   00187C                     
  6027                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6028   00187C  0E64               	movlw	low _dbuf
  6029   00187E  2467               	addwf	efgtoa@n^0,w,c
  6030   001880  6ED9               	movwf	fsr2l,c
  6031   001882  0E01               	movlw	high _dbuf
  6032   001884  2068               	addwfc	(efgtoa@n+1)^0,w,c
  6033   001886  6EDA               	movwf	fsr2h,c
  6034   001888  5050               	movf	efgtoa@d^0,w,c
  6035   00188A  0F30               	addlw	48
  6036   00188C  6EDF               	movwf	indf2,c
  6037   00188E  4A67               	infsnz	efgtoa@n^0,f,c
  6038   001890  2A68               	incf	(efgtoa@n+1)^0,f,c
  6039   001892                     
  6040                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  6041   001892  0656               	decf	efgtoa@w^0,f,c
  6042   001894  A0D8               	btfss	status,0,c
  6043   001896  0657               	decf	(efgtoa@w+1)^0,f,c
  6044   001898                     
  6045                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  6046   001898  C05E  F01A         	movff	efgtoa@h,___flsub@b
  6047   00189C  C05F  F01B         	movff	efgtoa@h+1,___flsub@b+1
  6048   0018A0  C060  F01C         	movff	efgtoa@h+2,___flsub@b+2
  6049   0018A4  C061  F01D         	movff	efgtoa@h+3,___flsub@b+3
  6050   0018A8  C062  F005         	movff	efgtoa@l,___flmul@a
  6051   0018AC  C063  F006         	movff	efgtoa@l+1,___flmul@a+1
  6052   0018B0  C064  F007         	movff	efgtoa@l+2,___flmul@a+2
  6053   0018B4  C065  F008         	movff	efgtoa@l+3,___flmul@a+3
  6054   0018B8  C06D  F001         	movff	efgtoa@u,___flmul@b
  6055   0018BC  C06E  F002         	movff	efgtoa@u+1,___flmul@b+1
  6056   0018C0  C06F  F003         	movff	efgtoa@u+2,___flmul@b+2
  6057   0018C4  C070  F004         	movff	efgtoa@u+3,___flmul@b+3
  6058   0018C8  EC5B  F017         	call	___flmul	;wreg free
  6059   0018CC  C001  F01E         	movff	?___flmul,___flsub@a
  6060   0018D0  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  6061   0018D4  C003  F020         	movff	?___flmul+2,___flsub@a+2
  6062   0018D8  C004  F021         	movff	?___flmul+3,___flsub@a+3
  6063   0018DC  EC42  F02B         	call	___flsub	;wreg free
  6064   0018E0  C01A  F05E         	movff	?___flsub,efgtoa@h
  6065   0018E4  C01B  F05F         	movff	?___flsub+1,efgtoa@h+1
  6066   0018E8  C01C  F060         	movff	?___flsub+2,efgtoa@h+2
  6067   0018EC  C01D  F061         	movff	?___flsub+3,efgtoa@h+3
  6068   0018F0                     
  6069                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  6070   0018F0  C06D  F00F         	movff	efgtoa@u,___fldiv@b
  6071   0018F4  C06E  F010         	movff	efgtoa@u+1,___fldiv@b+1
  6072   0018F8  C06F  F011         	movff	efgtoa@u+2,___fldiv@b+2
  6073   0018FC  C070  F012         	movff	efgtoa@u+3,___fldiv@b+3
  6074   001900  0E00               	movlw	0
  6075   001902  6E13               	movwf	___fldiv@a^0,c
  6076   001904  0E00               	movlw	0
  6077   001906  6E14               	movwf	(___fldiv@a+1)^0,c
  6078   001908  0E20               	movlw	32
  6079   00190A  6E15               	movwf	(___fldiv@a+2)^0,c
  6080   00190C  0E41               	movlw	65
  6081   00190E  6E16               	movwf	(___fldiv@a+3)^0,c
  6082   001910  EC70  F019         	call	___fldiv	;wreg free
  6083   001914  C00F  F06D         	movff	?___fldiv,efgtoa@u
  6084   001918  C010  F06E         	movff	?___fldiv+1,efgtoa@u+1
  6085   00191C  C011  F06F         	movff	?___fldiv+2,efgtoa@u+2
  6086   001920  C012  F070         	movff	?___fldiv+3,efgtoa@u+3
  6087   001924                     
  6088                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  6089   001924  0645               	decf	efgtoa@ne^0,f,c
  6090   001926  A0D8               	btfss	status,0,c
  6091   001928  0646               	decf	(efgtoa@ne+1)^0,f,c
  6092   00192A                     
  6093                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  6094   00192A  4A5C               	infsnz	efgtoa@i^0,f,c
  6095   00192C  2A5D               	incf	(efgtoa@i+1)^0,f,c
  6096   00192E                     l5792:
  6097                           
  6098                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6099   00192E  5052               	movf	efgtoa@m^0,w,c
  6100   001930  5C5C               	subwf	efgtoa@i^0,w,c
  6101   001932  505D               	movf	(efgtoa@i+1)^0,w,c
  6102   001934  0A80               	xorlw	128
  6103   001936  6E43               	movwf	??_efgtoa^0,c
  6104   001938  5053               	movf	(efgtoa@m+1)^0,w,c
  6105   00193A  0A80               	xorlw	128
  6106   00193C  5843               	subwfb	??_efgtoa^0,w,c
  6107   00193E  B0D8               	btfsc	status,0,c
  6108   001940  EFA4  F00C         	goto	u6161
  6109   001944  EFA6  F00C         	goto	u6160
  6110   001948                     u6161:
  6111   001948  EFB4  F00C         	goto	l5796
  6112   00194C                     u6160:
  6113   00194C  BE68               	btfsc	(efgtoa@n+1)^0,7,c
  6114   00194E  EFB2  F00C         	goto	u6171
  6115   001952  5068               	movf	(efgtoa@n+1)^0,w,c
  6116   001954  E109               	bnz	u6170
  6117   001956  0E4B               	movlw	75
  6118   001958  5C67               	subwf	efgtoa@n^0,w,c
  6119   00195A  A0D8               	btfss	status,0,c
  6120   00195C  EFB2  F00C         	goto	u6171
  6121   001960  EFB4  F00C         	goto	u6170
  6122   001964                     u6171:
  6123   001964  EFB5  F00B         	goto	l5752
  6124   001968                     u6170:
  6125   001968                     l5796:
  6126                           
  6127                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  6128   001968  0E00               	movlw	0
  6129   00196A  6E5D               	movwf	(efgtoa@i+1)^0,c
  6130   00196C  0E4F               	movlw	79
  6131   00196E  6E5C               	movwf	efgtoa@i^0,c
  6132   001970                     
  6133                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  6134   001970  0E64               	movlw	low _dbuf
  6135   001972  245C               	addwf	efgtoa@i^0,w,c
  6136   001974  6ED9               	movwf	fsr2l,c
  6137   001976  0E01               	movlw	high _dbuf
  6138   001978  205D               	addwfc	(efgtoa@i+1)^0,w,c
  6139   00197A  6EDA               	movwf	fsr2h,c
  6140   00197C  6ADF               	clrf	indf2,c
  6141   00197E                     
  6142                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  6143   00197E  0E64               	movlw	low _dbuf
  6144   001980  6E43               	movwf	??_efgtoa^0,c
  6145   001982  0E01               	movlw	high _dbuf
  6146   001984  6E44               	movwf	(??_efgtoa+1)^0,c
  6147   001986  5067               	movf	efgtoa@n^0,w,c
  6148   001988  5E43               	subwf	??_efgtoa^0,f,c
  6149   00198A  5068               	movf	(efgtoa@n+1)^0,w,c
  6150   00198C  5A44               	subwfb	(??_efgtoa+1)^0,f,c
  6151   00198E  505C               	movf	efgtoa@i^0,w,c
  6152   001990  2443               	addwf	??_efgtoa^0,w,c
  6153   001992  6E01               	movwf	memcpy@d1^0,c
  6154   001994  505D               	movf	(efgtoa@i+1)^0,w,c
  6155   001996  2044               	addwfc	(??_efgtoa+1)^0,w,c
  6156   001998  6E02               	movwf	(memcpy@d1+1)^0,c
  6157   00199A  0E64               	movlw	low _dbuf
  6158   00199C  6E03               	movwf	memcpy@s1^0,c
  6159   00199E  0E01               	movlw	high _dbuf
  6160   0019A0  6E04               	movwf	(memcpy@s1+1)^0,c
  6161   0019A2  C067  F005         	movff	efgtoa@n,memcpy@n
  6162   0019A6  C068  F006         	movff	efgtoa@n+1,memcpy@n+1
  6163   0019AA  ECF7  F02A         	call	_memcpy	;wreg free
  6164   0019AE                     
  6165                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  6166   0019AE  5067               	movf	efgtoa@n^0,w,c
  6167   0019B0  5C5C               	subwf	efgtoa@i^0,w,c
  6168   0019B2  6E67               	movwf	efgtoa@n^0,c
  6169   0019B4  5068               	movf	(efgtoa@n+1)^0,w,c
  6170   0019B6  585D               	subwfb	(efgtoa@i+1)^0,w,c
  6171   0019B8  6E68               	movwf	(efgtoa@n+1)^0,c
  6172   0019BA                     
  6173                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  6174   0019BA  5066               	movf	efgtoa@sign^0,w,c
  6175   0019BC  A4D8               	btfss	status,2,c
  6176   0019BE  EFE3  F00C         	goto	u6181
  6177   0019C2  EFE6  F00C         	goto	u6180
  6178   0019C6                     u6181:
  6179   0019C6  0E01               	movlw	1
  6180   0019C8  EFE7  F00C         	goto	u6190
  6181   0019CC                     u6180:
  6182   0019CC  0E00               	movlw	0
  6183   0019CE                     u6190:
  6184   0019CE  6E5C               	movwf	efgtoa@i^0,c
  6185   0019D0  6A5D               	clrf	(efgtoa@i+1)^0,c
  6186   0019D2                     
  6187                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  6188   0019D2  5066               	movf	efgtoa@sign^0,w,c
  6189   0019D4  B4D8               	btfsc	status,2,c
  6190   0019D6  EFEF  F00C         	goto	u6201
  6191   0019DA  EFF1  F00C         	goto	u6200
  6192   0019DE                     u6201:
  6193   0019DE  EFFC  F00C         	goto	l5810
  6194   0019E2                     u6200:
  6195   0019E2                     
  6196                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  6197   0019E2  0667               	decf	efgtoa@n^0,f,c
  6198   0019E4  A0D8               	btfss	status,0,c
  6199   0019E6  0668               	decf	(efgtoa@n+1)^0,f,c
  6200   0019E8  0E64               	movlw	low _dbuf
  6201   0019EA  2467               	addwf	efgtoa@n^0,w,c
  6202   0019EC  6ED9               	movwf	fsr2l,c
  6203   0019EE  0E01               	movlw	high _dbuf
  6204   0019F0  2068               	addwfc	(efgtoa@n+1)^0,w,c
  6205   0019F2  6EDA               	movwf	fsr2h,c
  6206   0019F4  C066  FFDF         	movff	efgtoa@sign,indf2
  6207   0019F8                     l5810:
  6208                           
  6209                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  6210   0019F8  505C               	movf	efgtoa@i^0,w,c
  6211   0019FA  5E56               	subwf	efgtoa@w^0,f,c
  6212   0019FC  505D               	movf	(efgtoa@i+1)^0,w,c
  6213   0019FE  5A57               	subwfb	(efgtoa@w+1)^0,f,c
  6214   001A00                     
  6215                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  6216   001A00  C03C  F011         	movff	efgtoa@fp,pad@fp
  6217   001A04  C03D  F012         	movff	efgtoa@fp+1,pad@fp+1
  6218   001A08  0E64               	movlw	low _dbuf
  6219   001A0A  2467               	addwf	efgtoa@n^0,w,c
  6220   001A0C  6E13               	movwf	pad@buf^0,c
  6221   001A0E  0E01               	movlw	high _dbuf
  6222   001A10  2068               	addwfc	(efgtoa@n+1)^0,w,c
  6223   001A12  6E14               	movwf	(pad@buf+1)^0,c
  6224   001A14  C056  F015         	movff	efgtoa@w,pad@p
  6225   001A18  C057  F016         	movff	efgtoa@w+1,pad@p+1
  6226   001A1C  ECFD  F028         	call	_pad	;wreg free
  6227   001A20                     l1375:
  6228   001A20  0012               	return		;funcret
  6229   001A22                     __end_of_efgtoa:
  6230                           	callstack 0
  6231                           
  6232 ;; *************** function _strcpy *****************
  6233 ;; Defined at:
  6234 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6237 ;;		 -> dbuf(80), result_str(20), 
  6238 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6239 ;;		 -> STR_13(4), STR_10(4), STR_6(19), 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;  d               2    6[COMRAM] PTR unsigned char 
  6242 ;;		 -> dbuf(80), result_str(20), 
  6243 ;;  s               2    4[COMRAM] PTR const unsigned char 
  6244 ;;		 -> STR_13(4), STR_10(4), STR_6(19), 
  6245 ;; Return value:  Size  Location     Type
  6246 ;;                  2    0[COMRAM] PTR unsigned char 
  6247 ;; Registers used:
  6248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/0
  6251 ;;		On exit  : 0/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6255 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6257 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6258 ;;Total ram usage:        8 bytes
  6259 ;; Hardware stack levels used: 1
  6260 ;; This function calls:
  6261 ;;		Nothing
  6262 ;; This function is called by:
  6263 ;;		_main
  6264 ;;		_efgtoa
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text20
  6269   005794                     __ptext20:
  6270                           	callstack 0
  6271   005794                     _strcpy:
  6272                           	callstack 30
  6273   005794  C003  F005         	movff	strcpy@src,strcpy@s
  6274   005798  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  6275   00579C  C001  F007         	movff	strcpy@dest,strcpy@d
  6276   0057A0  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  6277   0057A4                     l4926:
  6278   0057A4  C005  FFF6         	movff	strcpy@s,tblptrl
  6279   0057A8  C006  FFF7         	movff	strcpy@s+1,tblptrh
  6280   0057AC  4A05               	infsnz	strcpy@s^0,f,c
  6281   0057AE  2A06               	incf	(strcpy@s+1)^0,f,c
  6282   0057B0                     	if	0	;tblptru may be non-zero
  6283   0057B0                     	endif
  6284   0057B0                     	if	0	;tblptru may be non-zero
  6285   0057B0                     	endif
  6286   0057B0  C007  FFD9         	movff	strcpy@d,fsr2l
  6287   0057B4  C008  FFDA         	movff	strcpy@d+1,fsr2h
  6288   0057B8  4A07               	infsnz	strcpy@d^0,f,c
  6289   0057BA  2A08               	incf	(strcpy@d+1)^0,f,c
  6290   0057BC  0008               	tblrd		*
  6291   0057BE  CFF5 FFDF          	movff	tablat,indf2
  6292   0057C2  50DF               	movf	indf2,w,c
  6293   0057C4  A4D8               	btfss	status,2,c
  6294   0057C6  EFE7  F02B         	goto	u4721
  6295   0057CA  EFE9  F02B         	goto	u4720
  6296   0057CE                     u4721:
  6297   0057CE  EFD2  F02B         	goto	l4926
  6298   0057D2                     u4720:
  6299   0057D2  0012               	return		;funcret
  6300   0057D4                     __end_of_strcpy:
  6301                           	callstack 0
  6302                           
  6303 ;; *************** function _memcpy *****************
  6304 ;; Defined at:
  6305 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;  d1              2    0[COMRAM] PTR void 
  6308 ;;		 -> dbuf(80), 
  6309 ;;  s1              2    2[COMRAM] PTR const void 
  6310 ;;		 -> dbuf(80), 
  6311 ;;  n               2    4[COMRAM] unsigned int 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6314 ;;		 -> dbuf(80), 
  6315 ;;  d               2    6[COMRAM] PTR unsigned char 
  6316 ;;		 -> dbuf(80), 
  6317 ;;  tmp             1   10[COMRAM] unsigned char 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  2    0[COMRAM] PTR void 
  6320 ;; Registers used:
  6321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6327 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;Total ram usage:       11 bytes
  6332 ;; Hardware stack levels used: 1
  6333 ;; This function calls:
  6334 ;;		Nothing
  6335 ;; This function is called by:
  6336 ;;		_efgtoa
  6337 ;; This function uses a non-reentrant model
  6338 ;;
  6339                           
  6340                           	psect	text21
  6341   0055EE                     __ptext21:
  6342                           	callstack 0
  6343   0055EE                     _memcpy:
  6344                           	callstack 26
  6345   0055EE  C003  F009         	movff	memcpy@s1,memcpy@s
  6346   0055F2  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  6347   0055F6  C001  F007         	movff	memcpy@d1,memcpy@d
  6348   0055FA  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  6349   0055FE  EF11  F02B         	goto	l5498
  6350   005602                     l5490:
  6351   005602  C009  FFD9         	movff	memcpy@s,fsr2l
  6352   005606  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  6353   00560A  50DF               	movf	indf2,w,c
  6354   00560C  6E0B               	movwf	memcpy@tmp^0,c
  6355   00560E  4A09               	infsnz	memcpy@s^0,f,c
  6356   005610  2A0A               	incf	(memcpy@s+1)^0,f,c
  6357   005612  C007  FFD9         	movff	memcpy@d,fsr2l
  6358   005616  C008  FFDA         	movff	memcpy@d+1,fsr2h
  6359   00561A  C00B  FFDF         	movff	memcpy@tmp,indf2
  6360   00561E  4A07               	infsnz	memcpy@d^0,f,c
  6361   005620  2A08               	incf	(memcpy@d+1)^0,f,c
  6362   005622                     l5498:
  6363   005622  0605               	decf	memcpy@n^0,f,c
  6364   005624  A0D8               	btfss	status,0,c
  6365   005626  0606               	decf	(memcpy@n+1)^0,f,c
  6366   005628  2805               	incf	memcpy@n^0,w,c
  6367   00562A  E106               	bnz	u5701
  6368   00562C  2806               	incf	(memcpy@n+1)^0,w,c
  6369   00562E  A4D8               	btfss	status,2,c
  6370   005630  EF1C  F02B         	goto	u5701
  6371   005634  EF1E  F02B         	goto	u5700
  6372   005638                     u5701:
  6373   005638  EF01  F02B         	goto	l5490
  6374   00563C                     u5700:
  6375   00563C  0012               	return		;funcret
  6376   00563E                     __end_of_memcpy:
  6377                           	callstack 0
  6378                           
  6379 ;; *************** function _labs *****************
  6380 ;; Defined at:
  6381 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  a               4    0[COMRAM] long 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;		None
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  4    0[COMRAM] long 
  6388 ;; Registers used:
  6389 ;;		wreg, status,2, status,0
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6397 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6398 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6399 ;;Total ram usage:        8 bytes
  6400 ;; Hardware stack levels used: 1
  6401 ;; This function calls:
  6402 ;;		Nothing
  6403 ;; This function is called by:
  6404 ;;		_efgtoa
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407                           
  6408                           	psect	text22
  6409   005428                     __ptext22:
  6410                           	callstack 0
  6411   005428                     _labs:
  6412                           	callstack 26
  6413   005428  BE04               	btfsc	(labs@a+3)^0,7,c
  6414   00542A  EF23  F02A         	goto	u5590
  6415   00542E  5004               	movf	(labs@a+3)^0,w,c
  6416   005430  1003               	iorwf	(labs@a+2)^0,w,c
  6417   005432  1002               	iorwf	(labs@a+1)^0,w,c
  6418   005434  E106               	bnz	u5591
  6419   005436  0401               	decf	labs@a^0,w,c
  6420   005438  B0D8               	btfsc	status,0,c
  6421   00543A  EF21  F02A         	goto	u5591
  6422   00543E  EF23  F02A         	goto	u5590
  6423   005442                     u5591:
  6424   005442  EF3E  F02A         	goto	l1522
  6425   005446                     u5590:
  6426   005446  C001  F005         	movff	labs@a,??_labs
  6427   00544A  C002  F006         	movff	labs@a+1,??_labs+1
  6428   00544E  C003  F007         	movff	labs@a+2,??_labs+2
  6429   005452  C004  F008         	movff	labs@a+3,??_labs+3
  6430   005456  1E05               	comf	??_labs^0,f,c
  6431   005458  1E06               	comf	(??_labs+1)^0,f,c
  6432   00545A  1E07               	comf	(??_labs+2)^0,f,c
  6433   00545C  1E08               	comf	(??_labs+3)^0,f,c
  6434   00545E  2A05               	incf	??_labs^0,f,c
  6435   005460  0E00               	movlw	0
  6436   005462  2206               	addwfc	(??_labs+1)^0,f,c
  6437   005464  2207               	addwfc	(??_labs+2)^0,f,c
  6438   005466  2208               	addwfc	(??_labs+3)^0,f,c
  6439   005468  C005  F001         	movff	??_labs,?_labs
  6440   00546C  C006  F002         	movff	??_labs+1,?_labs+1
  6441   005470  C007  F003         	movff	??_labs+2,?_labs+2
  6442   005474  C008  F004         	movff	??_labs+3,?_labs+3
  6443   005478  EF46  F02A         	goto	l1525
  6444   00547C                     l1522:
  6445   00547C  C001  F001         	movff	labs@a,?_labs
  6446   005480  C002  F002         	movff	labs@a+1,?_labs+1
  6447   005484  C003  F003         	movff	labs@a+2,?_labs+2
  6448   005488  C004  F004         	movff	labs@a+3,?_labs+3
  6449   00548C                     l1525:
  6450   00548C  0012               	return		;funcret
  6451   00548E                     __end_of_labs:
  6452                           	callstack 0
  6453                           
  6454 ;; *************** function _floorf *****************
  6455 ;; Defined at:
  6456 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;  x               4   39[COMRAM] float 
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;  u               4   55[COMRAM] struct .
  6461 ;;  m               4   49[COMRAM] unsigned long 
  6462 ;;  e               2   53[COMRAM] int 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  4   39[COMRAM] float 
  6465 ;; Registers used:
  6466 ;;		wreg, status,2, status,0
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6472 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6473 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;Total ram usage:       20 bytes
  6477 ;; Hardware stack levels used: 1
  6478 ;; This function calls:
  6479 ;;		Nothing
  6480 ;; This function is called by:
  6481 ;;		_efgtoa
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text23
  6486   00367A                     __ptext23:
  6487                           	callstack 0
  6488   00367A                     _floorf:
  6489                           	callstack 26
  6490   00367A  C080  F038         	movff	floorf@F526,floorf@u
  6491   00367E  C081  F039         	movff	floorf@F526+1,floorf@u+1
  6492   003682  C082  F03A         	movff	floorf@F526+2,floorf@u+2
  6493   003686  C083  F03B         	movff	floorf@F526+3,floorf@u+3
  6494   00368A  C028  F038         	movff	floorf@x,floorf@u
  6495   00368E  C029  F039         	movff	floorf@x+1,floorf@u+1
  6496   003692  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  6497   003696  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  6498   00369A  0E81               	movlw	129
  6499   00369C  6E2C               	movwf	??_floorf^0,c
  6500   00369E  0EFF               	movlw	255
  6501   0036A0  6E2D               	movwf	(??_floorf+1)^0,c
  6502   0036A2  C038  F02E         	movff	floorf@u,??_floorf+2
  6503   0036A6  C039  F02F         	movff	floorf@u+1,??_floorf+3
  6504   0036AA  C03A  F030         	movff	floorf@u+2,??_floorf+4
  6505   0036AE  C03B  F031         	movff	floorf@u+3,??_floorf+5
  6506   0036B2  0E18               	movlw	24
  6507   0036B4  EF61  F01B         	goto	u5600
  6508   0036B8                     u5605:
  6509   0036B8  90D8               	bcf	status,0,c
  6510   0036BA  3231               	rrcf	(??_floorf+5)^0,f,c
  6511   0036BC  3230               	rrcf	(??_floorf+4)^0,f,c
  6512   0036BE  322F               	rrcf	(??_floorf+3)^0,f,c
  6513   0036C0  322E               	rrcf	(??_floorf+2)^0,f,c
  6514   0036C2                     u5600:
  6515   0036C2  2EE8               	decfsz	wreg,f,c
  6516   0036C4  EF5C  F01B         	goto	u5605
  6517   0036C8  502E               	movf	(??_floorf+2)^0,w,c
  6518   0036CA  242C               	addwf	??_floorf^0,w,c
  6519   0036CC  6E36               	movwf	floorf@e^0,c
  6520   0036CE  0E00               	movlw	0
  6521   0036D0  202D               	addwfc	(??_floorf+1)^0,w,c
  6522   0036D2  6E37               	movwf	(floorf@e+1)^0,c
  6523   0036D4  BE37               	btfsc	(floorf@e+1)^0,7,c
  6524   0036D6  EF76  F01B         	goto	u5611
  6525   0036DA  5037               	movf	(floorf@e+1)^0,w,c
  6526   0036DC  E109               	bnz	u5610
  6527   0036DE  0E17               	movlw	23
  6528   0036E0  5C36               	subwf	floorf@e^0,w,c
  6529   0036E2  A0D8               	btfss	status,0,c
  6530   0036E4  EF76  F01B         	goto	u5611
  6531   0036E8  EF78  F01B         	goto	u5610
  6532   0036EC                     u5611:
  6533   0036EC  EF82  F01B         	goto	l5466
  6534   0036F0                     u5610:
  6535   0036F0                     l5464:
  6536   0036F0  C028  F028         	movff	floorf@x,?_floorf
  6537   0036F4  C029  F029         	movff	floorf@x+1,?_floorf+1
  6538   0036F8  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  6539   0036FC  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  6540   003700  EF45  F01C         	goto	l1511
  6541   003704                     l5466:
  6542   003704  BE37               	btfsc	(floorf@e+1)^0,7,c
  6543   003706  EF87  F01B         	goto	u5621
  6544   00370A  EF89  F01B         	goto	u5620
  6545   00370E                     u5621:
  6546   00370E  EFF9  F01B         	goto	l5476
  6547   003712                     u5620:
  6548   003712  C036  F02C         	movff	floorf@e,??_floorf
  6549   003716  0EFF               	movlw	255
  6550   003718  6E2D               	movwf	(??_floorf+1)^0,c
  6551   00371A  0EFF               	movlw	255
  6552   00371C  6E2E               	movwf	(??_floorf+2)^0,c
  6553   00371E  0E7F               	movlw	127
  6554   003720  6E2F               	movwf	(??_floorf+3)^0,c
  6555   003722  0E00               	movlw	0
  6556   003724  6E30               	movwf	(??_floorf+4)^0,c
  6557   003726                     u5635:
  6558   003726  662C               	tstfsz	??_floorf^0,c
  6559   003728  EF98  F01B         	goto	u5636
  6560   00372C  EFA0  F01B         	goto	u5637
  6561   003730                     u5636:
  6562   003730  3430               	rlcf	(??_floorf+4)^0,w,c
  6563   003732  3230               	rrcf	(??_floorf+4)^0,f,c
  6564   003734  322F               	rrcf	(??_floorf+3)^0,f,c
  6565   003736  322E               	rrcf	(??_floorf+2)^0,f,c
  6566   003738  322D               	rrcf	(??_floorf+1)^0,f,c
  6567   00373A  2E2C               	decfsz	??_floorf^0,f,c
  6568   00373C  EF93  F01B         	goto	u5635
  6569   003740                     u5637:
  6570   003740  C02D  F032         	movff	??_floorf+1,floorf@m
  6571   003744  C02E  F033         	movff	??_floorf+2,floorf@m+1
  6572   003748  C02F  F034         	movff	??_floorf+3,floorf@m+2
  6573   00374C  C030  F035         	movff	??_floorf+4,floorf@m+3
  6574   003750  5032               	movf	floorf@m^0,w,c
  6575   003752  1438               	andwf	floorf@u^0,w,c
  6576   003754  6E2C               	movwf	??_floorf^0,c
  6577   003756  5033               	movf	(floorf@m+1)^0,w,c
  6578   003758  1439               	andwf	(floorf@u+1)^0,w,c
  6579   00375A  6E2D               	movwf	(??_floorf+1)^0,c
  6580   00375C  5034               	movf	(floorf@m+2)^0,w,c
  6581   00375E  143A               	andwf	(floorf@u+2)^0,w,c
  6582   003760  6E2E               	movwf	(??_floorf+2)^0,c
  6583   003762  5035               	movf	(floorf@m+3)^0,w,c
  6584   003764  143B               	andwf	(floorf@u+3)^0,w,c
  6585   003766  6E2F               	movwf	(??_floorf+3)^0,c
  6586   003768  502C               	movf	??_floorf^0,w,c
  6587   00376A  102D               	iorwf	(??_floorf+1)^0,w,c
  6588   00376C  102E               	iorwf	(??_floorf+2)^0,w,c
  6589   00376E  102F               	iorwf	(??_floorf+3)^0,w,c
  6590   003770  A4D8               	btfss	status,2,c
  6591   003772  EFBD  F01B         	goto	u5641
  6592   003776  EFBF  F01B         	goto	u5640
  6593   00377A                     u5641:
  6594   00377A  EFC1  F01B         	goto	l5472
  6595   00377E                     u5640:
  6596   00377E  EF78  F01B         	goto	l5464
  6597   003782                     l5472:
  6598   003782  C038  F02C         	movff	floorf@u,??_floorf
  6599   003786  C039  F02D         	movff	floorf@u+1,??_floorf+1
  6600   00378A  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  6601   00378E  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  6602   003792  0E20               	movlw	32
  6603   003794  EFD1  F01B         	goto	u5650
  6604   003798                     u5655:
  6605   003798  90D8               	bcf	status,0,c
  6606   00379A  322F               	rrcf	(??_floorf+3)^0,f,c
  6607   00379C  322E               	rrcf	(??_floorf+2)^0,f,c
  6608   00379E  322D               	rrcf	(??_floorf+1)^0,f,c
  6609   0037A0  322C               	rrcf	??_floorf^0,f,c
  6610   0037A2                     u5650:
  6611   0037A2  2EE8               	decfsz	wreg,f,c
  6612   0037A4  EFCC  F01B         	goto	u5655
  6613   0037A8  502C               	movf	??_floorf^0,w,c
  6614   0037AA  102D               	iorwf	(??_floorf+1)^0,w,c
  6615   0037AC  102E               	iorwf	(??_floorf+2)^0,w,c
  6616   0037AE  102F               	iorwf	(??_floorf+3)^0,w,c
  6617   0037B0  B4D8               	btfsc	status,2,c
  6618   0037B2  EFDD  F01B         	goto	u5661
  6619   0037B6  EFDF  F01B         	goto	u5660
  6620   0037BA                     u5661:
  6621   0037BA  EFE7  F01B         	goto	l1514
  6622   0037BE                     u5660:
  6623   0037BE  5032               	movf	floorf@m^0,w,c
  6624   0037C0  2638               	addwf	floorf@u^0,f,c
  6625   0037C2  5033               	movf	(floorf@m+1)^0,w,c
  6626   0037C4  2239               	addwfc	(floorf@u+1)^0,f,c
  6627   0037C6  5034               	movf	(floorf@m+2)^0,w,c
  6628   0037C8  223A               	addwfc	(floorf@u+2)^0,f,c
  6629   0037CA  5035               	movf	(floorf@m+3)^0,w,c
  6630   0037CC  223B               	addwfc	(floorf@u+3)^0,f,c
  6631   0037CE                     l1514:
  6632   0037CE  1C32               	comf	floorf@m^0,w,c
  6633   0037D0  6E2C               	movwf	??_floorf^0,c
  6634   0037D2  1C33               	comf	(floorf@m+1)^0,w,c
  6635   0037D4  6E2D               	movwf	(??_floorf+1)^0,c
  6636   0037D6  1C34               	comf	(floorf@m+2)^0,w,c
  6637   0037D8  6E2E               	movwf	(??_floorf+2)^0,c
  6638   0037DA  1C35               	comf	(floorf@m+3)^0,w,c
  6639   0037DC  6E2F               	movwf	(??_floorf+3)^0,c
  6640   0037DE  502C               	movf	??_floorf^0,w,c
  6641   0037E0  1638               	andwf	floorf@u^0,f,c
  6642   0037E2  502D               	movf	(??_floorf+1)^0,w,c
  6643   0037E4  1639               	andwf	(floorf@u+1)^0,f,c
  6644   0037E6  502E               	movf	(??_floorf+2)^0,w,c
  6645   0037E8  163A               	andwf	(floorf@u+2)^0,f,c
  6646   0037EA  502F               	movf	(??_floorf+3)^0,w,c
  6647   0037EC  163B               	andwf	(floorf@u+3)^0,f,c
  6648   0037EE  EF3D  F01C         	goto	l5484
  6649   0037F2                     l5476:
  6650   0037F2  C038  F02C         	movff	floorf@u,??_floorf
  6651   0037F6  C039  F02D         	movff	floorf@u+1,??_floorf+1
  6652   0037FA  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  6653   0037FE  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  6654   003802  0E20               	movlw	32
  6655   003804  EF09  F01C         	goto	u5670
  6656   003808                     u5675:
  6657   003808  90D8               	bcf	status,0,c
  6658   00380A  322F               	rrcf	(??_floorf+3)^0,f,c
  6659   00380C  322E               	rrcf	(??_floorf+2)^0,f,c
  6660   00380E  322D               	rrcf	(??_floorf+1)^0,f,c
  6661   003810  322C               	rrcf	??_floorf^0,f,c
  6662   003812                     u5670:
  6663   003812  2EE8               	decfsz	wreg,f,c
  6664   003814  EF04  F01C         	goto	u5675
  6665   003818  502C               	movf	??_floorf^0,w,c
  6666   00381A  102D               	iorwf	(??_floorf+1)^0,w,c
  6667   00381C  102E               	iorwf	(??_floorf+2)^0,w,c
  6668   00381E  102F               	iorwf	(??_floorf+3)^0,w,c
  6669   003820  A4D8               	btfss	status,2,c
  6670   003822  EF15  F01C         	goto	u5681
  6671   003826  EF17  F01C         	goto	u5680
  6672   00382A                     u5681:
  6673   00382A  EF21  F01C         	goto	l5480
  6674   00382E                     u5680:
  6675   00382E  0E00               	movlw	0
  6676   003830  6E38               	movwf	floorf@u^0,c
  6677   003832  0E00               	movlw	0
  6678   003834  6E39               	movwf	(floorf@u+1)^0,c
  6679   003836  0E00               	movlw	0
  6680   003838  6E3A               	movwf	(floorf@u+2)^0,c
  6681   00383A  0E00               	movlw	0
  6682   00383C  6E3B               	movwf	(floorf@u+3)^0,c
  6683   00383E  EF3D  F01C         	goto	l5484
  6684   003842                     l5480:
  6685   003842  90D8               	bcf	status,0,c
  6686   003844  3438               	rlcf	floorf@u^0,w,c
  6687   003846  6E2C               	movwf	??_floorf^0,c
  6688   003848  3439               	rlcf	(floorf@u+1)^0,w,c
  6689   00384A  6E2D               	movwf	(??_floorf+1)^0,c
  6690   00384C  343A               	rlcf	(floorf@u+2)^0,w,c
  6691   00384E  6E2E               	movwf	(??_floorf+2)^0,c
  6692   003850  343B               	rlcf	(floorf@u+3)^0,w,c
  6693   003852  6E2F               	movwf	(??_floorf+3)^0,c
  6694   003854  502C               	movf	??_floorf^0,w,c
  6695   003856  102D               	iorwf	(??_floorf+1)^0,w,c
  6696   003858  102E               	iorwf	(??_floorf+2)^0,w,c
  6697   00385A  102F               	iorwf	(??_floorf+3)^0,w,c
  6698   00385C  B4D8               	btfsc	status,2,c
  6699   00385E  EF33  F01C         	goto	u5691
  6700   003862  EF35  F01C         	goto	u5690
  6701   003866                     u5691:
  6702   003866  EF3D  F01C         	goto	l5484
  6703   00386A                     u5690:
  6704   00386A  0E00               	movlw	0
  6705   00386C  6E38               	movwf	floorf@u^0,c
  6706   00386E  0E00               	movlw	0
  6707   003870  6E39               	movwf	(floorf@u+1)^0,c
  6708   003872  0E80               	movlw	128
  6709   003874  6E3A               	movwf	(floorf@u+2)^0,c
  6710   003876  0EBF               	movlw	191
  6711   003878  6E3B               	movwf	(floorf@u+3)^0,c
  6712   00387A                     l5484:
  6713   00387A  C038  F028         	movff	floorf@u,?_floorf
  6714   00387E  C039  F029         	movff	floorf@u+1,?_floorf+1
  6715   003882  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  6716   003886  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  6717   00388A                     l1511:
  6718   00388A  0012               	return		;funcret
  6719   00388C                     __end_of_floorf:
  6720                           	callstack 0
  6721                           
  6722 ;; *************** function ___fpclassifyf *****************
  6723 ;; Defined at:
  6724 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  x               4    0[COMRAM] float 
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;  u               4   10[COMRAM] struct .
  6729 ;;  e               2    8[COMRAM] int 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  2    0[COMRAM] int 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2, status,0
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6741 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6742 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6743 ;;Total ram usage:       14 bytes
  6744 ;; Hardware stack levels used: 1
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_efgtoa
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           	psect	text24
  6753   004798                     __ptext24:
  6754                           	callstack 0
  6755   004798                     ___fpclassifyf:
  6756                           	callstack 26
  6757   004798  C084  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6758   00479C  C085  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6759   0047A0  C086  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6760   0047A4  C087  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6761   0047A8  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6762   0047AC  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6763   0047B0  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6764   0047B4  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6765   0047B8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6766   0047BC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6767   0047C0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6768   0047C4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6769   0047C8  0E18               	movlw	24
  6770   0047CA  EFEC  F023         	goto	u5520
  6771   0047CE                     u5525:
  6772   0047CE  90D8               	bcf	status,0,c
  6773   0047D0  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6774   0047D2  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6775   0047D4  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6776   0047D6  3205               	rrcf	??___fpclassifyf^0,f,c
  6777   0047D8                     u5520:
  6778   0047D8  2EE8               	decfsz	wreg,f,c
  6779   0047DA  EFE7  F023         	goto	u5525
  6780   0047DE  5005               	movf	??___fpclassifyf^0,w,c
  6781   0047E0  6E09               	movwf	___fpclassifyf@e^0,c
  6782   0047E2  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6783   0047E4  5009               	movf	___fpclassifyf@e^0,w,c
  6784   0047E6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6785   0047E8  A4D8               	btfss	status,2,c
  6786   0047EA  EFF9  F023         	goto	u5531
  6787   0047EE  EFFB  F023         	goto	u5530
  6788   0047F2                     u5531:
  6789   0047F2  EF1B  F024         	goto	l5446
  6790   0047F6                     u5530:
  6791   0047F6  90D8               	bcf	status,0,c
  6792   0047F8  340B               	rlcf	___fpclassifyf@u^0,w,c
  6793   0047FA  6E05               	movwf	??___fpclassifyf^0,c
  6794   0047FC  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6795   0047FE  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6796   004800  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6797   004802  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6798   004804  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6799   004806  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6800   004808  5005               	movf	??___fpclassifyf^0,w,c
  6801   00480A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6802   00480C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6803   00480E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6804   004810  A4D8               	btfss	status,2,c
  6805   004812  EF0D  F024         	goto	u5541
  6806   004816  EF0F  F024         	goto	u5540
  6807   00481A                     u5541:
  6808   00481A  EF15  F024         	goto	l5442
  6809   00481E                     u5540:
  6810   00481E  0E00               	movlw	0
  6811   004820  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6812   004822  0E02               	movlw	2
  6813   004824  6E01               	movwf	?___fpclassifyf^0,c
  6814   004826  EF4A  F024         	goto	l1497
  6815   00482A                     l5442:
  6816   00482A  0E00               	movlw	0
  6817   00482C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6818   00482E  0E03               	movlw	3
  6819   004830  6E01               	movwf	?___fpclassifyf^0,c
  6820   004832  EF4A  F024         	goto	l1497
  6821   004836                     l5446:
  6822   004836  2809               	incf	___fpclassifyf@e^0,w,c
  6823   004838  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6824   00483A  A4D8               	btfss	status,2,c
  6825   00483C  EF22  F024         	goto	u5551
  6826   004840  EF24  F024         	goto	u5550
  6827   004844                     u5551:
  6828   004844  EF46  F024         	goto	l5452
  6829   004848                     u5550:
  6830   004848  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6831   00484C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6832   004850  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6833   004854  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6834   004858  0E09               	movlw	9
  6835   00485A                     u5565:
  6836   00485A  90D8               	bcf	status,0,c
  6837   00485C  3605               	rlcf	??___fpclassifyf^0,f,c
  6838   00485E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6839   004860  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6840   004862  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6841   004864  2EE8               	decfsz	wreg,f,c
  6842   004866  EF2D  F024         	goto	u5565
  6843   00486A  5005               	movf	??___fpclassifyf^0,w,c
  6844   00486C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6845   00486E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6846   004870  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6847   004872  B4D8               	btfsc	status,2,c
  6848   004874  EF3E  F024         	goto	u5571
  6849   004878  EF41  F024         	goto	u5570
  6850   00487C                     u5571:
  6851   00487C  0E01               	movlw	1
  6852   00487E  EF42  F024         	goto	u5580
  6853   004882                     u5570:
  6854   004882  0E00               	movlw	0
  6855   004884                     u5580:
  6856   004884  6E01               	movwf	?___fpclassifyf^0,c
  6857   004886  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6858   004888  EF4A  F024         	goto	l1497
  6859   00488C                     l5452:
  6860   00488C  0E00               	movlw	0
  6861   00488E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6862   004890  0E04               	movlw	4
  6863   004892  6E01               	movwf	?___fpclassifyf^0,c
  6864   004894                     l1497:
  6865   004894  0012               	return		;funcret
  6866   004896                     __end_of___fpclassifyf:
  6867                           	callstack 0
  6868                           
  6869 ;; *************** function ___fltol *****************
  6870 ;; Defined at:
  6871 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;  f1              4    0[COMRAM] int 
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  exp1            1    9[COMRAM] unsigned char 
  6876 ;;  sign1           1    8[COMRAM] unsigned char 
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  4    0[COMRAM] long 
  6879 ;; Registers used:
  6880 ;;		wreg, status,2, status,0
  6881 ;; Tracked objects:
  6882 ;;		On entry : 0/0
  6883 ;;		On exit  : 0/0
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6886 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6887 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;Total ram usage:       10 bytes
  6891 ;; Hardware stack levels used: 1
  6892 ;; This function calls:
  6893 ;;		Nothing
  6894 ;; This function is called by:
  6895 ;;		_efgtoa
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text25
  6900   00458E                     __ptext25:
  6901                           	callstack 0
  6902   00458E                     ___fltol:
  6903                           	callstack 26
  6904   00458E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  6905   004590  3404               	rlcf	(___fltol@f1+3)^0,w,c
  6906   004592  6E0A               	movwf	___fltol@exp1^0,c
  6907   004594  500A               	movf	___fltol@exp1^0,w,c
  6908   004596  A4D8               	btfss	status,2,c
  6909   004598  EFD0  F022         	goto	u5391
  6910   00459C  EFD2  F022         	goto	u5390
  6911   0045A0                     u5391:
  6912   0045A0  EFDC  F022         	goto	l5362
  6913   0045A4                     u5390:
  6914   0045A4                     l5358:
  6915   0045A4  0E00               	movlw	0
  6916   0045A6  6E01               	movwf	?___fltol^0,c
  6917   0045A8  0E00               	movlw	0
  6918   0045AA  6E02               	movwf	(?___fltol+1)^0,c
  6919   0045AC  0E00               	movlw	0
  6920   0045AE  6E03               	movwf	(?___fltol+2)^0,c
  6921   0045B0  0E00               	movlw	0
  6922   0045B2  6E04               	movwf	(?___fltol+3)^0,c
  6923   0045B4  EF49  F023         	goto	l918
  6924   0045B8                     l5362:
  6925   0045B8  C001  F005         	movff	___fltol@f1,??___fltol
  6926   0045BC  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  6927   0045C0  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  6928   0045C4  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  6929   0045C8  0E20               	movlw	32
  6930   0045CA  EFEC  F022         	goto	u5400
  6931   0045CE                     u5405:
  6932   0045CE  90D8               	bcf	status,0,c
  6933   0045D0  3208               	rrcf	(??___fltol+3)^0,f,c
  6934   0045D2  3207               	rrcf	(??___fltol+2)^0,f,c
  6935   0045D4  3206               	rrcf	(??___fltol+1)^0,f,c
  6936   0045D6  3205               	rrcf	??___fltol^0,f,c
  6937   0045D8                     u5400:
  6938   0045D8  2EE8               	decfsz	wreg,f,c
  6939   0045DA  EFE7  F022         	goto	u5405
  6940   0045DE  5005               	movf	??___fltol^0,w,c
  6941   0045E0  6E09               	movwf	___fltol@sign1^0,c
  6942   0045E2  8E03               	bsf	(___fltol@f1+2)^0,7,c
  6943   0045E4  0EFF               	movlw	255
  6944   0045E6  1601               	andwf	___fltol@f1^0,f,c
  6945   0045E8  0EFF               	movlw	255
  6946   0045EA  1602               	andwf	(___fltol@f1+1)^0,f,c
  6947   0045EC  0EFF               	movlw	255
  6948   0045EE  1603               	andwf	(___fltol@f1+2)^0,f,c
  6949   0045F0  0E00               	movlw	0
  6950   0045F2  1604               	andwf	(___fltol@f1+3)^0,f,c
  6951   0045F4  0E96               	movlw	150
  6952   0045F6  5E0A               	subwf	___fltol@exp1^0,f,c
  6953   0045F8  BE0A               	btfsc	___fltol@exp1^0,7,c
  6954   0045FA  EF03  F023         	goto	u5410
  6955   0045FE  EF01  F023         	goto	u5411
  6956   004602                     u5411:
  6957   004602  EF19  F023         	goto	l5382
  6958   004606                     u5410:
  6959   004606  500A               	movf	___fltol@exp1^0,w,c
  6960   004608  0A80               	xorlw	128
  6961   00460A  0F97               	addlw	151
  6962   00460C  B0D8               	btfsc	status,0,c
  6963   00460E  EF0B  F023         	goto	u5421
  6964   004612  EF0D  F023         	goto	u5420
  6965   004616                     u5421:
  6966   004616  EF0F  F023         	goto	l5378
  6967   00461A                     u5420:
  6968   00461A  EFD2  F022         	goto	l5358
  6969   00461E                     l5378:
  6970   00461E  90D8               	bcf	status,0,c
  6971   004620  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6972   004622  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6973   004624  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6974   004626  3201               	rrcf	___fltol@f1^0,f,c
  6975   004628  3E0A               	incfsz	___fltol@exp1^0,f,c
  6976   00462A  EF0F  F023         	goto	l5378
  6977   00462E  EF31  F023         	goto	l5392
  6978   004632                     l5382:
  6979   004632  0E1F               	movlw	31
  6980   004634  640A               	cpfsgt	___fltol@exp1^0,c
  6981   004636  EF1F  F023         	goto	u5431
  6982   00463A  EF21  F023         	goto	u5430
  6983   00463E                     u5431:
  6984   00463E  EF29  F023         	goto	l5390
  6985   004642                     u5430:
  6986   004642  EFD2  F022         	goto	l5358
  6987   004646                     l5388:
  6988   004646  90D8               	bcf	status,0,c
  6989   004648  3601               	rlcf	___fltol@f1^0,f,c
  6990   00464A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6991   00464C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6992   00464E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6993   004650  060A               	decf	___fltol@exp1^0,f,c
  6994   004652                     l5390:
  6995   004652  500A               	movf	___fltol@exp1^0,w,c
  6996   004654  A4D8               	btfss	status,2,c
  6997   004656  EF2F  F023         	goto	u5441
  6998   00465A  EF31  F023         	goto	u5440
  6999   00465E                     u5441:
  7000   00465E  EF23  F023         	goto	l5388
  7001   004662                     u5440:
  7002   004662                     l5392:
  7003   004662  5009               	movf	___fltol@sign1^0,w,c
  7004   004664  B4D8               	btfsc	status,2,c
  7005   004666  EF37  F023         	goto	u5451
  7006   00466A  EF39  F023         	goto	u5450
  7007   00466E                     u5451:
  7008   00466E  EF41  F023         	goto	l5396
  7009   004672                     u5450:
  7010   004672  1E04               	comf	(___fltol@f1+3)^0,f,c
  7011   004674  1E03               	comf	(___fltol@f1+2)^0,f,c
  7012   004676  1E02               	comf	(___fltol@f1+1)^0,f,c
  7013   004678  6C01               	negf	___fltol@f1^0,c
  7014   00467A  0E00               	movlw	0
  7015   00467C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7016   00467E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7017   004680  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7018   004682                     l5396:
  7019   004682  C001  F001         	movff	___fltol@f1,?___fltol
  7020   004686  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7021   00468A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7022   00468E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7023   004692                     l918:
  7024   004692  0012               	return		;funcret
  7025   004694                     __end_of___fltol:
  7026                           	callstack 0
  7027                           
  7028 ;; *************** function ___flsub *****************
  7029 ;; Defined at:
  7030 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  b               4   25[COMRAM] long 
  7033 ;;  a               4   29[COMRAM] long 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;		None
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  4   25[COMRAM] long 
  7038 ;; Registers used:
  7039 ;;		wreg, status,2, status,0, cstack
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7045 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7049 ;;Total ram usage:        8 bytes
  7050 ;; Hardware stack levels used: 1
  7051 ;; Hardware stack levels required when called: 1
  7052 ;; This function calls:
  7053 ;;		___fladd
  7054 ;; This function is called by:
  7055 ;;		_efgtoa
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           	psect	text26
  7060   005684                     __ptext26:
  7061                           	callstack 0
  7062   005684                     ___flsub:
  7063                           	callstack 25
  7064   005684  0E00               	movlw	0
  7065   005686  1A1E               	xorwf	___flsub@a^0,f,c
  7066   005688  0E00               	movlw	0
  7067   00568A  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  7068   00568C  0E00               	movlw	0
  7069   00568E  1A20               	xorwf	(___flsub@a+2)^0,f,c
  7070   005690  0E80               	movlw	128
  7071   005692  1A21               	xorwf	(___flsub@a+3)^0,f,c
  7072   005694  C01A  F001         	movff	___flsub@b,___fladd@b
  7073   005698  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  7074   00569C  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  7075   0056A0  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  7076   0056A4  C01E  F005         	movff	___flsub@a,___fladd@a
  7077   0056A8  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  7078   0056AC  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  7079   0056B0  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  7080   0056B4  ECFB  F014         	call	___fladd	;wreg free
  7081   0056B8  C001  F01A         	movff	?___fladd,?___flsub
  7082   0056BC  C002  F01B         	movff	?___fladd+1,?___flsub+1
  7083   0056C0  C003  F01C         	movff	?___fladd+2,?___flsub+2
  7084   0056C4  C004  F01D         	movff	?___fladd+3,?___flsub+3
  7085   0056C8  0012               	return		;funcret
  7086   0056CA                     __end_of___flsub:
  7087                           	callstack 0
  7088                           
  7089 ;; *************** function ___fladd *****************
  7090 ;; Defined at:
  7091 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  b               4    0[COMRAM] long 
  7094 ;;  a               4    4[COMRAM] long 
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;  grs             1   15[COMRAM] unsigned char 
  7097 ;;  bexp            1   14[COMRAM] unsigned char 
  7098 ;;  aexp            1   13[COMRAM] unsigned char 
  7099 ;;  signs           1   12[COMRAM] unsigned char 
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  4    0[COMRAM] unsigned char 
  7102 ;; Registers used:
  7103 ;;		wreg, status,2, status,0
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7109 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7110 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7111 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;Total ram usage:       16 bytes
  7114 ;; Hardware stack levels used: 1
  7115 ;; This function calls:
  7116 ;;		Nothing
  7117 ;; This function is called by:
  7118 ;;		___flsub
  7119 ;;		_efgtoa
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text27
  7124   0029F6                     __ptext27:
  7125                           	callstack 0
  7126   0029F6                     ___fladd:
  7127                           	callstack 25
  7128   0029F6  5004               	movf	(___fladd@b+3)^0,w,c
  7129   0029F8  0B80               	andlw	128
  7130   0029FA  6E0D               	movwf	___fladd@signs^0,c
  7131   0029FC  5004               	movf	(___fladd@b+3)^0,w,c
  7132   0029FE  2404               	addwf	(___fladd@b+3)^0,w,c
  7133   002A00  6E0F               	movwf	___fladd@bexp^0,c
  7134   002A02  AE03               	btfss	(___fladd@b+2)^0,7,c
  7135   002A04  EF06  F015         	goto	u4281
  7136   002A08  EF08  F015         	goto	u4280
  7137   002A0C                     u4281:
  7138   002A0C  EF09  F015         	goto	l4694
  7139   002A10                     u4280:
  7140   002A10  800F               	bsf	___fladd@bexp^0,0,c
  7141   002A12                     l4694:
  7142   002A12  500F               	movf	___fladd@bexp^0,w,c
  7143   002A14  B4D8               	btfsc	status,2,c
  7144   002A16  EF0F  F015         	goto	u4291
  7145   002A1A  EF11  F015         	goto	u4290
  7146   002A1E                     u4291:
  7147   002A1E  EF26  F015         	goto	l4704
  7148   002A22                     u4290:
  7149   002A22  280F               	incf	___fladd@bexp^0,w,c
  7150   002A24  A4D8               	btfss	status,2,c
  7151   002A26  EF17  F015         	goto	u4301
  7152   002A2A  EF19  F015         	goto	u4300
  7153   002A2E                     u4301:
  7154   002A2E  EF21  F015         	goto	l4700
  7155   002A32                     u4300:
  7156   002A32  0E00               	movlw	0
  7157   002A34  6E01               	movwf	___fladd@b^0,c
  7158   002A36  0E00               	movlw	0
  7159   002A38  6E02               	movwf	(___fladd@b+1)^0,c
  7160   002A3A  0E00               	movlw	0
  7161   002A3C  6E03               	movwf	(___fladd@b+2)^0,c
  7162   002A3E  0E00               	movlw	0
  7163   002A40  6E04               	movwf	(___fladd@b+3)^0,c
  7164   002A42                     l4700:
  7165   002A42  8E03               	bsf	(___fladd@b+2)^0,7,c
  7166   002A44  0E00               	movlw	0
  7167   002A46  6E04               	movwf	(___fladd@b+3)^0,c
  7168   002A48  EF2E  F015         	goto	l4706
  7169   002A4C                     l4704:
  7170   002A4C  0E00               	movlw	0
  7171   002A4E  6E01               	movwf	___fladd@b^0,c
  7172   002A50  0E00               	movlw	0
  7173   002A52  6E02               	movwf	(___fladd@b+1)^0,c
  7174   002A54  0E00               	movlw	0
  7175   002A56  6E03               	movwf	(___fladd@b+2)^0,c
  7176   002A58  0E00               	movlw	0
  7177   002A5A  6E04               	movwf	(___fladd@b+3)^0,c
  7178   002A5C                     l4706:
  7179   002A5C  5008               	movf	(___fladd@a+3)^0,w,c
  7180   002A5E  0B80               	andlw	128
  7181   002A60  6E0E               	movwf	___fladd@aexp^0,c
  7182   002A62  500D               	movf	___fladd@signs^0,w,c
  7183   002A64  180E               	xorwf	___fladd@aexp^0,w,c
  7184   002A66  B4D8               	btfsc	status,2,c
  7185   002A68  EF38  F015         	goto	u4311
  7186   002A6C  EF3A  F015         	goto	u4310
  7187   002A70                     u4311:
  7188   002A70  EF3B  F015         	goto	l4712
  7189   002A74                     u4310:
  7190   002A74  8C0D               	bsf	___fladd@signs^0,6,c
  7191   002A76                     l4712:
  7192   002A76  5008               	movf	(___fladd@a+3)^0,w,c
  7193   002A78  2408               	addwf	(___fladd@a+3)^0,w,c
  7194   002A7A  6E0E               	movwf	___fladd@aexp^0,c
  7195   002A7C  AE07               	btfss	(___fladd@a+2)^0,7,c
  7196   002A7E  EF43  F015         	goto	u4321
  7197   002A82  EF45  F015         	goto	u4320
  7198   002A86                     u4321:
  7199   002A86  EF46  F015         	goto	l4718
  7200   002A8A                     u4320:
  7201   002A8A  800E               	bsf	___fladd@aexp^0,0,c
  7202   002A8C                     l4718:
  7203   002A8C  500E               	movf	___fladd@aexp^0,w,c
  7204   002A8E  B4D8               	btfsc	status,2,c
  7205   002A90  EF4C  F015         	goto	u4331
  7206   002A94  EF4E  F015         	goto	u4330
  7207   002A98                     u4331:
  7208   002A98  EF63  F015         	goto	l4728
  7209   002A9C                     u4330:
  7210   002A9C  280E               	incf	___fladd@aexp^0,w,c
  7211   002A9E  A4D8               	btfss	status,2,c
  7212   002AA0  EF54  F015         	goto	u4341
  7213   002AA4  EF56  F015         	goto	u4340
  7214   002AA8                     u4341:
  7215   002AA8  EF5E  F015         	goto	l4724
  7216   002AAC                     u4340:
  7217   002AAC  0E00               	movlw	0
  7218   002AAE  6E05               	movwf	___fladd@a^0,c
  7219   002AB0  0E00               	movlw	0
  7220   002AB2  6E06               	movwf	(___fladd@a+1)^0,c
  7221   002AB4  0E00               	movlw	0
  7222   002AB6  6E07               	movwf	(___fladd@a+2)^0,c
  7223   002AB8  0E00               	movlw	0
  7224   002ABA  6E08               	movwf	(___fladd@a+3)^0,c
  7225   002ABC                     l4724:
  7226   002ABC  8E07               	bsf	(___fladd@a+2)^0,7,c
  7227   002ABE  0E00               	movlw	0
  7228   002AC0  6E08               	movwf	(___fladd@a+3)^0,c
  7229   002AC2  EF6B  F015         	goto	l4730
  7230   002AC6                     l4728:
  7231   002AC6  0E00               	movlw	0
  7232   002AC8  6E05               	movwf	___fladd@a^0,c
  7233   002ACA  0E00               	movlw	0
  7234   002ACC  6E06               	movwf	(___fladd@a+1)^0,c
  7235   002ACE  0E00               	movlw	0
  7236   002AD0  6E07               	movwf	(___fladd@a+2)^0,c
  7237   002AD2  0E00               	movlw	0
  7238   002AD4  6E08               	movwf	(___fladd@a+3)^0,c
  7239   002AD6                     l4730:
  7240   002AD6  500F               	movf	___fladd@bexp^0,w,c
  7241   002AD8  5C0E               	subwf	___fladd@aexp^0,w,c
  7242   002ADA  B0D8               	btfsc	status,0,c
  7243   002ADC  EF72  F015         	goto	u4351
  7244   002AE0  EF74  F015         	goto	u4350
  7245   002AE4                     u4351:
  7246   002AE4  EF9B  F015         	goto	l4766
  7247   002AE8                     u4350:
  7248   002AE8  AC0D               	btfss	___fladd@signs^0,6,c
  7249   002AEA  EF79  F015         	goto	u4361
  7250   002AEE  EF7B  F015         	goto	u4360
  7251   002AF2                     u4361:
  7252   002AF2  EF7D  F015         	goto	l4736
  7253   002AF6                     u4360:
  7254   002AF6  0E80               	movlw	128
  7255   002AF8  1A0D               	xorwf	___fladd@signs^0,f,c
  7256   002AFA                     l4736:
  7257   002AFA  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7258   002AFE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7259   002B02  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7260   002B06  C001  F010         	movff	___fladd@b,___fladd@grs
  7261   002B0A  C005  F001         	movff	___fladd@a,___fladd@b
  7262   002B0E  C010  F005         	movff	___fladd@grs,___fladd@a
  7263   002B12  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7264   002B16  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7265   002B1A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7266   002B1E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7267   002B22  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7268   002B26  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7269   002B2A  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7270   002B2E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7271   002B32  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7272   002B36                     l4766:
  7273   002B36  0E00               	movlw	0
  7274   002B38  6E10               	movwf	___fladd@grs^0,c
  7275   002B3A  500F               	movf	___fladd@bexp^0,w,c
  7276   002B3C  C00E  F009         	movff	___fladd@aexp,??___fladd
  7277   002B40  6A0A               	clrf	(??___fladd+1)^0,c
  7278   002B42  5E09               	subwf	??___fladd^0,f,c
  7279   002B44  0E00               	movlw	0
  7280   002B46  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7281   002B48  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7282   002B4A  EFB0  F015         	goto	u4371
  7283   002B4E  500A               	movf	(??___fladd+1)^0,w,c
  7284   002B50  E109               	bnz	u4370
  7285   002B52  0E1A               	movlw	26
  7286   002B54  5C09               	subwf	??___fladd^0,w,c
  7287   002B56  A0D8               	btfss	status,0,c
  7288   002B58  EFB0  F015         	goto	u4371
  7289   002B5C  EFB2  F015         	goto	u4370
  7290   002B60                     u4371:
  7291   002B60  EFE9  F015         	goto	l1150
  7292   002B64                     u4370:
  7293   002B64  5001               	movf	___fladd@b^0,w,c
  7294   002B66  1002               	iorwf	(___fladd@b+1)^0,w,c
  7295   002B68  1003               	iorwf	(___fladd@b+2)^0,w,c
  7296   002B6A  1004               	iorwf	(___fladd@b+3)^0,w,c
  7297   002B6C  A4D8               	btfss	status,2,c
  7298   002B6E  EFBB  F015         	goto	u4381
  7299   002B72  EFBE  F015         	goto	u4380
  7300   002B76                     u4381:
  7301   002B76  0E01               	movlw	1
  7302   002B78  EFBF  F015         	goto	u4390
  7303   002B7C                     u4380:
  7304   002B7C  0E00               	movlw	0
  7305   002B7E                     u4390:
  7306   002B7E  6E10               	movwf	___fladd@grs^0,c
  7307   002B80  0E00               	movlw	0
  7308   002B82  6E01               	movwf	___fladd@b^0,c
  7309   002B84  0E00               	movlw	0
  7310   002B86  6E02               	movwf	(___fladd@b+1)^0,c
  7311   002B88  0E00               	movlw	0
  7312   002B8A  6E03               	movwf	(___fladd@b+2)^0,c
  7313   002B8C  0E00               	movlw	0
  7314   002B8E  6E04               	movwf	(___fladd@b+3)^0,c
  7315   002B90  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7316   002B94  EFF2  F015         	goto	l1149
  7317   002B98                     l1151:
  7318   002B98  A010               	btfss	___fladd@grs^0,0,c
  7319   002B9A  EFD1  F015         	goto	u4401
  7320   002B9E  EFD3  F015         	goto	u4400
  7321   002BA2                     u4401:
  7322   002BA2  EFD9  F015         	goto	l4778
  7323   002BA6                     u4400:
  7324   002BA6  90D8               	bcf	status,0,c
  7325   002BA8  3010               	rrcf	___fladd@grs^0,w,c
  7326   002BAA  0901               	iorlw	1
  7327   002BAC  6E10               	movwf	___fladd@grs^0,c
  7328   002BAE  EFDB  F015         	goto	l4780
  7329   002BB2                     l4778:
  7330   002BB2  90D8               	bcf	status,0,c
  7331   002BB4  3210               	rrcf	___fladd@grs^0,f,c
  7332   002BB6                     l4780:
  7333   002BB6  A001               	btfss	___fladd@b^0,0,c
  7334   002BB8  EFE0  F015         	goto	u4411
  7335   002BBC  EFE2  F015         	goto	u4410
  7336   002BC0                     u4411:
  7337   002BC0  EFE3  F015         	goto	l4784
  7338   002BC4                     u4410:
  7339   002BC4  8E10               	bsf	___fladd@grs^0,7,c
  7340   002BC6                     l4784:
  7341   002BC6  3404               	rlcf	(___fladd@b+3)^0,w,c
  7342   002BC8  3204               	rrcf	(___fladd@b+3)^0,f,c
  7343   002BCA  3203               	rrcf	(___fladd@b+2)^0,f,c
  7344   002BCC  3202               	rrcf	(___fladd@b+1)^0,f,c
  7345   002BCE  3201               	rrcf	___fladd@b^0,f,c
  7346   002BD0  2A0F               	incf	___fladd@bexp^0,f,c
  7347   002BD2                     l1150:
  7348   002BD2  500E               	movf	___fladd@aexp^0,w,c
  7349   002BD4  5C0F               	subwf	___fladd@bexp^0,w,c
  7350   002BD6  A0D8               	btfss	status,0,c
  7351   002BD8  EFF0  F015         	goto	u4421
  7352   002BDC  EFF2  F015         	goto	u4420
  7353   002BE0                     u4421:
  7354   002BE0  EFCC  F015         	goto	l1151
  7355   002BE4                     u4420:
  7356   002BE4                     l1149:
  7357   002BE4  BC0D               	btfsc	___fladd@signs^0,6,c
  7358   002BE6  EFF7  F015         	goto	u4431
  7359   002BEA  EFF9  F015         	goto	u4430
  7360   002BEE                     u4431:
  7361   002BEE  EF39  F016         	goto	l4812
  7362   002BF2                     u4430:
  7363   002BF2  500F               	movf	___fladd@bexp^0,w,c
  7364   002BF4  A4D8               	btfss	status,2,c
  7365   002BF6  EFFF  F015         	goto	u4441
  7366   002BFA  EF01  F016         	goto	u4440
  7367   002BFE                     u4441:
  7368   002BFE  EF0B  F016         	goto	l4794
  7369   002C02                     u4440:
  7370   002C02  0E00               	movlw	0
  7371   002C04  6E01               	movwf	?___fladd^0,c
  7372   002C06  0E00               	movlw	0
  7373   002C08  6E02               	movwf	(?___fladd+1)^0,c
  7374   002C0A  0E00               	movlw	0
  7375   002C0C  6E03               	movwf	(?___fladd+2)^0,c
  7376   002C0E  0E00               	movlw	0
  7377   002C10  6E04               	movwf	(?___fladd+3)^0,c
  7378   002C12  EF5A  F017         	goto	l1158
  7379   002C16                     l4794:
  7380   002C16  5005               	movf	___fladd@a^0,w,c
  7381   002C18  2601               	addwf	___fladd@b^0,f,c
  7382   002C1A  5006               	movf	(___fladd@a+1)^0,w,c
  7383   002C1C  2202               	addwfc	(___fladd@b+1)^0,f,c
  7384   002C1E  5007               	movf	(___fladd@a+2)^0,w,c
  7385   002C20  2203               	addwfc	(___fladd@b+2)^0,f,c
  7386   002C22  5008               	movf	(___fladd@a+3)^0,w,c
  7387   002C24  2204               	addwfc	(___fladd@b+3)^0,f,c
  7388   002C26  A004               	btfss	(___fladd@b+3)^0,0,c
  7389   002C28  EF18  F016         	goto	u4451
  7390   002C2C  EF1A  F016         	goto	u4450
  7391   002C30                     u4451:
  7392   002C30  EFC6  F016         	goto	l4848
  7393   002C34                     u4450:
  7394   002C34  A010               	btfss	___fladd@grs^0,0,c
  7395   002C36  EF1F  F016         	goto	u4461
  7396   002C3A  EF21  F016         	goto	u4460
  7397   002C3E                     u4461:
  7398   002C3E  EF27  F016         	goto	l4802
  7399   002C42                     u4460:
  7400   002C42  90D8               	bcf	status,0,c
  7401   002C44  3010               	rrcf	___fladd@grs^0,w,c
  7402   002C46  0901               	iorlw	1
  7403   002C48  6E10               	movwf	___fladd@grs^0,c
  7404   002C4A  EF29  F016         	goto	l4804
  7405   002C4E                     l4802:
  7406   002C4E  90D8               	bcf	status,0,c
  7407   002C50  3210               	rrcf	___fladd@grs^0,f,c
  7408   002C52                     l4804:
  7409   002C52  A001               	btfss	___fladd@b^0,0,c
  7410   002C54  EF2E  F016         	goto	u4471
  7411   002C58  EF30  F016         	goto	u4470
  7412   002C5C                     u4471:
  7413   002C5C  EF31  F016         	goto	l4808
  7414   002C60                     u4470:
  7415   002C60  8E10               	bsf	___fladd@grs^0,7,c
  7416   002C62                     l4808:
  7417   002C62  3404               	rlcf	(___fladd@b+3)^0,w,c
  7418   002C64  3204               	rrcf	(___fladd@b+3)^0,f,c
  7419   002C66  3203               	rrcf	(___fladd@b+2)^0,f,c
  7420   002C68  3202               	rrcf	(___fladd@b+1)^0,f,c
  7421   002C6A  3201               	rrcf	___fladd@b^0,f,c
  7422   002C6C  2A0F               	incf	___fladd@bexp^0,f,c
  7423   002C6E  EFC6  F016         	goto	l4848
  7424   002C72                     l4812:
  7425   002C72  5005               	movf	___fladd@a^0,w,c
  7426   002C74  5C01               	subwf	___fladd@b^0,w,c
  7427   002C76  5006               	movf	(___fladd@a+1)^0,w,c
  7428   002C78  5802               	subwfb	(___fladd@b+1)^0,w,c
  7429   002C7A  5007               	movf	(___fladd@a+2)^0,w,c
  7430   002C7C  5803               	subwfb	(___fladd@b+2)^0,w,c
  7431   002C7E  5004               	movf	(___fladd@b+3)^0,w,c
  7432   002C80  0A80               	xorlw	128
  7433   002C82  6E09               	movwf	??___fladd^0,c
  7434   002C84  5008               	movf	(___fladd@a+3)^0,w,c
  7435   002C86  0A80               	xorlw	128
  7436   002C88  5809               	subwfb	??___fladd^0,w,c
  7437   002C8A  B0D8               	btfsc	status,0,c
  7438   002C8C  EF4A  F016         	goto	u4481
  7439   002C90  EF4C  F016         	goto	u4480
  7440   002C94                     u4481:
  7441   002C94  EF77  F016         	goto	l4822
  7442   002C98                     u4480:
  7443   002C98  5001               	movf	___fladd@b^0,w,c
  7444   002C9A  5C05               	subwf	___fladd@a^0,w,c
  7445   002C9C  6E09               	movwf	??___fladd^0,c
  7446   002C9E  5002               	movf	(___fladd@b+1)^0,w,c
  7447   002CA0  5806               	subwfb	(___fladd@a+1)^0,w,c
  7448   002CA2  6E0A               	movwf	(??___fladd+1)^0,c
  7449   002CA4  5003               	movf	(___fladd@b+2)^0,w,c
  7450   002CA6  5807               	subwfb	(___fladd@a+2)^0,w,c
  7451   002CA8  6E0B               	movwf	(??___fladd+2)^0,c
  7452   002CAA  5004               	movf	(___fladd@b+3)^0,w,c
  7453   002CAC  5808               	subwfb	(___fladd@a+3)^0,w,c
  7454   002CAE  6E0C               	movwf	(??___fladd+3)^0,c
  7455   002CB0  0EFF               	movlw	255
  7456   002CB2  2409               	addwf	??___fladd^0,w,c
  7457   002CB4  6E01               	movwf	___fladd@b^0,c
  7458   002CB6  0EFF               	movlw	255
  7459   002CB8  200A               	addwfc	(??___fladd+1)^0,w,c
  7460   002CBA  6E02               	movwf	(___fladd@b+1)^0,c
  7461   002CBC  0EFF               	movlw	255
  7462   002CBE  200B               	addwfc	(??___fladd+2)^0,w,c
  7463   002CC0  6E03               	movwf	(___fladd@b+2)^0,c
  7464   002CC2  0EFF               	movlw	255
  7465   002CC4  200C               	addwfc	(??___fladd+3)^0,w,c
  7466   002CC6  6E04               	movwf	(___fladd@b+3)^0,c
  7467   002CC8  0E80               	movlw	128
  7468   002CCA  1A0D               	xorwf	___fladd@signs^0,f,c
  7469   002CCC  6C10               	negf	___fladd@grs^0,c
  7470   002CCE  5010               	movf	___fladd@grs^0,w,c
  7471   002CD0  A4D8               	btfss	status,2,c
  7472   002CD2  EF6D  F016         	goto	u4491
  7473   002CD6  EF6F  F016         	goto	u4490
  7474   002CDA                     u4491:
  7475   002CDA  EF7F  F016         	goto	l1166
  7476   002CDE                     u4490:
  7477   002CDE  0E01               	movlw	1
  7478   002CE0  2601               	addwf	___fladd@b^0,f,c
  7479   002CE2  0E00               	movlw	0
  7480   002CE4  2202               	addwfc	(___fladd@b+1)^0,f,c
  7481   002CE6  2203               	addwfc	(___fladd@b+2)^0,f,c
  7482   002CE8  2204               	addwfc	(___fladd@b+3)^0,f,c
  7483   002CEA  EF7F  F016         	goto	l1166
  7484   002CEE                     l4822:
  7485   002CEE  5005               	movf	___fladd@a^0,w,c
  7486   002CF0  5E01               	subwf	___fladd@b^0,f,c
  7487   002CF2  5006               	movf	(___fladd@a+1)^0,w,c
  7488   002CF4  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7489   002CF6  5007               	movf	(___fladd@a+2)^0,w,c
  7490   002CF8  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7491   002CFA  5008               	movf	(___fladd@a+3)^0,w,c
  7492   002CFC  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7493   002CFE                     l1166:
  7494   002CFE  5001               	movf	___fladd@b^0,w,c
  7495   002D00  1002               	iorwf	(___fladd@b+1)^0,w,c
  7496   002D02  1003               	iorwf	(___fladd@b+2)^0,w,c
  7497   002D04  1004               	iorwf	(___fladd@b+3)^0,w,c
  7498   002D06  A4D8               	btfss	status,2,c
  7499   002D08  EF88  F016         	goto	u4501
  7500   002D0C  EF8A  F016         	goto	u4500
  7501   002D10                     u4501:
  7502   002D10  EFBF  F016         	goto	l4846
  7503   002D14                     u4500:
  7504   002D14  5010               	movf	___fladd@grs^0,w,c
  7505   002D16  A4D8               	btfss	status,2,c
  7506   002D18  EF90  F016         	goto	u4511
  7507   002D1C  EF92  F016         	goto	u4510
  7508   002D20                     u4511:
  7509   002D20  EFBF  F016         	goto	l4846
  7510   002D24                     u4510:
  7511   002D24  0E00               	movlw	0
  7512   002D26  6E01               	movwf	?___fladd^0,c
  7513   002D28  0E00               	movlw	0
  7514   002D2A  6E02               	movwf	(?___fladd+1)^0,c
  7515   002D2C  0E00               	movlw	0
  7516   002D2E  6E03               	movwf	(?___fladd+2)^0,c
  7517   002D30  0E00               	movlw	0
  7518   002D32  6E04               	movwf	(?___fladd+3)^0,c
  7519   002D34  EF5A  F017         	goto	l1158
  7520   002D38                     l4830:
  7521   002D38  90D8               	bcf	status,0,c
  7522   002D3A  3601               	rlcf	___fladd@b^0,f,c
  7523   002D3C  3602               	rlcf	(___fladd@b+1)^0,f,c
  7524   002D3E  3603               	rlcf	(___fladd@b+2)^0,f,c
  7525   002D40  3604               	rlcf	(___fladd@b+3)^0,f,c
  7526   002D42  AE10               	btfss	___fladd@grs^0,7,c
  7527   002D44  EFA6  F016         	goto	u4521
  7528   002D48  EFA8  F016         	goto	u4520
  7529   002D4C                     u4521:
  7530   002D4C  EFA9  F016         	goto	l4836
  7531   002D50                     u4520:
  7532   002D50  8001               	bsf	___fladd@b^0,0,c
  7533   002D52                     l4836:
  7534   002D52  A010               	btfss	___fladd@grs^0,0,c
  7535   002D54  EFAE  F016         	goto	u4531
  7536   002D58  EFB0  F016         	goto	u4530
  7537   002D5C                     u4531:
  7538   002D5C  EFB4  F016         	goto	l4840
  7539   002D60                     u4530:
  7540   002D60  80D8               	bsf	status,0,c
  7541   002D62  3610               	rlcf	___fladd@grs^0,f,c
  7542   002D64  EFB6  F016         	goto	l4842
  7543   002D68                     l4840:
  7544   002D68  90D8               	bcf	status,0,c
  7545   002D6A  3610               	rlcf	___fladd@grs^0,f,c
  7546   002D6C                     l4842:
  7547   002D6C  500F               	movf	___fladd@bexp^0,w,c
  7548   002D6E  B4D8               	btfsc	status,2,c
  7549   002D70  EFBC  F016         	goto	u4541
  7550   002D74  EFBE  F016         	goto	u4540
  7551   002D78                     u4541:
  7552   002D78  EFBF  F016         	goto	l4846
  7553   002D7C                     u4540:
  7554   002D7C  060F               	decf	___fladd@bexp^0,f,c
  7555   002D7E                     l4846:
  7556   002D7E  AE03               	btfss	(___fladd@b+2)^0,7,c
  7557   002D80  EFC4  F016         	goto	u4551
  7558   002D84  EFC6  F016         	goto	u4550
  7559   002D88                     u4551:
  7560   002D88  EF9C  F016         	goto	l4830
  7561   002D8C                     u4550:
  7562   002D8C                     l4848:
  7563   002D8C  0E00               	movlw	0
  7564   002D8E  6E0E               	movwf	___fladd@aexp^0,c
  7565   002D90  AE10               	btfss	___fladd@grs^0,7,c
  7566   002D92  EFCD  F016         	goto	u4561
  7567   002D96  EFCF  F016         	goto	u4560
  7568   002D9A                     u4561:
  7569   002D9A  EFE7  F016         	goto	l1175
  7570   002D9E                     u4560:
  7571   002D9E  C010  F009         	movff	___fladd@grs,??___fladd
  7572   002DA2  0E7F               	movlw	127
  7573   002DA4  1609               	andwf	??___fladd^0,f,c
  7574   002DA6  B4D8               	btfsc	status,2,c
  7575   002DA8  EFD8  F016         	goto	u4571
  7576   002DAC  EFDA  F016         	goto	u4570
  7577   002DB0                     u4571:
  7578   002DB0  EFDE  F016         	goto	l1176
  7579   002DB4                     u4570:
  7580   002DB4                     l4854:
  7581   002DB4  0E01               	movlw	1
  7582   002DB6  6E0E               	movwf	___fladd@aexp^0,c
  7583   002DB8  EFE7  F016         	goto	l1175
  7584   002DBC                     l1176:
  7585   002DBC  A001               	btfss	___fladd@b^0,0,c
  7586   002DBE  EFE3  F016         	goto	u4581
  7587   002DC2  EFE5  F016         	goto	u4580
  7588   002DC6                     u4581:
  7589   002DC6  EFE7  F016         	goto	l1175
  7590   002DCA                     u4580:
  7591   002DCA  EFDA  F016         	goto	l4854
  7592   002DCE                     l1175:
  7593   002DCE  500E               	movf	___fladd@aexp^0,w,c
  7594   002DD0  B4D8               	btfsc	status,2,c
  7595   002DD2  EFED  F016         	goto	u4591
  7596   002DD6  EFEF  F016         	goto	u4590
  7597   002DDA                     u4591:
  7598   002DDA  EF1A  F017         	goto	l4866
  7599   002DDE                     u4590:
  7600   002DDE  0E01               	movlw	1
  7601   002DE0  2601               	addwf	___fladd@b^0,f,c
  7602   002DE2  0E00               	movlw	0
  7603   002DE4  2202               	addwfc	(___fladd@b+1)^0,f,c
  7604   002DE6  2203               	addwfc	(___fladd@b+2)^0,f,c
  7605   002DE8  2204               	addwfc	(___fladd@b+3)^0,f,c
  7606   002DEA  A004               	btfss	(___fladd@b+3)^0,0,c
  7607   002DEC  EFFA  F016         	goto	u4601
  7608   002DF0  EFFC  F016         	goto	u4600
  7609   002DF4                     u4601:
  7610   002DF4  EF1A  F017         	goto	l4866
  7611   002DF8                     u4600:
  7612   002DF8  C001  F009         	movff	___fladd@b,??___fladd
  7613   002DFC  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7614   002E00  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7615   002E04  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7616   002E08  340C               	rlcf	(??___fladd+3)^0,w,c
  7617   002E0A  320C               	rrcf	(??___fladd+3)^0,f,c
  7618   002E0C  320B               	rrcf	(??___fladd+2)^0,f,c
  7619   002E0E  320A               	rrcf	(??___fladd+1)^0,f,c
  7620   002E10  3209               	rrcf	??___fladd^0,f,c
  7621   002E12  C009  F001         	movff	??___fladd,___fladd@b
  7622   002E16  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7623   002E1A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7624   002E1E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7625   002E22  280F               	incf	___fladd@bexp^0,w,c
  7626   002E24  B4D8               	btfsc	status,2,c
  7627   002E26  EF17  F017         	goto	u4611
  7628   002E2A  EF19  F017         	goto	u4610
  7629   002E2E                     u4611:
  7630   002E2E  EF1A  F017         	goto	l4866
  7631   002E32                     u4610:
  7632   002E32  2A0F               	incf	___fladd@bexp^0,f,c
  7633   002E34                     l4866:
  7634   002E34  280F               	incf	___fladd@bexp^0,w,c
  7635   002E36  B4D8               	btfsc	status,2,c
  7636   002E38  EF20  F017         	goto	u4621
  7637   002E3C  EF22  F017         	goto	u4620
  7638   002E40                     u4621:
  7639   002E40  EF2A  F017         	goto	l4870
  7640   002E44                     u4620:
  7641   002E44  500F               	movf	___fladd@bexp^0,w,c
  7642   002E46  A4D8               	btfss	status,2,c
  7643   002E48  EF28  F017         	goto	u4631
  7644   002E4C  EF2A  F017         	goto	u4630
  7645   002E50                     u4631:
  7646   002E50  EF3C  F017         	goto	l4874
  7647   002E54                     u4630:
  7648   002E54                     l4870:
  7649   002E54  0E00               	movlw	0
  7650   002E56  6E01               	movwf	___fladd@b^0,c
  7651   002E58  0E00               	movlw	0
  7652   002E5A  6E02               	movwf	(___fladd@b+1)^0,c
  7653   002E5C  0E00               	movlw	0
  7654   002E5E  6E03               	movwf	(___fladd@b+2)^0,c
  7655   002E60  0E00               	movlw	0
  7656   002E62  6E04               	movwf	(___fladd@b+3)^0,c
  7657   002E64  500F               	movf	___fladd@bexp^0,w,c
  7658   002E66  A4D8               	btfss	status,2,c
  7659   002E68  EF38  F017         	goto	u4641
  7660   002E6C  EF3A  F017         	goto	u4640
  7661   002E70                     u4641:
  7662   002E70  EF3C  F017         	goto	l4874
  7663   002E74                     u4640:
  7664   002E74  0E00               	movlw	0
  7665   002E76  6E0D               	movwf	___fladd@signs^0,c
  7666   002E78                     l4874:
  7667   002E78  A00F               	btfss	___fladd@bexp^0,0,c
  7668   002E7A  EF41  F017         	goto	u4651
  7669   002E7E  EF43  F017         	goto	u4650
  7670   002E82                     u4651:
  7671   002E82  EF46  F017         	goto	l4878
  7672   002E86                     u4650:
  7673   002E86  8E03               	bsf	(___fladd@b+2)^0,7,c
  7674   002E88  EF47  F017         	goto	l4880
  7675   002E8C                     l4878:
  7676   002E8C  9E03               	bcf	(___fladd@b+2)^0,7,c
  7677   002E8E                     l4880:
  7678   002E8E  90D8               	bcf	status,0,c
  7679   002E90  300F               	rrcf	___fladd@bexp^0,w,c
  7680   002E92  6E04               	movwf	(___fladd@b+3)^0,c
  7681   002E94  AE0D               	btfss	___fladd@signs^0,7,c
  7682   002E96  EF4F  F017         	goto	u4661
  7683   002E9A  EF51  F017         	goto	u4660
  7684   002E9E                     u4661:
  7685   002E9E  EF52  F017         	goto	l4886
  7686   002EA2                     u4660:
  7687   002EA2  8E04               	bsf	(___fladd@b+3)^0,7,c
  7688   002EA4                     l4886:
  7689   002EA4  C001  F001         	movff	___fladd@b,?___fladd
  7690   002EA8  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7691   002EAC  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7692   002EB0  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7693   002EB4                     l1158:
  7694   002EB4  0012               	return		;funcret
  7695   002EB6                     __end_of___fladd:
  7696                           	callstack 0
  7697                           
  7698 ;; *************** function ___flneg *****************
  7699 ;; Defined at:
  7700 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;  f1              4    0[COMRAM] unsigned char 
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;		None
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  4    0[COMRAM] unsigned char 
  7707 ;; Registers used:
  7708 ;;		wreg, status,2, status,0
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7718 ;;Total ram usage:        4 bytes
  7719 ;; Hardware stack levels used: 1
  7720 ;; This function calls:
  7721 ;;		Nothing
  7722 ;; This function is called by:
  7723 ;;		_efgtoa
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           	psect	text28
  7728   0058BE                     __ptext28:
  7729                           	callstack 0
  7730   0058BE                     ___flneg:
  7731                           	callstack 26
  7732   0058BE  5001               	movf	___flneg@f1^0,w,c
  7733   0058C0  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7734   0058C2  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7735   0058C4  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7736   0058C6  B4D8               	btfsc	status,2,c
  7737   0058C8  EF68  F02C         	goto	u5381
  7738   0058CC  EF6A  F02C         	goto	u5380
  7739   0058D0                     u5381:
  7740   0058D0  EF72  F02C         	goto	l5352
  7741   0058D4                     u5380:
  7742   0058D4  0E00               	movlw	0
  7743   0058D6  1A01               	xorwf	___flneg@f1^0,f,c
  7744   0058D8  0E00               	movlw	0
  7745   0058DA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7746   0058DC  0E00               	movlw	0
  7747   0058DE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7748   0058E0  0E80               	movlw	128
  7749   0058E2  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7750   0058E4                     l5352:
  7751   0058E4  C001  F001         	movff	___flneg@f1,?___flneg
  7752   0058E8  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7753   0058EC  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7754   0058F0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7755   0058F4  0012               	return		;funcret
  7756   0058F6                     __end_of___flneg:
  7757                           	callstack 0
  7758                           
  7759 ;; *************** function ___flmul *****************
  7760 ;; Defined at:
  7761 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;  b               4    0[COMRAM] unsigned char 
  7764 ;;  a               4    4[COMRAM] unsigned char 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  prod            4   19[COMRAM] struct .
  7767 ;;  grs             4   13[COMRAM] unsigned long 
  7768 ;;  temp            2   23[COMRAM] struct .
  7769 ;;  bexp            1   18[COMRAM] unsigned char 
  7770 ;;  aexp            1   17[COMRAM] unsigned char 
  7771 ;;  sign            1   12[COMRAM] unsigned char 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  4    0[COMRAM] unsigned char 
  7774 ;; Registers used:
  7775 ;;		wreg, status,2, status,0, prodl, prodh
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7781 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7782 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7783 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7784 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;Total ram usage:       25 bytes
  7786 ;; Hardware stack levels used: 1
  7787 ;; This function calls:
  7788 ;;		Nothing
  7789 ;; This function is called by:
  7790 ;;		_efgtoa
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text29
  7795   002EB6                     __ptext29:
  7796                           	callstack 0
  7797   002EB6                     ___flmul:
  7798                           	callstack 26
  7799   002EB6  5004               	movf	(___flmul@b+3)^0,w,c
  7800   002EB8  0B80               	andlw	128
  7801   002EBA  6E0D               	movwf	___flmul@sign^0,c
  7802   002EBC  5004               	movf	(___flmul@b+3)^0,w,c
  7803   002EBE  2404               	addwf	(___flmul@b+3)^0,w,c
  7804   002EC0  6E13               	movwf	___flmul@bexp^0,c
  7805   002EC2  AE03               	btfss	(___flmul@b+2)^0,7,c
  7806   002EC4  EF66  F017         	goto	u5111
  7807   002EC8  EF68  F017         	goto	u5110
  7808   002ECC                     u5111:
  7809   002ECC  EF69  F017         	goto	l5180
  7810   002ED0                     u5110:
  7811   002ED0  8013               	bsf	___flmul@bexp^0,0,c
  7812   002ED2                     l5180:
  7813   002ED2  5013               	movf	___flmul@bexp^0,w,c
  7814   002ED4  B4D8               	btfsc	status,2,c
  7815   002ED6  EF6F  F017         	goto	u5121
  7816   002EDA  EF71  F017         	goto	u5120
  7817   002EDE                     u5121:
  7818   002EDE  EF84  F017         	goto	l5188
  7819   002EE2                     u5120:
  7820   002EE2  2813               	incf	___flmul@bexp^0,w,c
  7821   002EE4  A4D8               	btfss	status,2,c
  7822   002EE6  EF77  F017         	goto	u5131
  7823   002EEA  EF79  F017         	goto	u5130
  7824   002EEE                     u5131:
  7825   002EEE  EF81  F017         	goto	l5186
  7826   002EF2                     u5130:
  7827   002EF2  0E00               	movlw	0
  7828   002EF4  6E01               	movwf	___flmul@b^0,c
  7829   002EF6  0E00               	movlw	0
  7830   002EF8  6E02               	movwf	(___flmul@b+1)^0,c
  7831   002EFA  0E00               	movlw	0
  7832   002EFC  6E03               	movwf	(___flmul@b+2)^0,c
  7833   002EFE  0E00               	movlw	0
  7834   002F00  6E04               	movwf	(___flmul@b+3)^0,c
  7835   002F02                     l5186:
  7836   002F02  8E03               	bsf	(___flmul@b+2)^0,7,c
  7837   002F04  EF8C  F017         	goto	l5190
  7838   002F08                     l5188:
  7839   002F08  0E00               	movlw	0
  7840   002F0A  6E01               	movwf	___flmul@b^0,c
  7841   002F0C  0E00               	movlw	0
  7842   002F0E  6E02               	movwf	(___flmul@b+1)^0,c
  7843   002F10  0E00               	movlw	0
  7844   002F12  6E03               	movwf	(___flmul@b+2)^0,c
  7845   002F14  0E00               	movlw	0
  7846   002F16  6E04               	movwf	(___flmul@b+3)^0,c
  7847   002F18                     l5190:
  7848   002F18  5008               	movf	(___flmul@a+3)^0,w,c
  7849   002F1A  0B80               	andlw	128
  7850   002F1C  1A0D               	xorwf	___flmul@sign^0,f,c
  7851   002F1E  5008               	movf	(___flmul@a+3)^0,w,c
  7852   002F20  2408               	addwf	(___flmul@a+3)^0,w,c
  7853   002F22  6E12               	movwf	___flmul@aexp^0,c
  7854   002F24  AE07               	btfss	(___flmul@a+2)^0,7,c
  7855   002F26  EF97  F017         	goto	u5141
  7856   002F2A  EF99  F017         	goto	u5140
  7857   002F2E                     u5141:
  7858   002F2E  EF9A  F017         	goto	l5198
  7859   002F32                     u5140:
  7860   002F32  8012               	bsf	___flmul@aexp^0,0,c
  7861   002F34                     l5198:
  7862   002F34  5012               	movf	___flmul@aexp^0,w,c
  7863   002F36  B4D8               	btfsc	status,2,c
  7864   002F38  EFA0  F017         	goto	u5151
  7865   002F3C  EFA2  F017         	goto	u5150
  7866   002F40                     u5151:
  7867   002F40  EFB5  F017         	goto	l5206
  7868   002F44                     u5150:
  7869   002F44  2812               	incf	___flmul@aexp^0,w,c
  7870   002F46  A4D8               	btfss	status,2,c
  7871   002F48  EFA8  F017         	goto	u5161
  7872   002F4C  EFAA  F017         	goto	u5160
  7873   002F50                     u5161:
  7874   002F50  EFB2  F017         	goto	l5204
  7875   002F54                     u5160:
  7876   002F54  0E00               	movlw	0
  7877   002F56  6E05               	movwf	___flmul@a^0,c
  7878   002F58  0E00               	movlw	0
  7879   002F5A  6E06               	movwf	(___flmul@a+1)^0,c
  7880   002F5C  0E00               	movlw	0
  7881   002F5E  6E07               	movwf	(___flmul@a+2)^0,c
  7882   002F60  0E00               	movlw	0
  7883   002F62  6E08               	movwf	(___flmul@a+3)^0,c
  7884   002F64                     l5204:
  7885   002F64  8E07               	bsf	(___flmul@a+2)^0,7,c
  7886   002F66  EFBD  F017         	goto	l1235
  7887   002F6A                     l5206:
  7888   002F6A  0E00               	movlw	0
  7889   002F6C  6E05               	movwf	___flmul@a^0,c
  7890   002F6E  0E00               	movlw	0
  7891   002F70  6E06               	movwf	(___flmul@a+1)^0,c
  7892   002F72  0E00               	movlw	0
  7893   002F74  6E07               	movwf	(___flmul@a+2)^0,c
  7894   002F76  0E00               	movlw	0
  7895   002F78  6E08               	movwf	(___flmul@a+3)^0,c
  7896   002F7A                     l1235:
  7897   002F7A  5012               	movf	___flmul@aexp^0,w,c
  7898   002F7C  B4D8               	btfsc	status,2,c
  7899   002F7E  EFC3  F017         	goto	u5171
  7900   002F82  EFC5  F017         	goto	u5170
  7901   002F86                     u5171:
  7902   002F86  EFCD  F017         	goto	l5210
  7903   002F8A                     u5170:
  7904   002F8A  5013               	movf	___flmul@bexp^0,w,c
  7905   002F8C  A4D8               	btfss	status,2,c
  7906   002F8E  EFCB  F017         	goto	u5181
  7907   002F92  EFCD  F017         	goto	u5180
  7908   002F96                     u5181:
  7909   002F96  EFD7  F017         	goto	l5214
  7910   002F9A                     u5180:
  7911   002F9A                     l5210:
  7912   002F9A  0E00               	movlw	0
  7913   002F9C  6E01               	movwf	?___flmul^0,c
  7914   002F9E  0E00               	movlw	0
  7915   002FA0  6E02               	movwf	(?___flmul+1)^0,c
  7916   002FA2  0E00               	movlw	0
  7917   002FA4  6E03               	movwf	(?___flmul+2)^0,c
  7918   002FA6  0E00               	movlw	0
  7919   002FA8  6E04               	movwf	(?___flmul+3)^0,c
  7920   002FAA  EF6F  F019         	goto	l1239
  7921   002FAE                     l5214:
  7922   002FAE  5007               	movf	(___flmul@a+2)^0,w,c
  7923   002FB0  0201               	mulwf	___flmul@b^0,c
  7924   002FB2  CFF3 F018          	movff	prodl,___flmul@temp
  7925   002FB6  CFF4 F019          	movff	prodh,___flmul@temp+1
  7926   002FBA  5018               	movf	___flmul@temp^0,w,c
  7927   002FBC  6E0E               	movwf	___flmul@grs^0,c
  7928   002FBE  6A0F               	clrf	(___flmul@grs+1)^0,c
  7929   002FC0  6A10               	clrf	(___flmul@grs+2)^0,c
  7930   002FC2  6A11               	clrf	(___flmul@grs+3)^0,c
  7931   002FC4  5019               	movf	(___flmul@temp+1)^0,w,c
  7932   002FC6  6E14               	movwf	___flmul@prod^0,c
  7933   002FC8  6A15               	clrf	(___flmul@prod+1)^0,c
  7934   002FCA  6A16               	clrf	(___flmul@prod+2)^0,c
  7935   002FCC  6A17               	clrf	(___flmul@prod+3)^0,c
  7936   002FCE  5006               	movf	(___flmul@a+1)^0,w,c
  7937   002FD0  0202               	mulwf	(___flmul@b+1)^0,c
  7938   002FD2  CFF3 F018          	movff	prodl,___flmul@temp
  7939   002FD6  CFF4 F019          	movff	prodh,___flmul@temp+1
  7940   002FDA  5018               	movf	___flmul@temp^0,w,c
  7941   002FDC  260E               	addwf	___flmul@grs^0,f,c
  7942   002FDE  0E00               	movlw	0
  7943   002FE0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7944   002FE2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7945   002FE4  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7946   002FE6  5019               	movf	(___flmul@temp+1)^0,w,c
  7947   002FE8  2614               	addwf	___flmul@prod^0,f,c
  7948   002FEA  0E00               	movlw	0
  7949   002FEC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7950   002FEE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7951   002FF0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7952   002FF2  5005               	movf	___flmul@a^0,w,c
  7953   002FF4  0203               	mulwf	(___flmul@b+2)^0,c
  7954   002FF6  CFF3 F018          	movff	prodl,___flmul@temp
  7955   002FFA  CFF4 F019          	movff	prodh,___flmul@temp+1
  7956   002FFE  5018               	movf	___flmul@temp^0,w,c
  7957   003000  260E               	addwf	___flmul@grs^0,f,c
  7958   003002  0E00               	movlw	0
  7959   003004  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7960   003006  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7961   003008  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7962   00300A  5019               	movf	(___flmul@temp+1)^0,w,c
  7963   00300C  2614               	addwf	___flmul@prod^0,f,c
  7964   00300E  0E00               	movlw	0
  7965   003010  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7966   003012  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7967   003014  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7968   003016  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7969   00301A  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7970   00301E  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7971   003022  6A0E               	clrf	___flmul@grs^0,c
  7972   003024  5005               	movf	___flmul@a^0,w,c
  7973   003026  0202               	mulwf	(___flmul@b+1)^0,c
  7974   003028  CFF3 F018          	movff	prodl,___flmul@temp
  7975   00302C  CFF4 F019          	movff	prodh,___flmul@temp+1
  7976   003030  5018               	movf	___flmul@temp^0,w,c
  7977   003032  260E               	addwf	___flmul@grs^0,f,c
  7978   003034  5019               	movf	(___flmul@temp+1)^0,w,c
  7979   003036  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7980   003038  0E00               	movlw	0
  7981   00303A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7982   00303C  0E00               	movlw	0
  7983   00303E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7984   003040  5006               	movf	(___flmul@a+1)^0,w,c
  7985   003042  0201               	mulwf	___flmul@b^0,c
  7986   003044  CFF3 F018          	movff	prodl,___flmul@temp
  7987   003048  CFF4 F019          	movff	prodh,___flmul@temp+1
  7988   00304C  5018               	movf	___flmul@temp^0,w,c
  7989   00304E  260E               	addwf	___flmul@grs^0,f,c
  7990   003050  5019               	movf	(___flmul@temp+1)^0,w,c
  7991   003052  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7992   003054  0E00               	movlw	0
  7993   003056  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7994   003058  0E00               	movlw	0
  7995   00305A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7996   00305C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7997   003060  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7998   003064  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7999   003068  6A0E               	clrf	___flmul@grs^0,c
  8000   00306A  5005               	movf	___flmul@a^0,w,c
  8001   00306C  0201               	mulwf	___flmul@b^0,c
  8002   00306E  CFF3 F018          	movff	prodl,___flmul@temp
  8003   003072  CFF4 F019          	movff	prodh,___flmul@temp+1
  8004   003076  5018               	movf	___flmul@temp^0,w,c
  8005   003078  260E               	addwf	___flmul@grs^0,f,c
  8006   00307A  5019               	movf	(___flmul@temp+1)^0,w,c
  8007   00307C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8008   00307E  0E00               	movlw	0
  8009   003080  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8010   003082  0E00               	movlw	0
  8011   003084  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8012   003086  5007               	movf	(___flmul@a+2)^0,w,c
  8013   003088  0202               	mulwf	(___flmul@b+1)^0,c
  8014   00308A  CFF3 F018          	movff	prodl,___flmul@temp
  8015   00308E  CFF4 F019          	movff	prodh,___flmul@temp+1
  8016   003092  5018               	movf	___flmul@temp^0,w,c
  8017   003094  2614               	addwf	___flmul@prod^0,f,c
  8018   003096  5019               	movf	(___flmul@temp+1)^0,w,c
  8019   003098  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8020   00309A  0E00               	movlw	0
  8021   00309C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8022   00309E  0E00               	movlw	0
  8023   0030A0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8024   0030A2  5006               	movf	(___flmul@a+1)^0,w,c
  8025   0030A4  0203               	mulwf	(___flmul@b+2)^0,c
  8026   0030A6  CFF3 F018          	movff	prodl,___flmul@temp
  8027   0030AA  CFF4 F019          	movff	prodh,___flmul@temp+1
  8028   0030AE  5018               	movf	___flmul@temp^0,w,c
  8029   0030B0  2614               	addwf	___flmul@prod^0,f,c
  8030   0030B2  5019               	movf	(___flmul@temp+1)^0,w,c
  8031   0030B4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8032   0030B6  0E00               	movlw	0
  8033   0030B8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8034   0030BA  0E00               	movlw	0
  8035   0030BC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8036   0030BE  5007               	movf	(___flmul@a+2)^0,w,c
  8037   0030C0  0203               	mulwf	(___flmul@b+2)^0,c
  8038   0030C2  CFF3 F018          	movff	prodl,___flmul@temp
  8039   0030C6  CFF4 F019          	movff	prodh,___flmul@temp+1
  8040   0030CA  5018               	movf	___flmul@temp^0,w,c
  8041   0030CC  6E09               	movwf	??___flmul^0,c
  8042   0030CE  5019               	movf	(___flmul@temp+1)^0,w,c
  8043   0030D0  6E0A               	movwf	(??___flmul+1)^0,c
  8044   0030D2  6A0B               	clrf	(??___flmul+2)^0,c
  8045   0030D4  6A0C               	clrf	(??___flmul+3)^0,c
  8046   0030D6  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  8047   0030DA  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  8048   0030DE  C009  F00A         	movff	??___flmul,??___flmul+1
  8049   0030E2  6A09               	clrf	??___flmul^0,c
  8050   0030E4  5009               	movf	??___flmul^0,w,c
  8051   0030E6  2614               	addwf	___flmul@prod^0,f,c
  8052   0030E8  500A               	movf	(??___flmul+1)^0,w,c
  8053   0030EA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8054   0030EC  500B               	movf	(??___flmul+2)^0,w,c
  8055   0030EE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8056   0030F0  500C               	movf	(??___flmul+3)^0,w,c
  8057   0030F2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8058   0030F4  C00E  F009         	movff	___flmul@grs,??___flmul
  8059   0030F8  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  8060   0030FC  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  8061   003100  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  8062   003104  0E19               	movlw	25
  8063   003106  EF8A  F018         	goto	u5190
  8064   00310A                     u5195:
  8065   00310A  90D8               	bcf	status,0,c
  8066   00310C  320C               	rrcf	(??___flmul+3)^0,f,c
  8067   00310E  320B               	rrcf	(??___flmul+2)^0,f,c
  8068   003110  320A               	rrcf	(??___flmul+1)^0,f,c
  8069   003112  3209               	rrcf	??___flmul^0,f,c
  8070   003114                     u5190:
  8071   003114  2EE8               	decfsz	wreg,f,c
  8072   003116  EF85  F018         	goto	u5195
  8073   00311A  5009               	movf	??___flmul^0,w,c
  8074   00311C  2614               	addwf	___flmul@prod^0,f,c
  8075   00311E  500A               	movf	(??___flmul+1)^0,w,c
  8076   003120  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8077   003122  500B               	movf	(??___flmul+2)^0,w,c
  8078   003124  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8079   003126  500C               	movf	(??___flmul+3)^0,w,c
  8080   003128  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8081   00312A  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8082   00312E  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8083   003132  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8084   003136  6A0E               	clrf	___flmul@grs^0,c
  8085   003138  5012               	movf	___flmul@aexp^0,w,c
  8086   00313A  C013  F009         	movff	___flmul@bexp,??___flmul
  8087   00313E  6A0A               	clrf	(??___flmul+1)^0,c
  8088   003140  2609               	addwf	??___flmul^0,f,c
  8089   003142  0E00               	movlw	0
  8090   003144  220A               	addwfc	(??___flmul+1)^0,f,c
  8091   003146  0E82               	movlw	130
  8092   003148  2409               	addwf	??___flmul^0,w,c
  8093   00314A  6E18               	movwf	___flmul@temp^0,c
  8094   00314C  0EFF               	movlw	255
  8095   00314E  200A               	addwfc	(??___flmul+1)^0,w,c
  8096   003150  6E19               	movwf	(___flmul@temp+1)^0,c
  8097   003152  EFC0  F018         	goto	l5262
  8098   003156                     l5256:
  8099   003156  90D8               	bcf	status,0,c
  8100   003158  3614               	rlcf	___flmul@prod^0,f,c
  8101   00315A  3615               	rlcf	(___flmul@prod+1)^0,f,c
  8102   00315C  3616               	rlcf	(___flmul@prod+2)^0,f,c
  8103   00315E  3617               	rlcf	(___flmul@prod+3)^0,f,c
  8104   003160  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8105   003162  EFB5  F018         	goto	u5201
  8106   003166  EFB7  F018         	goto	u5200
  8107   00316A                     u5201:
  8108   00316A  EFB8  F018         	goto	l1242
  8109   00316E                     u5200:
  8110   00316E  8014               	bsf	___flmul@prod^0,0,c
  8111   003170                     l1242:
  8112   003170  90D8               	bcf	status,0,c
  8113   003172  360E               	rlcf	___flmul@grs^0,f,c
  8114   003174  360F               	rlcf	(___flmul@grs+1)^0,f,c
  8115   003176  3610               	rlcf	(___flmul@grs+2)^0,f,c
  8116   003178  3611               	rlcf	(___flmul@grs+3)^0,f,c
  8117   00317A  0618               	decf	___flmul@temp^0,f,c
  8118   00317C  A0D8               	btfss	status,0,c
  8119   00317E  0619               	decf	(___flmul@temp+1)^0,f,c
  8120   003180                     l5262:
  8121   003180  AE16               	btfss	(___flmul@prod+2)^0,7,c
  8122   003182  EFC5  F018         	goto	u5211
  8123   003186  EFC7  F018         	goto	u5210
  8124   00318A                     u5211:
  8125   00318A  EFAB  F018         	goto	l5256
  8126   00318E                     u5210:
  8127   00318E  0E00               	movlw	0
  8128   003190  6E12               	movwf	___flmul@aexp^0,c
  8129   003192  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8130   003194  EFCE  F018         	goto	u5221
  8131   003198  EFD0  F018         	goto	u5220
  8132   00319C                     u5221:
  8133   00319C  EFF4  F018         	goto	l1244
  8134   0031A0                     u5220:
  8135   0031A0  0EFF               	movlw	255
  8136   0031A2  140E               	andwf	___flmul@grs^0,w,c
  8137   0031A4  6E09               	movwf	??___flmul^0,c
  8138   0031A6  0EFF               	movlw	255
  8139   0031A8  140F               	andwf	(___flmul@grs+1)^0,w,c
  8140   0031AA  6E0A               	movwf	(??___flmul+1)^0,c
  8141   0031AC  0EFF               	movlw	255
  8142   0031AE  1410               	andwf	(___flmul@grs+2)^0,w,c
  8143   0031B0  6E0B               	movwf	(??___flmul+2)^0,c
  8144   0031B2  0E7F               	movlw	127
  8145   0031B4  1411               	andwf	(___flmul@grs+3)^0,w,c
  8146   0031B6  6E0C               	movwf	(??___flmul+3)^0,c
  8147   0031B8  5009               	movf	??___flmul^0,w,c
  8148   0031BA  100A               	iorwf	(??___flmul+1)^0,w,c
  8149   0031BC  100B               	iorwf	(??___flmul+2)^0,w,c
  8150   0031BE  100C               	iorwf	(??___flmul+3)^0,w,c
  8151   0031C0  B4D8               	btfsc	status,2,c
  8152   0031C2  EFE5  F018         	goto	u5231
  8153   0031C6  EFE7  F018         	goto	u5230
  8154   0031CA                     u5231:
  8155   0031CA  EFEB  F018         	goto	l1245
  8156   0031CE                     u5230:
  8157   0031CE                     l5270:
  8158   0031CE  0E01               	movlw	1
  8159   0031D0  6E12               	movwf	___flmul@aexp^0,c
  8160   0031D2  EFF4  F018         	goto	l1244
  8161   0031D6                     l1245:
  8162   0031D6  A014               	btfss	___flmul@prod^0,0,c
  8163   0031D8  EFF0  F018         	goto	u5241
  8164   0031DC  EFF2  F018         	goto	u5240
  8165   0031E0                     u5241:
  8166   0031E0  EFF4  F018         	goto	l1244
  8167   0031E4                     u5240:
  8168   0031E4  EFE7  F018         	goto	l5270
  8169   0031E8                     l1244:
  8170   0031E8  5012               	movf	___flmul@aexp^0,w,c
  8171   0031EA  B4D8               	btfsc	status,2,c
  8172   0031EC  EFFA  F018         	goto	u5251
  8173   0031F0  EFFC  F018         	goto	u5250
  8174   0031F4                     u5251:
  8175   0031F4  EF20  F019         	goto	l5282
  8176   0031F8                     u5250:
  8177   0031F8  0E01               	movlw	1
  8178   0031FA  2614               	addwf	___flmul@prod^0,f,c
  8179   0031FC  0E00               	movlw	0
  8180   0031FE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8181   003200  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8182   003202  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8183   003204  A017               	btfss	(___flmul@prod+3)^0,0,c
  8184   003206  EF07  F019         	goto	u5261
  8185   00320A  EF09  F019         	goto	u5260
  8186   00320E                     u5261:
  8187   00320E  EF20  F019         	goto	l5282
  8188   003212                     u5260:
  8189   003212  C014  F009         	movff	___flmul@prod,??___flmul
  8190   003216  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  8191   00321A  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  8192   00321E  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  8193   003222  340C               	rlcf	(??___flmul+3)^0,w,c
  8194   003224  320C               	rrcf	(??___flmul+3)^0,f,c
  8195   003226  320B               	rrcf	(??___flmul+2)^0,f,c
  8196   003228  320A               	rrcf	(??___flmul+1)^0,f,c
  8197   00322A  3209               	rrcf	??___flmul^0,f,c
  8198   00322C  C009  F014         	movff	??___flmul,___flmul@prod
  8199   003230  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  8200   003234  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  8201   003238  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  8202   00323C  4A18               	infsnz	___flmul@temp^0,f,c
  8203   00323E  2A19               	incf	(___flmul@temp+1)^0,f,c
  8204   003240                     l5282:
  8205   003240  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8206   003242  EF2B  F019         	goto	u5271
  8207   003246  5019               	movf	(___flmul@temp+1)^0,w,c
  8208   003248  E108               	bnz	u5270
  8209   00324A  2818               	incf	___flmul@temp^0,w,c
  8210   00324C  A0D8               	btfss	status,0,c
  8211   00324E  EF2B  F019         	goto	u5271
  8212   003252  EF2D  F019         	goto	u5270
  8213   003256                     u5271:
  8214   003256  EF37  F019         	goto	l5286
  8215   00325A                     u5270:
  8216   00325A  0E00               	movlw	0
  8217   00325C  6E14               	movwf	___flmul@prod^0,c
  8218   00325E  0E00               	movlw	0
  8219   003260  6E15               	movwf	(___flmul@prod+1)^0,c
  8220   003262  0E80               	movlw	128
  8221   003264  6E16               	movwf	(___flmul@prod+2)^0,c
  8222   003266  0E7F               	movlw	127
  8223   003268  6E17               	movwf	(___flmul@prod+3)^0,c
  8224   00326A  EF65  F019         	goto	l5298
  8225   00326E                     l5286:
  8226   00326E  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8227   003270  EF44  F019         	goto	u5280
  8228   003274  5019               	movf	(___flmul@temp+1)^0,w,c
  8229   003276  E106               	bnz	u5281
  8230   003278  0418               	decf	___flmul@temp^0,w,c
  8231   00327A  B0D8               	btfsc	status,0,c
  8232   00327C  EF42  F019         	goto	u5281
  8233   003280  EF44  F019         	goto	u5280
  8234   003284                     u5281:
  8235   003284  EF50  F019         	goto	l1252
  8236   003288                     u5280:
  8237   003288  0E00               	movlw	0
  8238   00328A  6E14               	movwf	___flmul@prod^0,c
  8239   00328C  0E00               	movlw	0
  8240   00328E  6E15               	movwf	(___flmul@prod+1)^0,c
  8241   003290  0E00               	movlw	0
  8242   003292  6E16               	movwf	(___flmul@prod+2)^0,c
  8243   003294  0E00               	movlw	0
  8244   003296  6E17               	movwf	(___flmul@prod+3)^0,c
  8245   003298  0E00               	movlw	0
  8246   00329A  6E0D               	movwf	___flmul@sign^0,c
  8247   00329C  EF65  F019         	goto	l5298
  8248   0032A0                     l1252:
  8249   0032A0  C018  F013         	movff	___flmul@temp,___flmul@bexp
  8250   0032A4  0EFF               	movlw	255
  8251   0032A6  1614               	andwf	___flmul@prod^0,f,c
  8252   0032A8  0EFF               	movlw	255
  8253   0032AA  1615               	andwf	(___flmul@prod+1)^0,f,c
  8254   0032AC  0E7F               	movlw	127
  8255   0032AE  1616               	andwf	(___flmul@prod+2)^0,f,c
  8256   0032B0  0E00               	movlw	0
  8257   0032B2  1617               	andwf	(___flmul@prod+3)^0,f,c
  8258   0032B4  A013               	btfss	___flmul@bexp^0,0,c
  8259   0032B6  EF5F  F019         	goto	u5291
  8260   0032BA  EF61  F019         	goto	u5290
  8261   0032BE                     u5291:
  8262   0032BE  EF62  F019         	goto	l5296
  8263   0032C2                     u5290:
  8264   0032C2  8E16               	bsf	(___flmul@prod+2)^0,7,c
  8265   0032C4                     l5296:
  8266   0032C4  90D8               	bcf	status,0,c
  8267   0032C6  3013               	rrcf	___flmul@bexp^0,w,c
  8268   0032C8  6E17               	movwf	(___flmul@prod+3)^0,c
  8269   0032CA                     l5298:
  8270   0032CA  500D               	movf	___flmul@sign^0,w,c
  8271   0032CC  1217               	iorwf	(___flmul@prod+3)^0,f,c
  8272   0032CE  C014  F001         	movff	___flmul@prod,?___flmul
  8273   0032D2  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  8274   0032D6  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  8275   0032DA  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  8276   0032DE                     l1239:
  8277   0032DE  0012               	return		;funcret
  8278   0032E0                     __end_of___flmul:
  8279                           	callstack 0
  8280                           
  8281 ;; *************** function ___flge *****************
  8282 ;; Defined at:
  8283 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;  ff1             4   25[COMRAM] unsigned char 
  8286 ;;  ff2             4   29[COMRAM] unsigned char 
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;		None               void
  8291 ;; Registers used:
  8292 ;;		wreg, status,2, status,0
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8298 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8300 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8301 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8302 ;;Total ram usage:       12 bytes
  8303 ;; Hardware stack levels used: 1
  8304 ;; This function calls:
  8305 ;;		Nothing
  8306 ;; This function is called by:
  8307 ;;		_efgtoa
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text30
  8312   004694                     __ptext30:
  8313                           	callstack 0
  8314   004694                     ___flge:
  8315                           	callstack 26
  8316   004694  0E00               	movlw	0
  8317   004696  141A               	andwf	___flge@ff1^0,w,c
  8318   004698  6E22               	movwf	??___flge^0,c
  8319   00469A  0E00               	movlw	0
  8320   00469C  141B               	andwf	(___flge@ff1+1)^0,w,c
  8321   00469E  6E23               	movwf	(??___flge+1)^0,c
  8322   0046A0  0E80               	movlw	128
  8323   0046A2  141C               	andwf	(___flge@ff1+2)^0,w,c
  8324   0046A4  6E24               	movwf	(??___flge+2)^0,c
  8325   0046A6  0E7F               	movlw	127
  8326   0046A8  141D               	andwf	(___flge@ff1+3)^0,w,c
  8327   0046AA  6E25               	movwf	(??___flge+3)^0,c
  8328   0046AC  5022               	movf	??___flge^0,w,c
  8329   0046AE  1023               	iorwf	(??___flge+1)^0,w,c
  8330   0046B0  1024               	iorwf	(??___flge+2)^0,w,c
  8331   0046B2  1025               	iorwf	(??___flge+3)^0,w,c
  8332   0046B4  A4D8               	btfss	status,2,c
  8333   0046B6  EF5F  F023         	goto	u5331
  8334   0046BA  EF61  F023         	goto	u5330
  8335   0046BE                     u5331:
  8336   0046BE  EF69  F023         	goto	l5330
  8337   0046C2                     u5330:
  8338   0046C2  0E00               	movlw	0
  8339   0046C4  6E1A               	movwf	___flge@ff1^0,c
  8340   0046C6  0E00               	movlw	0
  8341   0046C8  6E1B               	movwf	(___flge@ff1+1)^0,c
  8342   0046CA  0E00               	movlw	0
  8343   0046CC  6E1C               	movwf	(___flge@ff1+2)^0,c
  8344   0046CE  0E00               	movlw	0
  8345   0046D0  6E1D               	movwf	(___flge@ff1+3)^0,c
  8346   0046D2                     l5330:
  8347   0046D2  0E00               	movlw	0
  8348   0046D4  141E               	andwf	___flge@ff2^0,w,c
  8349   0046D6  6E22               	movwf	??___flge^0,c
  8350   0046D8  0E00               	movlw	0
  8351   0046DA  141F               	andwf	(___flge@ff2+1)^0,w,c
  8352   0046DC  6E23               	movwf	(??___flge+1)^0,c
  8353   0046DE  0E80               	movlw	128
  8354   0046E0  1420               	andwf	(___flge@ff2+2)^0,w,c
  8355   0046E2  6E24               	movwf	(??___flge+2)^0,c
  8356   0046E4  0E7F               	movlw	127
  8357   0046E6  1421               	andwf	(___flge@ff2+3)^0,w,c
  8358   0046E8  6E25               	movwf	(??___flge+3)^0,c
  8359   0046EA  5022               	movf	??___flge^0,w,c
  8360   0046EC  1023               	iorwf	(??___flge+1)^0,w,c
  8361   0046EE  1024               	iorwf	(??___flge+2)^0,w,c
  8362   0046F0  1025               	iorwf	(??___flge+3)^0,w,c
  8363   0046F2  A4D8               	btfss	status,2,c
  8364   0046F4  EF7E  F023         	goto	u5341
  8365   0046F8  EF80  F023         	goto	u5340
  8366   0046FC                     u5341:
  8367   0046FC  EF88  F023         	goto	l5334
  8368   004700                     u5340:
  8369   004700  0E00               	movlw	0
  8370   004702  6E1E               	movwf	___flge@ff2^0,c
  8371   004704  0E00               	movlw	0
  8372   004706  6E1F               	movwf	(___flge@ff2+1)^0,c
  8373   004708  0E00               	movlw	0
  8374   00470A  6E20               	movwf	(___flge@ff2+2)^0,c
  8375   00470C  0E00               	movlw	0
  8376   00470E  6E21               	movwf	(___flge@ff2+3)^0,c
  8377   004710                     l5334:
  8378   004710  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  8379   004712  EF8D  F023         	goto	u5351
  8380   004716  EF8F  F023         	goto	u5350
  8381   00471A                     u5351:
  8382   00471A  EF98  F023         	goto	l5338
  8383   00471E                     u5350:
  8384   00471E  6C1A               	negf	___flge@ff1^0,c
  8385   004720  1E1B               	comf	(___flge@ff1+1)^0,f,c
  8386   004722  B0D8               	btfsc	status,0,c
  8387   004724  2A1B               	incf	(___flge@ff1+1)^0,f,c
  8388   004726  1E1C               	comf	(___flge@ff1+2)^0,f,c
  8389   004728  B0D8               	btfsc	status,0,c
  8390   00472A  2A1C               	incf	(___flge@ff1+2)^0,f,c
  8391   00472C  0E80               	movlw	128
  8392   00472E  561D               	subfwb	(___flge@ff1+3)^0,f,c
  8393   004730                     l5338:
  8394   004730  AE21               	btfss	(___flge@ff2+3)^0,7,c
  8395   004732  EF9D  F023         	goto	u5361
  8396   004736  EF9F  F023         	goto	u5360
  8397   00473A                     u5361:
  8398   00473A  EFA8  F023         	goto	l886
  8399   00473E                     u5360:
  8400   00473E  6C1E               	negf	___flge@ff2^0,c
  8401   004740  1E1F               	comf	(___flge@ff2+1)^0,f,c
  8402   004742  B0D8               	btfsc	status,0,c
  8403   004744  2A1F               	incf	(___flge@ff2+1)^0,f,c
  8404   004746  1E20               	comf	(___flge@ff2+2)^0,f,c
  8405   004748  B0D8               	btfsc	status,0,c
  8406   00474A  2A20               	incf	(___flge@ff2+2)^0,f,c
  8407   00474C  0E80               	movlw	128
  8408   00474E  5621               	subfwb	(___flge@ff2+3)^0,f,c
  8409   004750                     l886:
  8410   004750  0E00               	movlw	0
  8411   004752  1A1A               	xorwf	___flge@ff1^0,f,c
  8412   004754  0E00               	movlw	0
  8413   004756  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  8414   004758  0E00               	movlw	0
  8415   00475A  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  8416   00475C  0E80               	movlw	128
  8417   00475E  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  8418   004760  0E00               	movlw	0
  8419   004762  1A1E               	xorwf	___flge@ff2^0,f,c
  8420   004764  0E00               	movlw	0
  8421   004766  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  8422   004768  0E00               	movlw	0
  8423   00476A  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  8424   00476C  0E80               	movlw	128
  8425   00476E  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  8426   004770  501E               	movf	___flge@ff2^0,w,c
  8427   004772  5C1A               	subwf	___flge@ff1^0,w,c
  8428   004774  501F               	movf	(___flge@ff2+1)^0,w,c
  8429   004776  581B               	subwfb	(___flge@ff1+1)^0,w,c
  8430   004778  5020               	movf	(___flge@ff2+2)^0,w,c
  8431   00477A  581C               	subwfb	(___flge@ff1+2)^0,w,c
  8432   00477C  5021               	movf	(___flge@ff2+3)^0,w,c
  8433   00477E  581D               	subwfb	(___flge@ff1+3)^0,w,c
  8434   004780  B0D8               	btfsc	status,0,c
  8435   004782  EFC5  F023         	goto	u5371
  8436   004786  EFC7  F023         	goto	u5370
  8437   00478A                     u5371:
  8438   00478A  EFCA  F023         	goto	l5344
  8439   00478E                     u5370:
  8440   00478E  90D8               	bcf	status,0,c
  8441   004790  EFCB  F023         	goto	l891
  8442   004794                     l5344:
  8443   004794  80D8               	bsf	status,0,c
  8444   004796                     l891:
  8445   004796  0012               	return		;funcret
  8446   004798                     __end_of___flge:
  8447                           	callstack 0
  8448                           
  8449 ;; *************** function ___fleq *****************
  8450 ;; Defined at:
  8451 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  ff1             4    0[COMRAM] unsigned char 
  8454 ;;  ff2             4    4[COMRAM] unsigned char 
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;		None               void
  8459 ;; Registers used:
  8460 ;;		wreg, status,2, status,0
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8466 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8468 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8469 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8470 ;;Total ram usage:       12 bytes
  8471 ;; Hardware stack levels used: 1
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_efgtoa
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text31
  8480   004DEE                     __ptext31:
  8481                           	callstack 0
  8482   004DEE                     ___fleq:
  8483                           	callstack 26
  8484   004DEE  0E00               	movlw	0
  8485   004DF0  1401               	andwf	___fleq@ff1^0,w,c
  8486   004DF2  6E09               	movwf	??___fleq^0,c
  8487   004DF4  0E00               	movlw	0
  8488   004DF6  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8489   004DF8  6E0A               	movwf	(??___fleq+1)^0,c
  8490   004DFA  0E80               	movlw	128
  8491   004DFC  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8492   004DFE  6E0B               	movwf	(??___fleq+2)^0,c
  8493   004E00  0E7F               	movlw	127
  8494   004E02  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8495   004E04  6E0C               	movwf	(??___fleq+3)^0,c
  8496   004E06  5009               	movf	??___fleq^0,w,c
  8497   004E08  100A               	iorwf	(??___fleq+1)^0,w,c
  8498   004E0A  100B               	iorwf	(??___fleq+2)^0,w,c
  8499   004E0C  100C               	iorwf	(??___fleq+3)^0,w,c
  8500   004E0E  A4D8               	btfss	status,2,c
  8501   004E10  EF0C  F027         	goto	u5301
  8502   004E14  EF0E  F027         	goto	u5300
  8503   004E18                     u5301:
  8504   004E18  EF16  F027         	goto	l5314
  8505   004E1C                     u5300:
  8506   004E1C  0E00               	movlw	0
  8507   004E1E  6E01               	movwf	___fleq@ff1^0,c
  8508   004E20  0E00               	movlw	0
  8509   004E22  6E02               	movwf	(___fleq@ff1+1)^0,c
  8510   004E24  0E00               	movlw	0
  8511   004E26  6E03               	movwf	(___fleq@ff1+2)^0,c
  8512   004E28  0E00               	movlw	0
  8513   004E2A  6E04               	movwf	(___fleq@ff1+3)^0,c
  8514   004E2C                     l5314:
  8515   004E2C  0E00               	movlw	0
  8516   004E2E  1405               	andwf	___fleq@ff2^0,w,c
  8517   004E30  6E09               	movwf	??___fleq^0,c
  8518   004E32  0E00               	movlw	0
  8519   004E34  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8520   004E36  6E0A               	movwf	(??___fleq+1)^0,c
  8521   004E38  0E80               	movlw	128
  8522   004E3A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8523   004E3C  6E0B               	movwf	(??___fleq+2)^0,c
  8524   004E3E  0E7F               	movlw	127
  8525   004E40  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8526   004E42  6E0C               	movwf	(??___fleq+3)^0,c
  8527   004E44  5009               	movf	??___fleq^0,w,c
  8528   004E46  100A               	iorwf	(??___fleq+1)^0,w,c
  8529   004E48  100B               	iorwf	(??___fleq+2)^0,w,c
  8530   004E4A  100C               	iorwf	(??___fleq+3)^0,w,c
  8531   004E4C  A4D8               	btfss	status,2,c
  8532   004E4E  EF2B  F027         	goto	u5311
  8533   004E52  EF2D  F027         	goto	u5310
  8534   004E56                     u5311:
  8535   004E56  EF35  F027         	goto	l5318
  8536   004E5A                     u5310:
  8537   004E5A  0E00               	movlw	0
  8538   004E5C  6E05               	movwf	___fleq@ff2^0,c
  8539   004E5E  0E00               	movlw	0
  8540   004E60  6E06               	movwf	(___fleq@ff2+1)^0,c
  8541   004E62  0E00               	movlw	0
  8542   004E64  6E07               	movwf	(___fleq@ff2+2)^0,c
  8543   004E66  0E00               	movlw	0
  8544   004E68  6E08               	movwf	(___fleq@ff2+3)^0,c
  8545   004E6A                     l5318:
  8546   004E6A  5005               	movf	___fleq@ff2^0,w,c
  8547   004E6C  1801               	xorwf	___fleq@ff1^0,w,c
  8548   004E6E  E10F               	bnz	u5320
  8549   004E70  5006               	movf	(___fleq@ff2+1)^0,w,c
  8550   004E72  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8551   004E74  E10C               	bnz	u5320
  8552   004E76  5007               	movf	(___fleq@ff2+2)^0,w,c
  8553   004E78  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8554   004E7A  E109               	bnz	u5320
  8555   004E7C  5008               	movf	(___fleq@ff2+3)^0,w,c
  8556   004E7E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8557   004E80  B4D8               	btfsc	status,2,c
  8558   004E82  EF45  F027         	goto	u5321
  8559   004E86  EF47  F027         	goto	u5320
  8560   004E8A                     u5321:
  8561   004E8A  EF4A  F027         	goto	l5322
  8562   004E8E                     u5320:
  8563   004E8E  90D8               	bcf	status,0,c
  8564   004E90  EF4B  F027         	goto	l880
  8565   004E94                     l5322:
  8566   004E94  80D8               	bsf	status,0,c
  8567   004E96                     l880:
  8568   004E96  0012               	return		;funcret
  8569   004E98                     __end_of___fleq:
  8570                           	callstack 0
  8571                           
  8572 ;; *************** function ___fldiv *****************
  8573 ;; Defined at:
  8574 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  8575 ;; Parameters:    Size  Location     Type
  8576 ;;  b               4   14[COMRAM] unsigned char 
  8577 ;;  a               4   18[COMRAM] unsigned char 
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;  grs             4   33[COMRAM] unsigned long 
  8580 ;;  rem             4   26[COMRAM] unsigned long 
  8581 ;;  new_exp         2   31[COMRAM] short 
  8582 ;;  aexp            1   38[COMRAM] unsigned char 
  8583 ;;  bexp            1   37[COMRAM] unsigned char 
  8584 ;;  sign            1   30[COMRAM] unsigned char 
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  4   14[COMRAM] unsigned char 
  8587 ;; Registers used:
  8588 ;;		wreg, status,2, status,0
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8594 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8595 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;Total ram usage:       25 bytes
  8599 ;; Hardware stack levels used: 1
  8600 ;; This function calls:
  8601 ;;		Nothing
  8602 ;; This function is called by:
  8603 ;;		_main
  8604 ;;		_efgtoa
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           	psect	text32
  8609   0032E0                     __ptext32:
  8610                           	callstack 0
  8611   0032E0                     ___fldiv:
  8612                           	callstack 26
  8613   0032E0  5012               	movf	(___fldiv@b+3)^0,w,c
  8614   0032E2  0B80               	andlw	128
  8615   0032E4  6E1F               	movwf	___fldiv@sign^0,c
  8616   0032E6  5012               	movf	(___fldiv@b+3)^0,w,c
  8617   0032E8  2412               	addwf	(___fldiv@b+3)^0,w,c
  8618   0032EA  6E26               	movwf	___fldiv@bexp^0,c
  8619   0032EC  AE11               	btfss	(___fldiv@b+2)^0,7,c
  8620   0032EE  EF7B  F019         	goto	u4881
  8621   0032F2  EF7D  F019         	goto	u4880
  8622   0032F6                     u4881:
  8623   0032F6  EF7E  F019         	goto	l5042
  8624   0032FA                     u4880:
  8625   0032FA  8026               	bsf	___fldiv@bexp^0,0,c
  8626   0032FC                     l5042:
  8627   0032FC  5026               	movf	___fldiv@bexp^0,w,c
  8628   0032FE  B4D8               	btfsc	status,2,c
  8629   003300  EF84  F019         	goto	u4891
  8630   003304  EF86  F019         	goto	u4890
  8631   003308                     u4891:
  8632   003308  EF9B  F019         	goto	l5052
  8633   00330C                     u4890:
  8634   00330C  2826               	incf	___fldiv@bexp^0,w,c
  8635   00330E  A4D8               	btfss	status,2,c
  8636   003310  EF8C  F019         	goto	u4901
  8637   003314  EF8E  F019         	goto	u4900
  8638   003318                     u4901:
  8639   003318  EF96  F019         	goto	l5048
  8640   00331C                     u4900:
  8641   00331C  0E00               	movlw	0
  8642   00331E  6E0F               	movwf	___fldiv@b^0,c
  8643   003320  0E00               	movlw	0
  8644   003322  6E10               	movwf	(___fldiv@b+1)^0,c
  8645   003324  0E00               	movlw	0
  8646   003326  6E11               	movwf	(___fldiv@b+2)^0,c
  8647   003328  0E00               	movlw	0
  8648   00332A  6E12               	movwf	(___fldiv@b+3)^0,c
  8649   00332C                     l5048:
  8650   00332C  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8651   00332E  0E00               	movlw	0
  8652   003330  6E12               	movwf	(___fldiv@b+3)^0,c
  8653   003332  EFA3  F019         	goto	l5054
  8654   003336                     l5052:
  8655   003336  0E00               	movlw	0
  8656   003338  6E0F               	movwf	___fldiv@b^0,c
  8657   00333A  0E00               	movlw	0
  8658   00333C  6E10               	movwf	(___fldiv@b+1)^0,c
  8659   00333E  0E00               	movlw	0
  8660   003340  6E11               	movwf	(___fldiv@b+2)^0,c
  8661   003342  0E00               	movlw	0
  8662   003344  6E12               	movwf	(___fldiv@b+3)^0,c
  8663   003346                     l5054:
  8664   003346  5016               	movf	(___fldiv@a+3)^0,w,c
  8665   003348  0B80               	andlw	128
  8666   00334A  1A1F               	xorwf	___fldiv@sign^0,f,c
  8667   00334C  5016               	movf	(___fldiv@a+3)^0,w,c
  8668   00334E  2416               	addwf	(___fldiv@a+3)^0,w,c
  8669   003350  6E27               	movwf	___fldiv@aexp^0,c
  8670   003352  AE15               	btfss	(___fldiv@a+2)^0,7,c
  8671   003354  EFAE  F019         	goto	u4911
  8672   003358  EFB0  F019         	goto	u4910
  8673   00335C                     u4911:
  8674   00335C  EFB1  F019         	goto	l5062
  8675   003360                     u4910:
  8676   003360  8027               	bsf	___fldiv@aexp^0,0,c
  8677   003362                     l5062:
  8678   003362  5027               	movf	___fldiv@aexp^0,w,c
  8679   003364  B4D8               	btfsc	status,2,c
  8680   003366  EFB7  F019         	goto	u4921
  8681   00336A  EFB9  F019         	goto	u4920
  8682   00336E                     u4921:
  8683   00336E  EFCE  F019         	goto	l5072
  8684   003372                     u4920:
  8685   003372  2827               	incf	___fldiv@aexp^0,w,c
  8686   003374  A4D8               	btfss	status,2,c
  8687   003376  EFBF  F019         	goto	u4931
  8688   00337A  EFC1  F019         	goto	u4930
  8689   00337E                     u4931:
  8690   00337E  EFC9  F019         	goto	l5068
  8691   003382                     u4930:
  8692   003382  0E00               	movlw	0
  8693   003384  6E13               	movwf	___fldiv@a^0,c
  8694   003386  0E00               	movlw	0
  8695   003388  6E14               	movwf	(___fldiv@a+1)^0,c
  8696   00338A  0E00               	movlw	0
  8697   00338C  6E15               	movwf	(___fldiv@a+2)^0,c
  8698   00338E  0E00               	movlw	0
  8699   003390  6E16               	movwf	(___fldiv@a+3)^0,c
  8700   003392                     l5068:
  8701   003392  8E15               	bsf	(___fldiv@a+2)^0,7,c
  8702   003394  0E00               	movlw	0
  8703   003396  6E16               	movwf	(___fldiv@a+3)^0,c
  8704   003398  EFD6  F019         	goto	l5074
  8705   00339C                     l5072:
  8706   00339C  0E00               	movlw	0
  8707   00339E  6E13               	movwf	___fldiv@a^0,c
  8708   0033A0  0E00               	movlw	0
  8709   0033A2  6E14               	movwf	(___fldiv@a+1)^0,c
  8710   0033A4  0E00               	movlw	0
  8711   0033A6  6E15               	movwf	(___fldiv@a+2)^0,c
  8712   0033A8  0E00               	movlw	0
  8713   0033AA  6E16               	movwf	(___fldiv@a+3)^0,c
  8714   0033AC                     l5074:
  8715   0033AC  5013               	movf	___fldiv@a^0,w,c
  8716   0033AE  1014               	iorwf	(___fldiv@a+1)^0,w,c
  8717   0033B0  1015               	iorwf	(___fldiv@a+2)^0,w,c
  8718   0033B2  1016               	iorwf	(___fldiv@a+3)^0,w,c
  8719   0033B4  A4D8               	btfss	status,2,c
  8720   0033B6  EFDF  F019         	goto	u4941
  8721   0033BA  EFE1  F019         	goto	u4940
  8722   0033BE                     u4941:
  8723   0033BE  EFF9  F019         	goto	l5086
  8724   0033C2                     u4940:
  8725   0033C2  0E00               	movlw	0
  8726   0033C4  6E0F               	movwf	___fldiv@b^0,c
  8727   0033C6  0E00               	movlw	0
  8728   0033C8  6E10               	movwf	(___fldiv@b+1)^0,c
  8729   0033CA  0E00               	movlw	0
  8730   0033CC  6E11               	movwf	(___fldiv@b+2)^0,c
  8731   0033CE  0E00               	movlw	0
  8732   0033D0  6E12               	movwf	(___fldiv@b+3)^0,c
  8733   0033D2  0E80               	movlw	128
  8734   0033D4  1211               	iorwf	(___fldiv@b+2)^0,f,c
  8735   0033D6  0E7F               	movlw	127
  8736   0033D8  1212               	iorwf	(___fldiv@b+3)^0,f,c
  8737   0033DA                     l5080:
  8738   0033DA  501F               	movf	___fldiv@sign^0,w,c
  8739   0033DC  1212               	iorwf	(___fldiv@b+3)^0,f,c
  8740   0033DE  C00F  F00F         	movff	___fldiv@b,?___fldiv
  8741   0033E2  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  8742   0033E6  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  8743   0033EA  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  8744   0033EE  EF3C  F01B         	goto	l1203
  8745   0033F2                     l5086:
  8746   0033F2  5026               	movf	___fldiv@bexp^0,w,c
  8747   0033F4  A4D8               	btfss	status,2,c
  8748   0033F6  EFFF  F019         	goto	u4951
  8749   0033FA  EF01  F01A         	goto	u4950
  8750   0033FE                     u4951:
  8751   0033FE  EF0B  F01A         	goto	l5094
  8752   003402                     u4950:
  8753   003402  0E00               	movlw	0
  8754   003404  6E0F               	movwf	?___fldiv^0,c
  8755   003406  0E00               	movlw	0
  8756   003408  6E10               	movwf	(?___fldiv+1)^0,c
  8757   00340A  0E00               	movlw	0
  8758   00340C  6E11               	movwf	(?___fldiv+2)^0,c
  8759   00340E  0E00               	movlw	0
  8760   003410  6E12               	movwf	(?___fldiv+3)^0,c
  8761   003412  EF3C  F01B         	goto	l1203
  8762   003416                     l5094:
  8763   003416  5027               	movf	___fldiv@aexp^0,w,c
  8764   003418  C026  F017         	movff	___fldiv@bexp,??___fldiv
  8765   00341C  6A18               	clrf	(??___fldiv+1)^0,c
  8766   00341E  5E17               	subwf	??___fldiv^0,f,c
  8767   003420  0E00               	movlw	0
  8768   003422  5A18               	subwfb	(??___fldiv+1)^0,f,c
  8769   003424  0E7F               	movlw	127
  8770   003426  2417               	addwf	??___fldiv^0,w,c
  8771   003428  6E20               	movwf	___fldiv@new_exp^0,c
  8772   00342A  0E00               	movlw	0
  8773   00342C  2018               	addwfc	(??___fldiv+1)^0,w,c
  8774   00342E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8775   003430  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  8776   003434  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  8777   003438  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  8778   00343C  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  8779   003440  0E00               	movlw	0
  8780   003442  6E0F               	movwf	___fldiv@b^0,c
  8781   003444  0E00               	movlw	0
  8782   003446  6E10               	movwf	(___fldiv@b+1)^0,c
  8783   003448  0E00               	movlw	0
  8784   00344A  6E11               	movwf	(___fldiv@b+2)^0,c
  8785   00344C  0E00               	movlw	0
  8786   00344E  6E12               	movwf	(___fldiv@b+3)^0,c
  8787   003450  0E00               	movlw	0
  8788   003452  6E22               	movwf	___fldiv@grs^0,c
  8789   003454  0E00               	movlw	0
  8790   003456  6E23               	movwf	(___fldiv@grs+1)^0,c
  8791   003458  0E00               	movlw	0
  8792   00345A  6E24               	movwf	(___fldiv@grs+2)^0,c
  8793   00345C  0E00               	movlw	0
  8794   00345E  6E25               	movwf	(___fldiv@grs+3)^0,c
  8795   003460  0E00               	movlw	0
  8796   003462  6E27               	movwf	___fldiv@aexp^0,c
  8797   003464  EF6C  F01A         	goto	l1205
  8798   003468                     l5104:
  8799   003468  5027               	movf	___fldiv@aexp^0,w,c
  8800   00346A  B4D8               	btfsc	status,2,c
  8801   00346C  EF3A  F01A         	goto	u4961
  8802   003470  EF3C  F01A         	goto	u4960
  8803   003474                     u4961:
  8804   003474  EF53  F01A         	goto	l5112
  8805   003478                     u4960:
  8806   003478  90D8               	bcf	status,0,c
  8807   00347A  361B               	rlcf	___fldiv@rem^0,f,c
  8808   00347C  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  8809   00347E  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  8810   003480  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  8811   003482  90D8               	bcf	status,0,c
  8812   003484  360F               	rlcf	___fldiv@b^0,f,c
  8813   003486  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8814   003488  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8815   00348A  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8816   00348C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8817   00348E  EF4B  F01A         	goto	u4971
  8818   003492  EF4D  F01A         	goto	u4970
  8819   003496                     u4971:
  8820   003496  EF4E  F01A         	goto	l1208
  8821   00349A                     u4970:
  8822   00349A  800F               	bsf	___fldiv@b^0,0,c
  8823   00349C                     l1208:
  8824   00349C  90D8               	bcf	status,0,c
  8825   00349E  3622               	rlcf	___fldiv@grs^0,f,c
  8826   0034A0  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8827   0034A2  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8828   0034A4  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8829   0034A6                     l5112:
  8830   0034A6  5013               	movf	___fldiv@a^0,w,c
  8831   0034A8  5C1B               	subwf	___fldiv@rem^0,w,c
  8832   0034AA  5014               	movf	(___fldiv@a+1)^0,w,c
  8833   0034AC  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  8834   0034AE  5015               	movf	(___fldiv@a+2)^0,w,c
  8835   0034B0  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  8836   0034B2  5016               	movf	(___fldiv@a+3)^0,w,c
  8837   0034B4  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  8838   0034B6  A0D8               	btfss	status,0,c
  8839   0034B8  EF60  F01A         	goto	u4981
  8840   0034BC  EF62  F01A         	goto	u4980
  8841   0034C0                     u4981:
  8842   0034C0  EF6B  F01A         	goto	l5118
  8843   0034C4                     u4980:
  8844   0034C4  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  8845   0034C6  5013               	movf	___fldiv@a^0,w,c
  8846   0034C8  5E1B               	subwf	___fldiv@rem^0,f,c
  8847   0034CA  5014               	movf	(___fldiv@a+1)^0,w,c
  8848   0034CC  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  8849   0034CE  5015               	movf	(___fldiv@a+2)^0,w,c
  8850   0034D0  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  8851   0034D2  5016               	movf	(___fldiv@a+3)^0,w,c
  8852   0034D4  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  8853   0034D6                     l5118:
  8854   0034D6  2A27               	incf	___fldiv@aexp^0,f,c
  8855   0034D8                     l1205:
  8856   0034D8  0E19               	movlw	25
  8857   0034DA  6427               	cpfsgt	___fldiv@aexp^0,c
  8858   0034DC  EF72  F01A         	goto	u4991
  8859   0034E0  EF74  F01A         	goto	u4990
  8860   0034E4                     u4991:
  8861   0034E4  EF34  F01A         	goto	l5104
  8862   0034E8                     u4990:
  8863   0034E8  501B               	movf	___fldiv@rem^0,w,c
  8864   0034EA  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  8865   0034EC  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  8866   0034EE  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  8867   0034F0  B4D8               	btfsc	status,2,c
  8868   0034F2  EF7D  F01A         	goto	u5001
  8869   0034F6  EF7F  F01A         	goto	u5000
  8870   0034FA                     u5001:
  8871   0034FA  EF97  F01A         	goto	l5130
  8872   0034FE                     u5000:
  8873   0034FE  8022               	bsf	___fldiv@grs^0,0,c
  8874   003500  EF97  F01A         	goto	l5130
  8875   003504                     l5124:
  8876   003504  90D8               	bcf	status,0,c
  8877   003506  360F               	rlcf	___fldiv@b^0,f,c
  8878   003508  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8879   00350A  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8880   00350C  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8881   00350E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8882   003510  EF8C  F01A         	goto	u5011
  8883   003514  EF8E  F01A         	goto	u5010
  8884   003518                     u5011:
  8885   003518  EF8F  F01A         	goto	l1214
  8886   00351C                     u5010:
  8887   00351C  800F               	bsf	___fldiv@b^0,0,c
  8888   00351E                     l1214:
  8889   00351E  90D8               	bcf	status,0,c
  8890   003520  3622               	rlcf	___fldiv@grs^0,f,c
  8891   003522  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8892   003524  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8893   003526  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8894   003528  0620               	decf	___fldiv@new_exp^0,f,c
  8895   00352A  A0D8               	btfss	status,0,c
  8896   00352C  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  8897   00352E                     l5130:
  8898   00352E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  8899   003530  EF9C  F01A         	goto	u5021
  8900   003534  EF9E  F01A         	goto	u5020
  8901   003538                     u5021:
  8902   003538  EF82  F01A         	goto	l5124
  8903   00353C                     u5020:
  8904   00353C  0E00               	movlw	0
  8905   00353E  6E27               	movwf	___fldiv@aexp^0,c
  8906   003540  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8907   003542  EFA5  F01A         	goto	u5031
  8908   003546  EFA7  F01A         	goto	u5030
  8909   00354A                     u5031:
  8910   00354A  EFCB  F01A         	goto	l1216
  8911   00354E                     u5030:
  8912   00354E  0EFF               	movlw	255
  8913   003550  1422               	andwf	___fldiv@grs^0,w,c
  8914   003552  6E17               	movwf	??___fldiv^0,c
  8915   003554  0EFF               	movlw	255
  8916   003556  1423               	andwf	(___fldiv@grs+1)^0,w,c
  8917   003558  6E18               	movwf	(??___fldiv+1)^0,c
  8918   00355A  0EFF               	movlw	255
  8919   00355C  1424               	andwf	(___fldiv@grs+2)^0,w,c
  8920   00355E  6E19               	movwf	(??___fldiv+2)^0,c
  8921   003560  0E7F               	movlw	127
  8922   003562  1425               	andwf	(___fldiv@grs+3)^0,w,c
  8923   003564  6E1A               	movwf	(??___fldiv+3)^0,c
  8924   003566  5017               	movf	??___fldiv^0,w,c
  8925   003568  1018               	iorwf	(??___fldiv+1)^0,w,c
  8926   00356A  1019               	iorwf	(??___fldiv+2)^0,w,c
  8927   00356C  101A               	iorwf	(??___fldiv+3)^0,w,c
  8928   00356E  B4D8               	btfsc	status,2,c
  8929   003570  EFBC  F01A         	goto	u5041
  8930   003574  EFBE  F01A         	goto	u5040
  8931   003578                     u5041:
  8932   003578  EFC2  F01A         	goto	l1217
  8933   00357C                     u5040:
  8934   00357C                     l5138:
  8935   00357C  0E01               	movlw	1
  8936   00357E  6E27               	movwf	___fldiv@aexp^0,c
  8937   003580  EFCB  F01A         	goto	l1216
  8938   003584                     l1217:
  8939   003584  A00F               	btfss	___fldiv@b^0,0,c
  8940   003586  EFC7  F01A         	goto	u5051
  8941   00358A  EFC9  F01A         	goto	u5050
  8942   00358E                     u5051:
  8943   00358E  EFCB  F01A         	goto	l1216
  8944   003592                     u5050:
  8945   003592  EFBE  F01A         	goto	l5138
  8946   003596                     l1216:
  8947   003596  5027               	movf	___fldiv@aexp^0,w,c
  8948   003598  B4D8               	btfsc	status,2,c
  8949   00359A  EFD1  F01A         	goto	u5061
  8950   00359E  EFD3  F01A         	goto	u5060
  8951   0035A2                     u5061:
  8952   0035A2  EFF7  F01A         	goto	l5150
  8953   0035A6                     u5060:
  8954   0035A6  0E01               	movlw	1
  8955   0035A8  260F               	addwf	___fldiv@b^0,f,c
  8956   0035AA  0E00               	movlw	0
  8957   0035AC  2210               	addwfc	(___fldiv@b+1)^0,f,c
  8958   0035AE  2211               	addwfc	(___fldiv@b+2)^0,f,c
  8959   0035B0  2212               	addwfc	(___fldiv@b+3)^0,f,c
  8960   0035B2  A012               	btfss	(___fldiv@b+3)^0,0,c
  8961   0035B4  EFDE  F01A         	goto	u5071
  8962   0035B8  EFE0  F01A         	goto	u5070
  8963   0035BC                     u5071:
  8964   0035BC  EFF7  F01A         	goto	l5150
  8965   0035C0                     u5070:
  8966   0035C0  C00F  F017         	movff	___fldiv@b,??___fldiv
  8967   0035C4  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  8968   0035C8  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  8969   0035CC  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  8970   0035D0  341A               	rlcf	(??___fldiv+3)^0,w,c
  8971   0035D2  321A               	rrcf	(??___fldiv+3)^0,f,c
  8972   0035D4  3219               	rrcf	(??___fldiv+2)^0,f,c
  8973   0035D6  3218               	rrcf	(??___fldiv+1)^0,f,c
  8974   0035D8  3217               	rrcf	??___fldiv^0,f,c
  8975   0035DA  C017  F00F         	movff	??___fldiv,___fldiv@b
  8976   0035DE  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  8977   0035E2  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  8978   0035E6  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  8979   0035EA  4A20               	infsnz	___fldiv@new_exp^0,f,c
  8980   0035EC  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  8981   0035EE                     l5150:
  8982   0035EE  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8983   0035F0  EF02  F01B         	goto	u5081
  8984   0035F4  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8985   0035F6  E108               	bnz	u5080
  8986   0035F8  2820               	incf	___fldiv@new_exp^0,w,c
  8987   0035FA  A0D8               	btfss	status,0,c
  8988   0035FC  EF02  F01B         	goto	u5081
  8989   003600  EF04  F01B         	goto	u5080
  8990   003604                     u5081:
  8991   003604  EF0F  F01B         	goto	l5154
  8992   003608                     u5080:
  8993   003608  0E00               	movlw	0
  8994   00360A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8995   00360C  6820               	setf	___fldiv@new_exp^0,c
  8996   00360E  0E00               	movlw	0
  8997   003610  6E0F               	movwf	___fldiv@b^0,c
  8998   003612  0E00               	movlw	0
  8999   003614  6E10               	movwf	(___fldiv@b+1)^0,c
  9000   003616  0E00               	movlw	0
  9001   003618  6E11               	movwf	(___fldiv@b+2)^0,c
  9002   00361A  0E00               	movlw	0
  9003   00361C  6E12               	movwf	(___fldiv@b+3)^0,c
  9004   00361E                     l5154:
  9005   00361E  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9006   003620  EF1C  F01B         	goto	u5090
  9007   003624  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  9008   003626  E106               	bnz	u5091
  9009   003628  0420               	decf	___fldiv@new_exp^0,w,c
  9010   00362A  B0D8               	btfsc	status,0,c
  9011   00362C  EF1A  F01B         	goto	u5091
  9012   003630  EF1C  F01B         	goto	u5090
  9013   003634                     u5091:
  9014   003634  EF2A  F01B         	goto	l5158
  9015   003638                     u5090:
  9016   003638  0E00               	movlw	0
  9017   00363A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  9018   00363C  0E00               	movlw	0
  9019   00363E  6E20               	movwf	___fldiv@new_exp^0,c
  9020   003640  0E00               	movlw	0
  9021   003642  6E0F               	movwf	___fldiv@b^0,c
  9022   003644  0E00               	movlw	0
  9023   003646  6E10               	movwf	(___fldiv@b+1)^0,c
  9024   003648  0E00               	movlw	0
  9025   00364A  6E11               	movwf	(___fldiv@b+2)^0,c
  9026   00364C  0E00               	movlw	0
  9027   00364E  6E12               	movwf	(___fldiv@b+3)^0,c
  9028   003650  0E00               	movlw	0
  9029   003652  6E1F               	movwf	___fldiv@sign^0,c
  9030   003654                     l5158:
  9031   003654  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  9032   003658  A026               	btfss	___fldiv@bexp^0,0,c
  9033   00365A  EF31  F01B         	goto	u5101
  9034   00365E  EF33  F01B         	goto	u5100
  9035   003662                     u5101:
  9036   003662  EF36  F01B         	goto	l5164
  9037   003666                     u5100:
  9038   003666  8E11               	bsf	(___fldiv@b+2)^0,7,c
  9039   003668  EF37  F01B         	goto	l5166
  9040   00366C                     l5164:
  9041   00366C  9E11               	bcf	(___fldiv@b+2)^0,7,c
  9042   00366E                     l5166:
  9043   00366E  90D8               	bcf	status,0,c
  9044   003670  3026               	rrcf	___fldiv@bexp^0,w,c
  9045   003672  6E12               	movwf	(___fldiv@b+3)^0,c
  9046   003674  EFED  F019         	goto	l5080
  9047   003678                     l1203:
  9048   003678  0012               	return		;funcret
  9049   00367A                     __end_of___fldiv:
  9050                           	callstack 0
  9051                           
  9052 ;; *************** function _dtoa *****************
  9053 ;; Defined at:
  9054 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9057 ;;		 -> sprintf@f(12), 
  9058 ;;  d               4   29[COMRAM] long 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;  i               2   39[COMRAM] int 
  9061 ;;  w               2   37[COMRAM] int 
  9062 ;;  p               2   35[COMRAM] int 
  9063 ;;  s               1   41[COMRAM] unsigned char 
  9064 ;; Return value:  Size  Location     Type
  9065 ;;                  1    wreg      void 
  9066 ;; Registers used:
  9067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9068 ;; Tracked objects:
  9069 ;;		On entry : 0/0
  9070 ;;		On exit  : 0/0
  9071 ;;		Unchanged: 0/0
  9072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9073 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9074 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9076 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9077 ;;Total ram usage:       15 bytes
  9078 ;; Hardware stack levels used: 1
  9079 ;; Hardware stack levels required when called: 4
  9080 ;; This function calls:
  9081 ;;		___aldiv
  9082 ;;		___almod
  9083 ;;		_abs
  9084 ;;		_pad
  9085 ;; This function is called by:
  9086 ;;		_vfpfcnvrt
  9087 ;; This function uses a non-reentrant model
  9088 ;;
  9089                           
  9090                           	psect	text33
  9091   00388C                     __ptext33:
  9092                           	callstack 0
  9093   00388C                     _dtoa:
  9094                           	callstack 23
  9095   00388C                     
  9096                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  9097   00388C  BE21               	btfsc	(dtoa@d+3)^0,7,c
  9098   00388E  EF4B  F01C         	goto	u5791
  9099   003892  EF4E  F01C         	goto	u5790
  9100   003896                     u5791:
  9101   003896  0E01               	movlw	1
  9102   003898  EF4F  F01C         	goto	u5800
  9103   00389C                     u5790:
  9104   00389C  0E00               	movlw	0
  9105   00389E                     u5800:
  9106   00389E  6E2A               	movwf	dtoa@s^0,c
  9107   0038A0                     
  9108                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  9109   0038A0  502A               	movf	dtoa@s^0,w,c
  9110   0038A2  B4D8               	btfsc	status,2,c
  9111   0038A4  EF56  F01C         	goto	u5811
  9112   0038A8  EF58  F01C         	goto	u5810
  9113   0038AC                     u5811:
  9114   0038AC  EF60  F01C         	goto	l5550
  9115   0038B0                     u5810:
  9116   0038B0                     
  9117                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  9118   0038B0  1E21               	comf	(dtoa@d+3)^0,f,c
  9119   0038B2  1E20               	comf	(dtoa@d+2)^0,f,c
  9120   0038B4  1E1F               	comf	(dtoa@d+1)^0,f,c
  9121   0038B6  6C1E               	negf	dtoa@d^0,c
  9122   0038B8  0E00               	movlw	0
  9123   0038BA  221F               	addwfc	(dtoa@d+1)^0,f,c
  9124   0038BC  2220               	addwfc	(dtoa@d+2)^0,f,c
  9125   0038BE  2221               	addwfc	(dtoa@d+3)^0,f,c
  9126   0038C0                     l5550:
  9127                           
  9128                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  9129   0038C0  BE7E               	btfsc	(_prec+1)^0,7,c
  9130   0038C2  EF67  F01C         	goto	u5820
  9131   0038C6  EF65  F01C         	goto	u5821
  9132   0038CA                     u5821:
  9133   0038CA  EF6D  F01C         	goto	l1350
  9134   0038CE                     u5820:
  9135   0038CE  0E00               	movlw	0
  9136   0038D0  6E25               	movwf	(dtoa@p+1)^0,c
  9137   0038D2  0E01               	movlw	1
  9138   0038D4  6E24               	movwf	dtoa@p^0,c
  9139   0038D6  EF71  F01C         	goto	l1352
  9140   0038DA                     l1350:
  9141   0038DA  C07D  F024         	movff	_prec,dtoa@p
  9142   0038DE  C07E  F025         	movff	_prec+1,dtoa@p+1
  9143   0038E2                     l1352:
  9144                           
  9145                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  9146   0038E2  C09A  F026         	movff	_width,dtoa@w
  9147   0038E6  C09B  F027         	movff	_width+1,dtoa@w+1
  9148   0038EA                     
  9149                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  9150   0038EA  502A               	movf	dtoa@s^0,w,c
  9151   0038EC  B4D8               	btfsc	status,2,c
  9152   0038EE  EF7B  F01C         	goto	u5831
  9153   0038F2  EF7D  F01C         	goto	u5830
  9154   0038F6                     u5831:
  9155   0038F6  EF94  F01C         	goto	l1353
  9156   0038FA                     u5830:
  9157   0038FA                     
  9158                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  9159   0038FA  0626               	decf	dtoa@w^0,f,c
  9160   0038FC  A0D8               	btfss	status,0,c
  9161   0038FE  0627               	decf	(dtoa@w+1)^0,f,c
  9162   003900                     
  9163                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  9164   003900  502A               	movf	dtoa@s^0,w,c
  9165   003902  A4D8               	btfss	status,2,c
  9166   003904  EF86  F01C         	goto	u5841
  9167   003908  EF88  F01C         	goto	u5840
  9168   00390C                     u5841:
  9169   00390C  EF8E  F01C         	goto	l5562
  9170   003910                     u5840:
  9171   003910  0E00               	movlw	0
  9172   003912  6E23               	movwf	(_dtoa$1458+1)^0,c
  9173   003914  0E2B               	movlw	43
  9174   003916  6E22               	movwf	_dtoa$1458^0,c
  9175   003918  EF92  F01C         	goto	l5564
  9176   00391C                     l5562:
  9177   00391C  0E00               	movlw	0
  9178   00391E  6E23               	movwf	(_dtoa$1458+1)^0,c
  9179   003920  0E2D               	movlw	45
  9180   003922  6E22               	movwf	_dtoa$1458^0,c
  9181   003924                     l5564:
  9182   003924  C022  F02A         	movff	_dtoa$1458,dtoa@s
  9183   003928                     l1353:
  9184                           
  9185                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  9186   003928  0E00               	movlw	0
  9187   00392A  6E29               	movwf	(dtoa@i+1)^0,c
  9188   00392C  0E4F               	movlw	79
  9189   00392E  6E28               	movwf	dtoa@i^0,c
  9190   003930                     
  9191                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  9192   003930  0E00               	movlw	0
  9193   003932  0101               	movlb	1	; () banked
  9194   003934  6FB3               	movwf	(_dbuf+79)& (0+255),b
  9195                           
  9196                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  9197   003936  EFE1  F01C         	goto	l5578
  9198   00393A                     l5568:
  9199                           
  9200                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  9201   00393A  0628               	decf	dtoa@i^0,f,c
  9202   00393C  A0D8               	btfss	status,0,c
  9203   00393E  0629               	decf	(dtoa@i+1)^0,f,c
  9204   003940                     
  9205                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  9206   003940  0E64               	movlw	low _dbuf
  9207   003942  2428               	addwf	dtoa@i^0,w,c
  9208   003944  6ED9               	movwf	fsr2l,c
  9209   003946  0E01               	movlw	high _dbuf
  9210   003948  2029               	addwfc	(dtoa@i+1)^0,w,c
  9211   00394A  6EDA               	movwf	fsr2h,c
  9212   00394C  C01E  F001         	movff	dtoa@d,___almod@dividend
  9213   003950  C01F  F002         	movff	dtoa@d+1,___almod@dividend+1
  9214   003954  C020  F003         	movff	dtoa@d+2,___almod@dividend+2
  9215   003958  C021  F004         	movff	dtoa@d+3,___almod@dividend+3
  9216   00395C  0E0A               	movlw	10
  9217   00395E  6E05               	movwf	___almod@divisor^0,c
  9218   003960  0E00               	movlw	0
  9219   003962  6E06               	movwf	(___almod@divisor+1)^0,c
  9220   003964  0E00               	movlw	0
  9221   003966  6E07               	movwf	(___almod@divisor+2)^0,c
  9222   003968  0E00               	movlw	0
  9223   00396A  6E08               	movwf	(___almod@divisor+3)^0,c
  9224   00396C  EC4B  F024         	call	___almod	;wreg free
  9225   003970  C001  F00B         	movff	?___almod,abs@a
  9226   003974  C002  F00C         	movff	?___almod+1,abs@a+1
  9227   003978  ECEA  F02B         	call	_abs	;wreg free
  9228   00397C  500B               	movf	?_abs^0,w,c
  9229   00397E  0F30               	addlw	48
  9230   003980  6EDF               	movwf	indf2,c
  9231   003982                     
  9232                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  9233   003982  0624               	decf	dtoa@p^0,f,c
  9234   003984  A0D8               	btfss	status,0,c
  9235   003986  0625               	decf	(dtoa@p+1)^0,f,c
  9236   003988                     
  9237                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  9238   003988  0626               	decf	dtoa@w^0,f,c
  9239   00398A  A0D8               	btfss	status,0,c
  9240   00398C  0627               	decf	(dtoa@w+1)^0,f,c
  9241   00398E                     
  9242                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  9243   00398E  C01E  F001         	movff	dtoa@d,___aldiv@dividend
  9244   003992  C01F  F002         	movff	dtoa@d+1,___aldiv@dividend+1
  9245   003996  C020  F003         	movff	dtoa@d+2,___aldiv@dividend+2
  9246   00399A  C021  F004         	movff	dtoa@d+3,___aldiv@dividend+3
  9247   00399E  0E0A               	movlw	10
  9248   0039A0  6E05               	movwf	___aldiv@divisor^0,c
  9249   0039A2  0E00               	movlw	0
  9250   0039A4  6E06               	movwf	(___aldiv@divisor+1)^0,c
  9251   0039A6  0E00               	movlw	0
  9252   0039A8  6E07               	movwf	(___aldiv@divisor+2)^0,c
  9253   0039AA  0E00               	movlw	0
  9254   0039AC  6E08               	movwf	(___aldiv@divisor+3)^0,c
  9255   0039AE  EC41  F022         	call	___aldiv	;wreg free
  9256   0039B2  C001  F01E         	movff	?___aldiv,dtoa@d
  9257   0039B6  C002  F01F         	movff	?___aldiv+1,dtoa@d+1
  9258   0039BA  C003  F020         	movff	?___aldiv+2,dtoa@d+2
  9259   0039BE  C004  F021         	movff	?___aldiv+3,dtoa@d+3
  9260   0039C2                     l5578:
  9261                           
  9262                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  9263   0039C2  BE29               	btfsc	(dtoa@i+1)^0,7,c
  9264   0039C4  EFEC  F01C         	goto	u5851
  9265   0039C8  5029               	movf	(dtoa@i+1)^0,w,c
  9266   0039CA  E108               	bnz	u5850
  9267   0039CC  0428               	decf	dtoa@i^0,w,c
  9268   0039CE  A0D8               	btfss	status,0,c
  9269   0039D0  EFEC  F01C         	goto	u5851
  9270   0039D4  EFEE  F01C         	goto	u5850
  9271   0039D8                     u5851:
  9272   0039D8  EF06  F01D         	goto	l5584
  9273   0039DC                     u5850:
  9274   0039DC  501E               	movf	dtoa@d^0,w,c
  9275   0039DE  101F               	iorwf	(dtoa@d+1)^0,w,c
  9276   0039E0  1020               	iorwf	(dtoa@d+2)^0,w,c
  9277   0039E2  1021               	iorwf	(dtoa@d+3)^0,w,c
  9278   0039E4  A4D8               	btfss	status,2,c
  9279   0039E6  EFF7  F01C         	goto	u5861
  9280   0039EA  EFF9  F01C         	goto	u5860
  9281   0039EE                     u5861:
  9282   0039EE  EF9D  F01C         	goto	l5568
  9283   0039F2                     u5860:
  9284   0039F2  BE25               	btfsc	(dtoa@p+1)^0,7,c
  9285   0039F4  EF06  F01D         	goto	u5870
  9286   0039F8  5025               	movf	(dtoa@p+1)^0,w,c
  9287   0039FA  E106               	bnz	u5871
  9288   0039FC  0424               	decf	dtoa@p^0,w,c
  9289   0039FE  B0D8               	btfsc	status,0,c
  9290   003A00  EF04  F01D         	goto	u5871
  9291   003A04  EF06  F01D         	goto	u5870
  9292   003A08                     u5871:
  9293   003A08  EF9D  F01C         	goto	l5568
  9294   003A0C                     u5870:
  9295   003A0C                     l5584:
  9296                           
  9297                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  9298   003A0C  502A               	movf	dtoa@s^0,w,c
  9299   003A0E  B4D8               	btfsc	status,2,c
  9300   003A10  EF0C  F01D         	goto	u5881
  9301   003A14  EF0E  F01D         	goto	u5880
  9302   003A18                     u5881:
  9303   003A18  EF19  F01D         	goto	l5590
  9304   003A1C                     u5880:
  9305   003A1C                     
  9306                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  9307   003A1C  0628               	decf	dtoa@i^0,f,c
  9308   003A1E  A0D8               	btfss	status,0,c
  9309   003A20  0629               	decf	(dtoa@i+1)^0,f,c
  9310   003A22                     
  9311                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  9312   003A22  0E64               	movlw	low _dbuf
  9313   003A24  2428               	addwf	dtoa@i^0,w,c
  9314   003A26  6ED9               	movwf	fsr2l,c
  9315   003A28  0E01               	movlw	high _dbuf
  9316   003A2A  2029               	addwfc	(dtoa@i+1)^0,w,c
  9317   003A2C  6EDA               	movwf	fsr2h,c
  9318   003A2E  C02A  FFDF         	movff	dtoa@s,indf2
  9319   003A32                     l5590:
  9320                           
  9321                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  9322   003A32  C01C  F011         	movff	dtoa@fp,pad@fp
  9323   003A36  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9324   003A3A  0E64               	movlw	low _dbuf
  9325   003A3C  2428               	addwf	dtoa@i^0,w,c
  9326   003A3E  6E13               	movwf	pad@buf^0,c
  9327   003A40  0E01               	movlw	high _dbuf
  9328   003A42  2029               	addwfc	(dtoa@i+1)^0,w,c
  9329   003A44  6E14               	movwf	(pad@buf+1)^0,c
  9330   003A46  C026  F015         	movff	dtoa@w,pad@p
  9331   003A4A  C027  F016         	movff	dtoa@w+1,pad@p+1
  9332   003A4E  ECFD  F028         	call	_pad	;wreg free
  9333   003A52  0012               	return		;funcret
  9334   003A54                     __end_of_dtoa:
  9335                           	callstack 0
  9336                           
  9337 ;; *************** function _pad *****************
  9338 ;; Defined at:
  9339 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  9340 ;; Parameters:    Size  Location     Type
  9341 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9342 ;;		 -> sprintf@f(12), 
  9343 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9344 ;;		 -> dbuf(80), 
  9345 ;;  p               2   20[COMRAM] int 
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;  w               2   25[COMRAM] int 
  9348 ;;  i               2   23[COMRAM] int 
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  1    wreg      void 
  9351 ;; Registers used:
  9352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9358 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9359 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9361 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;Total ram usage:       11 bytes
  9363 ;; Hardware stack levels used: 1
  9364 ;; Hardware stack levels required when called: 3
  9365 ;; This function calls:
  9366 ;;		_fputc
  9367 ;;		_fputs
  9368 ;; This function is called by:
  9369 ;;		_dtoa
  9370 ;;		_efgtoa
  9371 ;;		_utoa
  9372 ;; This function uses a non-reentrant model
  9373 ;;
  9374                           
  9375                           	psect	text34
  9376   0051FA                     __ptext34:
  9377                           	callstack 0
  9378   0051FA                     _pad:
  9379                           	callstack 23
  9380   0051FA                     
  9381                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  9382   0051FA  BE16               	btfsc	(pad@p+1)^0,7,c
  9383   0051FC  EF02  F029         	goto	u5491
  9384   005200  EF04  F029         	goto	u5490
  9385   005204                     u5491:
  9386   005204  EF0A  F029         	goto	l5420
  9387   005208                     u5490:
  9388   005208  C015  F01A         	movff	pad@p,pad@w
  9389   00520C  C016  F01B         	movff	pad@p+1,pad@w+1
  9390   005210  EF0E  F029         	goto	l1341
  9391   005214                     l5420:
  9392   005214  0E00               	movlw	0
  9393   005216  6E1B               	movwf	(pad@w+1)^0,c
  9394   005218  0E00               	movlw	0
  9395   00521A  6E1A               	movwf	pad@w^0,c
  9396   00521C                     l1341:
  9397                           
  9398                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  9399   00521C  0E00               	movlw	0
  9400   00521E  6E19               	movwf	(pad@i+1)^0,c
  9401   005220  0E00               	movlw	0
  9402   005222  6E18               	movwf	pad@i^0,c
  9403                           
  9404                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  9405   005224  EF20  F029         	goto	l5426
  9406   005228                     l5422:
  9407                           
  9408                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  9409   005228  0E00               	movlw	0
  9410   00522A  6E02               	movwf	(fputc@c+1)^0,c
  9411   00522C  0E20               	movlw	32
  9412   00522E  6E01               	movwf	fputc@c^0,c
  9413   005230  C011  F003         	movff	pad@fp,fputc@fp
  9414   005234  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9415   005238  ECC1  F024         	call	_fputc	;wreg free
  9416   00523C                     
  9417                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  9418   00523C  4A18               	infsnz	pad@i^0,f,c
  9419   00523E  2A19               	incf	(pad@i+1)^0,f,c
  9420   005240                     l5426:
  9421                           
  9422                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  9423   005240  501A               	movf	pad@w^0,w,c
  9424   005242  5C18               	subwf	pad@i^0,w,c
  9425   005244  5019               	movf	(pad@i+1)^0,w,c
  9426   005246  0A80               	xorlw	128
  9427   005248  6E17               	movwf	??_pad^0,c
  9428   00524A  501B               	movf	(pad@w+1)^0,w,c
  9429   00524C  0A80               	xorlw	128
  9430   00524E  5817               	subwfb	??_pad^0,w,c
  9431   005250  A0D8               	btfss	status,0,c
  9432   005252  EF2D  F029         	goto	u5501
  9433   005256  EF2F  F029         	goto	u5500
  9434   00525A                     u5501:
  9435   00525A  EF14  F029         	goto	l5422
  9436   00525E                     u5500:
  9437   00525E                     
  9438                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  9439   00525E  C013  F00A         	movff	pad@buf,fputs@s
  9440   005262  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9441   005266  C011  F00C         	movff	pad@fp,fputs@fp
  9442   00526A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9443   00526E  EC65  F02B         	call	_fputs	;wreg free
  9444   005272  0012               	return		;funcret
  9445   005274                     __end_of_pad:
  9446                           	callstack 0
  9447                           
  9448 ;; *************** function _fputs *****************
  9449 ;; Defined at:
  9450 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9453 ;;		 -> dbuf(80), 
  9454 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9455 ;;		 -> sprintf@f(12), 
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;  i               2   14[COMRAM] int 
  9458 ;;  c               1   13[COMRAM] unsigned char 
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  2    9[COMRAM] int 
  9461 ;; Registers used:
  9462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9468 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9469 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9472 ;;Total ram usage:        7 bytes
  9473 ;; Hardware stack levels used: 1
  9474 ;; Hardware stack levels required when called: 2
  9475 ;; This function calls:
  9476 ;;		_fputc
  9477 ;; This function is called by:
  9478 ;;		_pad
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           	psect	text35
  9483   0056CA                     __ptext35:
  9484                           	callstack 0
  9485   0056CA                     _fputs:
  9486                           	callstack 23
  9487   0056CA  0E00               	movlw	0
  9488   0056CC  6E10               	movwf	(fputs@i+1)^0,c
  9489   0056CE  0E00               	movlw	0
  9490   0056D0  6E0F               	movwf	fputs@i^0,c
  9491   0056D2  EF76  F02B         	goto	l4896
  9492   0056D6                     l4892:
  9493   0056D6  C00E  F001         	movff	fputs@c,fputc@c
  9494   0056DA  6A02               	clrf	(fputc@c+1)^0,c
  9495   0056DC  C00C  F003         	movff	fputs@fp,fputc@fp
  9496   0056E0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9497   0056E4  ECC1  F024         	call	_fputc	;wreg free
  9498   0056E8  4A0F               	infsnz	fputs@i^0,f,c
  9499   0056EA  2A10               	incf	(fputs@i+1)^0,f,c
  9500   0056EC                     l4896:
  9501   0056EC  500F               	movf	fputs@i^0,w,c
  9502   0056EE  240A               	addwf	fputs@s^0,w,c
  9503   0056F0  6ED9               	movwf	fsr2l,c
  9504   0056F2  5010               	movf	(fputs@i+1)^0,w,c
  9505   0056F4  200B               	addwfc	(fputs@s+1)^0,w,c
  9506   0056F6  6EDA               	movwf	fsr2h,c
  9507   0056F8  50DF               	movf	indf2,w,c
  9508   0056FA  6E0E               	movwf	fputs@c^0,c
  9509   0056FC  500E               	movf	fputs@c^0,w,c
  9510   0056FE  A4D8               	btfss	status,2,c
  9511   005700  EF84  F02B         	goto	u4671
  9512   005704  EF86  F02B         	goto	u4670
  9513   005708                     u4671:
  9514   005708  EF6B  F02B         	goto	l4892
  9515   00570C                     u4670:
  9516   00570C  0012               	return		;funcret
  9517   00570E                     __end_of_fputs:
  9518                           	callstack 0
  9519                           
  9520 ;; *************** function _fputc *****************
  9521 ;; Defined at:
  9522 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;  c               2    0[COMRAM] int 
  9525 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9526 ;;		 -> sprintf@f(12), 
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;		None
  9529 ;; Return value:  Size  Location     Type
  9530 ;;                  2    0[COMRAM] int 
  9531 ;; Registers used:
  9532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9533 ;; Tracked objects:
  9534 ;;		On entry : 0/0
  9535 ;;		On exit  : 0/0
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9538 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9540 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9541 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9542 ;;Total ram usage:        9 bytes
  9543 ;; Hardware stack levels used: 1
  9544 ;; Hardware stack levels required when called: 1
  9545 ;; This function calls:
  9546 ;;		_putch
  9547 ;; This function is called by:
  9548 ;;		_pad
  9549 ;;		_vfpfcnvrt
  9550 ;;		_fputs
  9551 ;; This function uses a non-reentrant model
  9552 ;;
  9553                           
  9554                           	psect	text36
  9555   004982                     __ptext36:
  9556                           	callstack 0
  9557   004982                     _fputc:
  9558                           	callstack 23
  9559   004982  5003               	movf	fputc@fp^0,w,c
  9560   004984  1004               	iorwf	(fputc@fp+1)^0,w,c
  9561   004986  B4D8               	btfsc	status,2,c
  9562   004988  EFC8  F024         	goto	u4191
  9563   00498C  EFCA  F024         	goto	u4190
  9564   004990                     u4191:
  9565   004990  EFD3  F024         	goto	l4652
  9566   004994                     u4190:
  9567   004994  5003               	movf	fputc@fp^0,w,c
  9568   004996  1004               	iorwf	(fputc@fp+1)^0,w,c
  9569   004998  A4D8               	btfss	status,2,c
  9570   00499A  EFD1  F024         	goto	u4201
  9571   00499E  EFD3  F024         	goto	u4200
  9572   0049A2                     u4201:
  9573   0049A2  EFD8  F024         	goto	l4654
  9574   0049A6                     u4200:
  9575   0049A6                     l4652:
  9576   0049A6  5001               	movf	fputc@c^0,w,c
  9577   0049A8  ECE5  F02C         	call	_putch
  9578   0049AC  EF25  F025         	goto	l1543
  9579   0049B0                     l4654:
  9580   0049B0  EE20 F00A          	lfsr	2,10
  9581   0049B4  5003               	movf	fputc@fp^0,w,c
  9582   0049B6  26D9               	addwf	fsr2l,f,c
  9583   0049B8  5004               	movf	(fputc@fp+1)^0,w,c
  9584   0049BA  22DA               	addwfc	fsr2h,f,c
  9585   0049BC  50DE               	movf	postinc2,w,c
  9586   0049BE  10DE               	iorwf	postinc2,w,c
  9587   0049C0  B4D8               	btfsc	status,2,c
  9588   0049C2  EFE5  F024         	goto	u4211
  9589   0049C6  EFE7  F024         	goto	u4210
  9590   0049CA                     u4211:
  9591   0049CA  EF02  F025         	goto	l4658
  9592   0049CE                     u4210:
  9593   0049CE  EE20 F00A          	lfsr	2,10
  9594   0049D2  5003               	movf	fputc@fp^0,w,c
  9595   0049D4  26D9               	addwf	fsr2l,f,c
  9596   0049D6  5004               	movf	(fputc@fp+1)^0,w,c
  9597   0049D8  22DA               	addwfc	fsr2h,f,c
  9598   0049DA  EE10 F003          	lfsr	1,3
  9599   0049DE  5003               	movf	fputc@fp^0,w,c
  9600   0049E0  26E1               	addwf	fsr1l,f,c
  9601   0049E2  5004               	movf	(fputc@fp+1)^0,w,c
  9602   0049E4  22E2               	addwfc	fsr1h,f,c
  9603   0049E6  50DE               	movf	postinc2,w,c
  9604   0049E8  5CE6               	subwf	postinc1,w,c
  9605   0049EA  50E6               	movf	postinc1,w,c
  9606   0049EC  0A80               	xorlw	128
  9607   0049EE  6E09               	movwf	(??_fputc+4)^0,c
  9608   0049F0  50DE               	movf	postinc2,w,c
  9609   0049F2  0A80               	xorlw	128
  9610   0049F4  5809               	subwfb	(??_fputc+4)^0,w,c
  9611   0049F6  B0D8               	btfsc	status,0,c
  9612   0049F8  EF00  F025         	goto	u4221
  9613   0049FC  EF02  F025         	goto	u4220
  9614   004A00                     u4221:
  9615   004A00  EF25  F025         	goto	l1543
  9616   004A04                     u4220:
  9617   004A04                     l4658:
  9618   004A04  EE20 F003          	lfsr	2,3
  9619   004A08  5003               	movf	fputc@fp^0,w,c
  9620   004A0A  26D9               	addwf	fsr2l,f,c
  9621   004A0C  5004               	movf	(fputc@fp+1)^0,w,c
  9622   004A0E  22DA               	addwfc	fsr2h,f,c
  9623   004A10  CFDE F005          	movff	postinc2,??_fputc
  9624   004A14  CFDD F006          	movff	postdec2,??_fputc+1
  9625   004A18  C003  FFD9         	movff	fputc@fp,fsr2l
  9626   004A1C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9627   004A20  CFDE F007          	movff	postinc2,??_fputc+2
  9628   004A24  CFDD F008          	movff	postdec2,??_fputc+3
  9629   004A28  5005               	movf	??_fputc^0,w,c
  9630   004A2A  2407               	addwf	(??_fputc+2)^0,w,c
  9631   004A2C  6ED9               	movwf	fsr2l,c
  9632   004A2E  5006               	movf	(??_fputc+1)^0,w,c
  9633   004A30  2008               	addwfc	(??_fputc+3)^0,w,c
  9634   004A32  6EDA               	movwf	fsr2h,c
  9635   004A34  C001  FFDF         	movff	fputc@c,indf2
  9636   004A38  EE20 F003          	lfsr	2,3
  9637   004A3C  5003               	movf	fputc@fp^0,w,c
  9638   004A3E  26D9               	addwf	fsr2l,f,c
  9639   004A40  5004               	movf	(fputc@fp+1)^0,w,c
  9640   004A42  22DA               	addwfc	fsr2h,f,c
  9641   004A44  2ADE               	incf	postinc2,f,c
  9642   004A46  0E00               	movlw	0
  9643   004A48  22DD               	addwfc	postdec2,f,c
  9644   004A4A                     l1543:
  9645   004A4A  0012               	return		;funcret
  9646   004A4C                     __end_of_fputc:
  9647                           	callstack 0
  9648                           
  9649 ;; *************** function _putch *****************
  9650 ;; Defined at:
  9651 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  c               1    wreg     unsigned char 
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;  c               1    0[COMRAM] unsigned char 
  9656 ;; Return value:  Size  Location     Type
  9657 ;;                  1    wreg      void 
  9658 ;; Registers used:
  9659 ;;		wreg
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9669 ;;Total ram usage:        0 bytes
  9670 ;; Hardware stack levels used: 1
  9671 ;; This function calls:
  9672 ;;		Nothing
  9673 ;; This function is called by:
  9674 ;;		_fputc
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           	psect	text37
  9679   0059CA                     __ptext37:
  9680                           	callstack 0
  9681   0059CA                     _putch:
  9682                           	callstack 23
  9683   0059CA  0012               	return		;funcret
  9684   0059CC                     __end_of_putch:
  9685                           	callstack 0
  9686                           
  9687 ;; *************** function _abs *****************
  9688 ;; Defined at:
  9689 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  9690 ;; Parameters:    Size  Location     Type
  9691 ;;  a               2   10[COMRAM] int 
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;		None
  9694 ;; Return value:  Size  Location     Type
  9695 ;;                  2   10[COMRAM] int 
  9696 ;; Registers used:
  9697 ;;		wreg, status,2, status,0
  9698 ;; Tracked objects:
  9699 ;;		On entry : 0/0
  9700 ;;		On exit  : 0/0
  9701 ;;		Unchanged: 0/0
  9702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9706 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9707 ;;Total ram usage:        4 bytes
  9708 ;; Hardware stack levels used: 1
  9709 ;; This function calls:
  9710 ;;		Nothing
  9711 ;; This function is called by:
  9712 ;;		_dtoa
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           	psect	text38
  9717   0057D4                     __ptext38:
  9718                           	callstack 0
  9719   0057D4                     _abs:
  9720                           	callstack 26
  9721   0057D4  BE0C               	btfsc	(abs@a+1)^0,7,c
  9722   0057D6  EFF7  F02B         	goto	u5510
  9723   0057DA  500C               	movf	(abs@a+1)^0,w,c
  9724   0057DC  E106               	bnz	u5511
  9725   0057DE  040B               	decf	abs@a^0,w,c
  9726   0057E0  B0D8               	btfsc	status,0,c
  9727   0057E2  EFF5  F02B         	goto	u5511
  9728   0057E6  EFF7  F02B         	goto	u5510
  9729   0057EA                     u5511:
  9730   0057EA  EF05  F02C         	goto	l1502
  9731   0057EE                     u5510:
  9732   0057EE  C00B  F00D         	movff	abs@a,??_abs
  9733   0057F2  C00C  F00E         	movff	abs@a+1,??_abs+1
  9734   0057F6  1E0D               	comf	??_abs^0,f,c
  9735   0057F8  1E0E               	comf	(??_abs+1)^0,f,c
  9736   0057FA  4A0D               	infsnz	??_abs^0,f,c
  9737   0057FC  2A0E               	incf	(??_abs+1)^0,f,c
  9738   0057FE  C00D  F00B         	movff	??_abs,?_abs
  9739   005802  C00E  F00C         	movff	??_abs+1,?_abs+1
  9740   005806  EF09  F02C         	goto	l1505
  9741   00580A                     l1502:
  9742   00580A  C00B  F00B         	movff	abs@a,?_abs
  9743   00580E  C00C  F00C         	movff	abs@a+1,?_abs+1
  9744   005812                     l1505:
  9745   005812  0012               	return		;funcret
  9746   005814                     __end_of_abs:
  9747                           	callstack 0
  9748                           
  9749 ;; *************** function ___almod *****************
  9750 ;; Defined at:
  9751 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\almod.c"
  9752 ;; Parameters:    Size  Location     Type
  9753 ;;  dividend        4    0[COMRAM] long 
  9754 ;;  divisor         4    4[COMRAM] long 
  9755 ;; Auto vars:     Size  Location     Type
  9756 ;;  sign            1    9[COMRAM] unsigned char 
  9757 ;;  counter         1    8[COMRAM] unsigned char 
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  4    0[COMRAM] long 
  9760 ;; Registers used:
  9761 ;;		wreg, status,2, status,0
  9762 ;; Tracked objects:
  9763 ;;		On entry : 0/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9767 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9770 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9771 ;;Total ram usage:       10 bytes
  9772 ;; Hardware stack levels used: 1
  9773 ;; This function calls:
  9774 ;;		Nothing
  9775 ;; This function is called by:
  9776 ;;		_dtoa
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           	psect	text39
  9781   004896                     __ptext39:
  9782                           	callstack 0
  9783   004896                     ___almod:
  9784                           	callstack 26
  9785   004896  0E00               	movlw	0
  9786   004898  6E0A               	movwf	___almod@sign^0,c
  9787   00489A  BE04               	btfsc	(___almod@dividend+3)^0,7,c
  9788   00489C  EF54  F024         	goto	u4820
  9789   0048A0  EF52  F024         	goto	u4821
  9790   0048A4                     u4821:
  9791   0048A4  EF5E  F024         	goto	l5008
  9792   0048A8                     u4820:
  9793   0048A8  1E04               	comf	(___almod@dividend+3)^0,f,c
  9794   0048AA  1E03               	comf	(___almod@dividend+2)^0,f,c
  9795   0048AC  1E02               	comf	(___almod@dividend+1)^0,f,c
  9796   0048AE  6C01               	negf	___almod@dividend^0,c
  9797   0048B0  0E00               	movlw	0
  9798   0048B2  2202               	addwfc	(___almod@dividend+1)^0,f,c
  9799   0048B4  2203               	addwfc	(___almod@dividend+2)^0,f,c
  9800   0048B6  2204               	addwfc	(___almod@dividend+3)^0,f,c
  9801   0048B8  0E01               	movlw	1
  9802   0048BA  6E0A               	movwf	___almod@sign^0,c
  9803   0048BC                     l5008:
  9804   0048BC  BE08               	btfsc	(___almod@divisor+3)^0,7,c
  9805   0048BE  EF65  F024         	goto	u4830
  9806   0048C2  EF63  F024         	goto	u4831
  9807   0048C6                     u4831:
  9808   0048C6  EF6D  F024         	goto	l5012
  9809   0048CA                     u4830:
  9810   0048CA  1E08               	comf	(___almod@divisor+3)^0,f,c
  9811   0048CC  1E07               	comf	(___almod@divisor+2)^0,f,c
  9812   0048CE  1E06               	comf	(___almod@divisor+1)^0,f,c
  9813   0048D0  6C05               	negf	___almod@divisor^0,c
  9814   0048D2  0E00               	movlw	0
  9815   0048D4  2206               	addwfc	(___almod@divisor+1)^0,f,c
  9816   0048D6  2207               	addwfc	(___almod@divisor+2)^0,f,c
  9817   0048D8  2208               	addwfc	(___almod@divisor+3)^0,f,c
  9818   0048DA                     l5012:
  9819   0048DA  5005               	movf	___almod@divisor^0,w,c
  9820   0048DC  1006               	iorwf	(___almod@divisor+1)^0,w,c
  9821   0048DE  1007               	iorwf	(___almod@divisor+2)^0,w,c
  9822   0048E0  1008               	iorwf	(___almod@divisor+3)^0,w,c
  9823   0048E2  B4D8               	btfsc	status,2,c
  9824   0048E4  EF76  F024         	goto	u4841
  9825   0048E8  EF78  F024         	goto	u4840
  9826   0048EC                     u4841:
  9827   0048EC  EFA8  F024         	goto	l5028
  9828   0048F0                     u4840:
  9829   0048F0  0E01               	movlw	1
  9830   0048F2  6E09               	movwf	___almod@counter^0,c
  9831   0048F4  EF82  F024         	goto	l5018
  9832   0048F8                     l5016:
  9833   0048F8  90D8               	bcf	status,0,c
  9834   0048FA  3605               	rlcf	___almod@divisor^0,f,c
  9835   0048FC  3606               	rlcf	(___almod@divisor+1)^0,f,c
  9836   0048FE  3607               	rlcf	(___almod@divisor+2)^0,f,c
  9837   004900  3608               	rlcf	(___almod@divisor+3)^0,f,c
  9838   004902  2A09               	incf	___almod@counter^0,f,c
  9839   004904                     l5018:
  9840   004904  AE08               	btfss	(___almod@divisor+3)^0,7,c
  9841   004906  EF87  F024         	goto	u4851
  9842   00490A  EF89  F024         	goto	u4850
  9843   00490E                     u4851:
  9844   00490E  EF7C  F024         	goto	l5016
  9845   004912                     u4850:
  9846   004912                     l5020:
  9847   004912  5005               	movf	___almod@divisor^0,w,c
  9848   004914  5C01               	subwf	___almod@dividend^0,w,c
  9849   004916  5006               	movf	(___almod@divisor+1)^0,w,c
  9850   004918  5802               	subwfb	(___almod@dividend+1)^0,w,c
  9851   00491A  5007               	movf	(___almod@divisor+2)^0,w,c
  9852   00491C  5803               	subwfb	(___almod@dividend+2)^0,w,c
  9853   00491E  5008               	movf	(___almod@divisor+3)^0,w,c
  9854   004920  5804               	subwfb	(___almod@dividend+3)^0,w,c
  9855   004922  A0D8               	btfss	status,0,c
  9856   004924  EF96  F024         	goto	u4861
  9857   004928  EF98  F024         	goto	u4860
  9858   00492C                     u4861:
  9859   00492C  EFA0  F024         	goto	l5024
  9860   004930                     u4860:
  9861   004930  5005               	movf	___almod@divisor^0,w,c
  9862   004932  5E01               	subwf	___almod@dividend^0,f,c
  9863   004934  5006               	movf	(___almod@divisor+1)^0,w,c
  9864   004936  5A02               	subwfb	(___almod@dividend+1)^0,f,c
  9865   004938  5007               	movf	(___almod@divisor+2)^0,w,c
  9866   00493A  5A03               	subwfb	(___almod@dividend+2)^0,f,c
  9867   00493C  5008               	movf	(___almod@divisor+3)^0,w,c
  9868   00493E  5A04               	subwfb	(___almod@dividend+3)^0,f,c
  9869   004940                     l5024:
  9870   004940  90D8               	bcf	status,0,c
  9871   004942  3208               	rrcf	(___almod@divisor+3)^0,f,c
  9872   004944  3207               	rrcf	(___almod@divisor+2)^0,f,c
  9873   004946  3206               	rrcf	(___almod@divisor+1)^0,f,c
  9874   004948  3205               	rrcf	___almod@divisor^0,f,c
  9875   00494A  2E09               	decfsz	___almod@counter^0,f,c
  9876   00494C  EF89  F024         	goto	l5020
  9877   004950                     l5028:
  9878   004950  500A               	movf	___almod@sign^0,w,c
  9879   004952  B4D8               	btfsc	status,2,c
  9880   004954  EFAE  F024         	goto	u4871
  9881   004958  EFB0  F024         	goto	u4870
  9882   00495C                     u4871:
  9883   00495C  EFB8  F024         	goto	l5032
  9884   004960                     u4870:
  9885   004960  1E04               	comf	(___almod@dividend+3)^0,f,c
  9886   004962  1E03               	comf	(___almod@dividend+2)^0,f,c
  9887   004964  1E02               	comf	(___almod@dividend+1)^0,f,c
  9888   004966  6C01               	negf	___almod@dividend^0,c
  9889   004968  0E00               	movlw	0
  9890   00496A  2202               	addwfc	(___almod@dividend+1)^0,f,c
  9891   00496C  2203               	addwfc	(___almod@dividend+2)^0,f,c
  9892   00496E  2204               	addwfc	(___almod@dividend+3)^0,f,c
  9893   004970                     l5032:
  9894   004970  C001  F001         	movff	___almod@dividend,?___almod
  9895   004974  C002  F002         	movff	___almod@dividend+1,?___almod+1
  9896   004978  C003  F003         	movff	___almod@dividend+2,?___almod+2
  9897   00497C  C004  F004         	movff	___almod@dividend+3,?___almod+3
  9898   004980  0012               	return		;funcret
  9899   004982                     __end_of___almod:
  9900                           	callstack 0
  9901                           
  9902 ;; *************** function ___aldiv *****************
  9903 ;; Defined at:
  9904 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\aldiv.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  dividend        4    0[COMRAM] long 
  9907 ;;  divisor         4    4[COMRAM] long 
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;  quotient        4   10[COMRAM] long 
  9910 ;;  sign            1    9[COMRAM] unsigned char 
  9911 ;;  counter         1    8[COMRAM] unsigned char 
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  4    0[COMRAM] long 
  9914 ;; Registers used:
  9915 ;;		wreg, status,2, status,0
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9921 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9922 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9924 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9925 ;;Total ram usage:       14 bytes
  9926 ;; Hardware stack levels used: 1
  9927 ;; This function calls:
  9928 ;;		Nothing
  9929 ;; This function is called by:
  9930 ;;		_dtoa
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934                           	psect	text40
  9935   004482                     __ptext40:
  9936                           	callstack 0
  9937   004482                     ___aldiv:
  9938                           	callstack 26
  9939   004482  0E00               	movlw	0
  9940   004484  6E0A               	movwf	___aldiv@sign^0,c
  9941   004486  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  9942   004488  EF4A  F022         	goto	u4760
  9943   00448C  EF48  F022         	goto	u4761
  9944   004490                     u4761:
  9945   004490  EF54  F022         	goto	l4964
  9946   004494                     u4760:
  9947   004494  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  9948   004496  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  9949   004498  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  9950   00449A  6C05               	negf	___aldiv@divisor^0,c
  9951   00449C  0E00               	movlw	0
  9952   00449E  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  9953   0044A0  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  9954   0044A2  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  9955   0044A4  0E01               	movlw	1
  9956   0044A6  6E0A               	movwf	___aldiv@sign^0,c
  9957   0044A8                     l4964:
  9958   0044A8  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  9959   0044AA  EF5B  F022         	goto	u4770
  9960   0044AE  EF59  F022         	goto	u4771
  9961   0044B2                     u4771:
  9962   0044B2  EF65  F022         	goto	l4970
  9963   0044B6                     u4770:
  9964   0044B6  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  9965   0044B8  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  9966   0044BA  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  9967   0044BC  6C01               	negf	___aldiv@dividend^0,c
  9968   0044BE  0E00               	movlw	0
  9969   0044C0  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  9970   0044C2  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  9971   0044C4  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  9972   0044C6  0E01               	movlw	1
  9973   0044C8  1A0A               	xorwf	___aldiv@sign^0,f,c
  9974   0044CA                     l4970:
  9975   0044CA  0E00               	movlw	0
  9976   0044CC  6E0B               	movwf	___aldiv@quotient^0,c
  9977   0044CE  0E00               	movlw	0
  9978   0044D0  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  9979   0044D2  0E00               	movlw	0
  9980   0044D4  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  9981   0044D6  0E00               	movlw	0
  9982   0044D8  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  9983   0044DA  5005               	movf	___aldiv@divisor^0,w,c
  9984   0044DC  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  9985   0044DE  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  9986   0044E0  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  9987   0044E2  B4D8               	btfsc	status,2,c
  9988   0044E4  EF76  F022         	goto	u4781
  9989   0044E8  EF78  F022         	goto	u4780
  9990   0044EC                     u4781:
  9991   0044EC  EFAE  F022         	goto	l4992
  9992   0044F0                     u4780:
  9993   0044F0  0E01               	movlw	1
  9994   0044F2  6E09               	movwf	___aldiv@counter^0,c
  9995   0044F4  EF82  F022         	goto	l4978
  9996   0044F8                     l4976:
  9997   0044F8  90D8               	bcf	status,0,c
  9998   0044FA  3605               	rlcf	___aldiv@divisor^0,f,c
  9999   0044FC  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
 10000   0044FE  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
 10001   004500  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
 10002   004502  2A09               	incf	___aldiv@counter^0,f,c
 10003   004504                     l4978:
 10004   004504  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
 10005   004506  EF87  F022         	goto	u4791
 10006   00450A  EF89  F022         	goto	u4790
 10007   00450E                     u4791:
 10008   00450E  EF7C  F022         	goto	l4976
 10009   004512                     u4790:
 10010   004512                     l4980:
 10011   004512  90D8               	bcf	status,0,c
 10012   004514  360B               	rlcf	___aldiv@quotient^0,f,c
 10013   004516  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
 10014   004518  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
 10015   00451A  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
 10016   00451C  5005               	movf	___aldiv@divisor^0,w,c
 10017   00451E  5C01               	subwf	___aldiv@dividend^0,w,c
 10018   004520  5006               	movf	(___aldiv@divisor+1)^0,w,c
 10019   004522  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
 10020   004524  5007               	movf	(___aldiv@divisor+2)^0,w,c
 10021   004526  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
 10022   004528  5008               	movf	(___aldiv@divisor+3)^0,w,c
 10023   00452A  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
 10024   00452C  A0D8               	btfss	status,0,c
 10025   00452E  EF9B  F022         	goto	u4801
 10026   004532  EF9D  F022         	goto	u4800
 10027   004536                     u4801:
 10028   004536  EFA6  F022         	goto	l4988
 10029   00453A                     u4800:
 10030   00453A  5005               	movf	___aldiv@divisor^0,w,c
 10031   00453C  5E01               	subwf	___aldiv@dividend^0,f,c
 10032   00453E  5006               	movf	(___aldiv@divisor+1)^0,w,c
 10033   004540  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
 10034   004542  5007               	movf	(___aldiv@divisor+2)^0,w,c
 10035   004544  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
 10036   004546  5008               	movf	(___aldiv@divisor+3)^0,w,c
 10037   004548  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
 10038   00454A  800B               	bsf	___aldiv@quotient^0,0,c
 10039   00454C                     l4988:
 10040   00454C  90D8               	bcf	status,0,c
 10041   00454E  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
 10042   004550  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
 10043   004552  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
 10044   004554  3205               	rrcf	___aldiv@divisor^0,f,c
 10045   004556  2E09               	decfsz	___aldiv@counter^0,f,c
 10046   004558  EF89  F022         	goto	l4980
 10047   00455C                     l4992:
 10048   00455C  500A               	movf	___aldiv@sign^0,w,c
 10049   00455E  B4D8               	btfsc	status,2,c
 10050   004560  EFB4  F022         	goto	u4811
 10051   004564  EFB6  F022         	goto	u4810
 10052   004568                     u4811:
 10053   004568  EFBE  F022         	goto	l4996
 10054   00456C                     u4810:
 10055   00456C  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
 10056   00456E  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
 10057   004570  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
 10058   004572  6C0B               	negf	___aldiv@quotient^0,c
 10059   004574  0E00               	movlw	0
 10060   004576  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
 10061   004578  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
 10062   00457A  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
 10063   00457C                     l4996:
 10064   00457C  C00B  F001         	movff	___aldiv@quotient,?___aldiv
 10065   004580  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
 10066   004584  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
 10067   004588  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
 10068   00458C  0012               	return		;funcret
 10069   00458E                     __end_of___aldiv:
 10070                           	callstack 0
 10071                           
 10072 ;; *************** function _memset *****************
 10073 ;; Defined at:
 10074 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;  dest            2    0[COMRAM] PTR void 
 10077 ;;		 -> result_str(20), number_str(11), string(100), 
 10078 ;;  c               2    2[COMRAM] int 
 10079 ;;  n               2    4[COMRAM] unsigned int 
 10080 ;; Auto vars:     Size  Location     Type
 10081 ;;  s               2   10[COMRAM] PTR unsigned char 
 10082 ;;		 -> result_str(20), number_str(11), string(100), 
 10083 ;;  k               2    8[COMRAM] unsigned int 
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  2    0[COMRAM] PTR void 
 10086 ;; Registers used:
 10087 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 0/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10093 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10094 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10095 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10096 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10097 ;;Total ram usage:       12 bytes
 10098 ;; Hardware stack levels used: 1
 10099 ;; This function calls:
 10100 ;;		Nothing
 10101 ;; This function is called by:
 10102 ;;		_main
 10103 ;;		_convert_byte_to_str
 10104 ;;		_convert_short_to_str
 10105 ;;		_convert_int_to_str
 10106 ;; This function uses a non-reentrant model
 10107 ;;
 10108                           
 10109                           	psect	text41
 10110   003F3C                     __ptext41:
 10111                           	callstack 0
 10112   003F3C                     _memset:
 10113                           	callstack 30
 10114   003F3C  C001  F00B         	movff	memset@dest,memset@s
 10115   003F40  C002  F00C         	movff	memset@dest+1,memset@s+1
 10116   003F44  5005               	movf	memset@n^0,w,c
 10117   003F46  1006               	iorwf	(memset@n+1)^0,w,c
 10118   003F48  A4D8               	btfss	status,2,c
 10119   003F4A  EFA9  F01F         	goto	u7221
 10120   003F4E  EFAB  F01F         	goto	u7220
 10121   003F52                     u7221:
 10122   003F52  EFAD  F01F         	goto	l6578
 10123   003F56                     u7220:
 10124   003F56  EF58  F020         	goto	l1296
 10125   003F5A                     l6578:
 10126   003F5A  C00B  FFD9         	movff	memset@s,fsr2l
 10127   003F5E  C00C  FFDA         	movff	memset@s+1,fsr2h
 10128   003F62  C003  FFDF         	movff	memset@c,indf2
 10129   003F66  5005               	movf	memset@n^0,w,c
 10130   003F68  240B               	addwf	memset@s^0,w,c
 10131   003F6A  6E07               	movwf	??_memset^0,c
 10132   003F6C  5006               	movf	(memset@n+1)^0,w,c
 10133   003F6E  200C               	addwfc	(memset@s+1)^0,w,c
 10134   003F70  6E08               	movwf	(??_memset+1)^0,c
 10135   003F72  0EFF               	movlw	255
 10136   003F74  2407               	addwf	??_memset^0,w,c
 10137   003F76  6ED9               	movwf	fsr2l,c
 10138   003F78  0EFF               	movlw	255
 10139   003F7A  2008               	addwfc	(??_memset+1)^0,w,c
 10140   003F7C  6EDA               	movwf	fsr2h,c
 10141   003F7E  C003  FFDF         	movff	memset@c,indf2
 10142   003F82  5006               	movf	(memset@n+1)^0,w,c
 10143   003F84  E107               	bnz	u7231
 10144   003F86  0E03               	movlw	3
 10145   003F88  5C05               	subwf	memset@n^0,w,c
 10146   003F8A  B0D8               	btfsc	status,0,c
 10147   003F8C  EFCA  F01F         	goto	u7231
 10148   003F90  EFCC  F01F         	goto	u7230
 10149   003F94                     u7231:
 10150   003F94  EFCE  F01F         	goto	l6584
 10151   003F98                     u7230:
 10152   003F98  EF58  F020         	goto	l1296
 10153   003F9C                     l6584:
 10154   003F9C  EE20 F001          	lfsr	2,1
 10155   003FA0  500B               	movf	memset@s^0,w,c
 10156   003FA2  26D9               	addwf	fsr2l,f,c
 10157   003FA4  500C               	movf	(memset@s+1)^0,w,c
 10158   003FA6  22DA               	addwfc	fsr2h,f,c
 10159   003FA8  C003  FFDF         	movff	memset@c,indf2
 10160   003FAC  EE20 F002          	lfsr	2,2
 10161   003FB0  500B               	movf	memset@s^0,w,c
 10162   003FB2  26D9               	addwf	fsr2l,f,c
 10163   003FB4  500C               	movf	(memset@s+1)^0,w,c
 10164   003FB6  22DA               	addwfc	fsr2h,f,c
 10165   003FB8  C003  FFDF         	movff	memset@c,indf2
 10166   003FBC  5005               	movf	memset@n^0,w,c
 10167   003FBE  240B               	addwf	memset@s^0,w,c
 10168   003FC0  6E07               	movwf	??_memset^0,c
 10169   003FC2  5006               	movf	(memset@n+1)^0,w,c
 10170   003FC4  200C               	addwfc	(memset@s+1)^0,w,c
 10171   003FC6  6E08               	movwf	(??_memset+1)^0,c
 10172   003FC8  0EFE               	movlw	254
 10173   003FCA  2407               	addwf	??_memset^0,w,c
 10174   003FCC  6ED9               	movwf	fsr2l,c
 10175   003FCE  0EFF               	movlw	255
 10176   003FD0  2008               	addwfc	(??_memset+1)^0,w,c
 10177   003FD2  6EDA               	movwf	fsr2h,c
 10178   003FD4  C003  FFDF         	movff	memset@c,indf2
 10179   003FD8  5005               	movf	memset@n^0,w,c
 10180   003FDA  240B               	addwf	memset@s^0,w,c
 10181   003FDC  6E07               	movwf	??_memset^0,c
 10182   003FDE  5006               	movf	(memset@n+1)^0,w,c
 10183   003FE0  200C               	addwfc	(memset@s+1)^0,w,c
 10184   003FE2  6E08               	movwf	(??_memset+1)^0,c
 10185   003FE4  0EFD               	movlw	253
 10186   003FE6  2407               	addwf	??_memset^0,w,c
 10187   003FE8  6ED9               	movwf	fsr2l,c
 10188   003FEA  0EFF               	movlw	255
 10189   003FEC  2008               	addwfc	(??_memset+1)^0,w,c
 10190   003FEE  6EDA               	movwf	fsr2h,c
 10191   003FF0  C003  FFDF         	movff	memset@c,indf2
 10192   003FF4  5006               	movf	(memset@n+1)^0,w,c
 10193   003FF6  E107               	bnz	u7241
 10194   003FF8  0E07               	movlw	7
 10195   003FFA  5C05               	subwf	memset@n^0,w,c
 10196   003FFC  B0D8               	btfsc	status,0,c
 10197   003FFE  EF03  F020         	goto	u7241
 10198   004002  EF05  F020         	goto	u7240
 10199   004006                     u7241:
 10200   004006  EF07  F020         	goto	l6590
 10201   00400A                     u7240:
 10202   00400A  EF58  F020         	goto	l1296
 10203   00400E                     l6590:
 10204   00400E  EE20 F003          	lfsr	2,3
 10205   004012  500B               	movf	memset@s^0,w,c
 10206   004014  26D9               	addwf	fsr2l,f,c
 10207   004016  500C               	movf	(memset@s+1)^0,w,c
 10208   004018  22DA               	addwfc	fsr2h,f,c
 10209   00401A  C003  FFDF         	movff	memset@c,indf2
 10210   00401E  5005               	movf	memset@n^0,w,c
 10211   004020  240B               	addwf	memset@s^0,w,c
 10212   004022  6E07               	movwf	??_memset^0,c
 10213   004024  5006               	movf	(memset@n+1)^0,w,c
 10214   004026  200C               	addwfc	(memset@s+1)^0,w,c
 10215   004028  6E08               	movwf	(??_memset+1)^0,c
 10216   00402A  0EFC               	movlw	252
 10217   00402C  2407               	addwf	??_memset^0,w,c
 10218   00402E  6ED9               	movwf	fsr2l,c
 10219   004030  0EFF               	movlw	255
 10220   004032  2008               	addwfc	(??_memset+1)^0,w,c
 10221   004034  6EDA               	movwf	fsr2h,c
 10222   004036  C003  FFDF         	movff	memset@c,indf2
 10223   00403A  5006               	movf	(memset@n+1)^0,w,c
 10224   00403C  E107               	bnz	u7251
 10225   00403E  0E09               	movlw	9
 10226   004040  5C05               	subwf	memset@n^0,w,c
 10227   004042  B0D8               	btfsc	status,0,c
 10228   004044  EF26  F020         	goto	u7251
 10229   004048  EF28  F020         	goto	u7250
 10230   00404C                     u7251:
 10231   00404C  EF2A  F020         	goto	l6596
 10232   004050                     u7250:
 10233   004050  EF58  F020         	goto	l1296
 10234   004054                     l6596:
 10235   004054  C00B  F007         	movff	memset@s,??_memset
 10236   004058  C00C  F008         	movff	memset@s+1,??_memset+1
 10237   00405C  1E07               	comf	??_memset^0,f,c
 10238   00405E  1E08               	comf	(??_memset+1)^0,f,c
 10239   004060  4A07               	infsnz	??_memset^0,f,c
 10240   004062  2A08               	incf	(??_memset+1)^0,f,c
 10241   004064  0E03               	movlw	3
 10242   004066  1407               	andwf	??_memset^0,w,c
 10243   004068  6E09               	movwf	memset@k^0,c
 10244   00406A  6A0A               	clrf	(memset@k+1)^0,c
 10245   00406C  5009               	movf	memset@k^0,w,c
 10246   00406E  260B               	addwf	memset@s^0,f,c
 10247   004070  500A               	movf	(memset@k+1)^0,w,c
 10248   004072  220C               	addwfc	(memset@s+1)^0,f,c
 10249   004074  5009               	movf	memset@k^0,w,c
 10250   004076  5E05               	subwf	memset@n^0,f,c
 10251   004078  500A               	movf	(memset@k+1)^0,w,c
 10252   00407A  5A06               	subwfb	(memset@n+1)^0,f,c
 10253   00407C  0EFC               	movlw	252
 10254   00407E  1605               	andwf	memset@n^0,f,c
 10255   004080  0EFF               	movlw	255
 10256   004082  1606               	andwf	(memset@n+1)^0,f,c
 10257   004084  EF4F  F020         	goto	l6604
 10258   004088                     l6598:
 10259   004088  C00B  FFD9         	movff	memset@s,fsr2l
 10260   00408C  C00C  FFDA         	movff	memset@s+1,fsr2h
 10261   004090  C003  FFDF         	movff	memset@c,indf2
 10262   004094  0605               	decf	memset@n^0,f,c
 10263   004096  A0D8               	btfss	status,0,c
 10264   004098  0606               	decf	(memset@n+1)^0,f,c
 10265   00409A  4A0B               	infsnz	memset@s^0,f,c
 10266   00409C  2A0C               	incf	(memset@s+1)^0,f,c
 10267   00409E                     l6604:
 10268   00409E  5005               	movf	memset@n^0,w,c
 10269   0040A0  1006               	iorwf	(memset@n+1)^0,w,c
 10270   0040A2  A4D8               	btfss	status,2,c
 10271   0040A4  EF56  F020         	goto	u7261
 10272   0040A8  EF58  F020         	goto	u7260
 10273   0040AC                     u7261:
 10274   0040AC  EF44  F020         	goto	l6598
 10275   0040B0                     u7260:
 10276   0040B0                     l1296:
 10277   0040B0  0012               	return		;funcret
 10278   0040B2                     __end_of_memset:
 10279                           	callstack 0
 10280                           
 10281 ;; *************** function _lcd_4bit_send_string_pos *****************
 10282 ;; Defined at:
 10283 ;;		line 197 in file "ECU_Layer/Lcd/ecu_lcd.c"
 10284 ;; Parameters:    Size  Location     Type
 10285 ;;  _lcd_config     2   25[COMRAM] PTR const struct .
 10286 ;;		 -> lcd_2(6), 
 10287 ;;  row             1   27[COMRAM] unsigned char 
 10288 ;;  col             1   28[COMRAM] unsigned char 
 10289 ;;  str             2   29[COMRAM] PTR unsigned char 
 10290 ;;		 -> STR_5(11), STR_4(14), result_str(20), string(100), 
 10291 ;; Auto vars:     Size  Location     Type
 10292 ;;  ret             1   31[COMRAM] unsigned char 
 10293 ;; Return value:  Size  Location     Type
 10294 ;;                  1    wreg      unsigned char 
 10295 ;; Registers used:
 10296 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10297 ;; Tracked objects:
 10298 ;;		On entry : 0/0
 10299 ;;		On exit  : 0/0
 10300 ;;		Unchanged: 0/0
 10301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10302 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10303 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10305 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10306 ;;Total ram usage:        7 bytes
 10307 ;; Hardware stack levels used: 1
 10308 ;; Hardware stack levels required when called: 4
 10309 ;; This function calls:
 10310 ;;		_lcd_4bit_send_string
 10311 ;;		_lcd_4bit_set_cursor
 10312 ;; This function is called by:
 10313 ;;		_main
 10314 ;; This function uses a non-reentrant model
 10315 ;;
 10316                           
 10317                           	psect	text42
 10318   0054EE                     __ptext42:
 10319                           	callstack 0
 10320   0054EE                     _lcd_4bit_send_string_pos:
 10321                           	callstack 26
 10322   0054EE                     
 10323                           ;ECU_Layer/Lcd/ecu_lcd.c: 197: Std_ReturnType lcd_4bit_send_string_pos(const lcd_4bit_t 
      +                          * _lcd_config, uint8 row, uint8 col, uint8 *str);ECU_Layer/Lcd/ecu_lcd.c: 198: {;ECU_Lay
      +                          er/Lcd/ecu_lcd.c: 199:     Std_ReturnType ret = (Std_ReturnType)0x01;
 10324   0054EE  0E01               	movlw	1
 10325   0054F0  6E20               	movwf	lcd_4bit_send_string_pos@ret^0,c
 10326   0054F2                     
 10327                           ;ECU_Layer/Lcd/ecu_lcd.c: 200:     if(((void*)0) == _lcd_config || ((void*)0) == str)
 10328   0054F2  501A               	movf	lcd_4bit_send_string_pos@_lcd_config^0,w,c
 10329   0054F4  101B               	iorwf	(lcd_4bit_send_string_pos@_lcd_config+1)^0,w,c
 10330   0054F6  B4D8               	btfsc	status,2,c
 10331   0054F8  EF80  F02A         	goto	u7121
 10332   0054FC  EF82  F02A         	goto	u7120
 10333   005500                     u7121:
 10334   005500  EF8B  F02A         	goto	l6490
 10335   005504                     u7120:
 10336   005504  501E               	movf	lcd_4bit_send_string_pos@str^0,w,c
 10337   005506  101F               	iorwf	(lcd_4bit_send_string_pos@str+1)^0,w,c
 10338   005508  A4D8               	btfss	status,2,c
 10339   00550A  EF89  F02A         	goto	u7131
 10340   00550E  EF8B  F02A         	goto	u7130
 10341   005512                     u7131:
 10342   005512  EF8F  F02A         	goto	l6492
 10343   005516                     u7130:
 10344   005516                     l6490:
 10345                           
 10346                           ;ECU_Layer/Lcd/ecu_lcd.c: 201:     {;ECU_Layer/Lcd/ecu_lcd.c: 202:         ret = (Std_Re
      +                          turnType)0x00;
 10347   005516  0E00               	movlw	0
 10348   005518  6E20               	movwf	lcd_4bit_send_string_pos@ret^0,c
 10349                           
 10350                           ;ECU_Layer/Lcd/ecu_lcd.c: 203:     }
 10351   00551A  EFA5  F02A         	goto	l6496
 10352   00551E                     l6492:
 10353                           
 10354                           ;ECU_Layer/Lcd/ecu_lcd.c: 205:     {;ECU_Layer/Lcd/ecu_lcd.c: 206:         ret &= lcd_4b
      +                          it_set_cursor(_lcd_config, row, col);
 10355   00551E  C01A  F013         	movff	lcd_4bit_send_string_pos@_lcd_config,lcd_4bit_set_cursor@_lcd_config
 10356   005522  C01B  F014         	movff	lcd_4bit_send_string_pos@_lcd_config+1,lcd_4bit_set_cursor@_lcd_config+1
 10357   005526  C01C  F015         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
 10358   00552A  C01D  F016         	movff	lcd_4bit_send_string_pos@col,lcd_4bit_set_cursor@column
 10359   00552E  EC9F  F026         	call	_lcd_4bit_set_cursor	;wreg free
 10360   005532  1620               	andwf	lcd_4bit_send_string_pos@ret^0,f,c
 10361   005534                     
 10362                           ;ECU_Layer/Lcd/ecu_lcd.c: 207:         ret &= lcd_4bit_send_string(_lcd_config, str);
 10363   005534  C01A  F013         	movff	lcd_4bit_send_string_pos@_lcd_config,lcd_4bit_send_string@_lcd_config
 10364   005538  C01B  F014         	movff	lcd_4bit_send_string_pos@_lcd_config+1,lcd_4bit_send_string@_lcd_config+1
 10365   00553C  C01E  F015         	movff	lcd_4bit_send_string_pos@str,lcd_4bit_send_string@str
 10366   005540  C01F  F016         	movff	lcd_4bit_send_string_pos@str+1,lcd_4bit_send_string@str+1
 10367   005544  EC33  F028         	call	_lcd_4bit_send_string	;wreg free
 10368   005548  1620               	andwf	lcd_4bit_send_string_pos@ret^0,f,c
 10369   00554A                     l6496:
 10370                           
 10371                           ;ECU_Layer/Lcd/ecu_lcd.c: 210:     return ret;
 10372   00554A  5020               	movf	lcd_4bit_send_string_pos@ret^0,w,c
 10373   00554C  0012               	return		;funcret
 10374   00554E                     __end_of_lcd_4bit_send_string_pos:
 10375                           	callstack 0
 10376                           
 10377 ;; *************** function _lcd_4bit_send_string *****************
 10378 ;; Defined at:
 10379 ;;		line 167 in file "ECU_Layer/Lcd/ecu_lcd.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;  _lcd_config     2   18[COMRAM] PTR const struct .
 10382 ;;		 -> lcd_2(6), 
 10383 ;;  str             2   20[COMRAM] PTR unsigned char 
 10384 ;;		 -> STR_5(11), STR_4(14), result_str(20), string(100), 
 10385 ;; Auto vars:     Size  Location     Type
 10386 ;;  ret             1   22[COMRAM] unsigned char 
 10387 ;; Return value:  Size  Location     Type
 10388 ;;                  1    wreg      unsigned char 
 10389 ;; Registers used:
 10390 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10391 ;; Tracked objects:
 10392 ;;		On entry : 0/0
 10393 ;;		On exit  : 0/0
 10394 ;;		Unchanged: 0/0
 10395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10396 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10399 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10400 ;;Total ram usage:        5 bytes
 10401 ;; Hardware stack levels used: 1
 10402 ;; Hardware stack levels required when called: 3
 10403 ;; This function calls:
 10404 ;;		_lcd_4bit_send_char_data
 10405 ;; This function is called by:
 10406 ;;		_lcd_4bit_send_string_pos
 10407 ;; This function uses a non-reentrant model
 10408 ;;
 10409                           
 10410                           	psect	text43
 10411   005066                     __ptext43:
 10412                           	callstack 0
 10413   005066                     _lcd_4bit_send_string:
 10414                           	callstack 26
 10415   005066                     
 10416                           ;ECU_Layer/Lcd/ecu_lcd.c: 167: Std_ReturnType lcd_4bit_send_string(const lcd_4bit_t * _l
      +                          cd_config, uint8 *str);ECU_Layer/Lcd/ecu_lcd.c: 168: {;ECU_Layer/Lcd/ecu_lcd.c: 169:    
      +                           Std_ReturnType ret = (Std_ReturnType)0x01;
 10417   005066  0E01               	movlw	1
 10418   005068  6E17               	movwf	lcd_4bit_send_string@ret^0,c
 10419   00506A                     
 10420                           ;ECU_Layer/Lcd/ecu_lcd.c: 170:     if(((void*)0) == _lcd_config)
 10421   00506A  5013               	movf	lcd_4bit_send_string@_lcd_config^0,w,c
 10422   00506C  1014               	iorwf	(lcd_4bit_send_string@_lcd_config+1)^0,w,c
 10423   00506E  A4D8               	btfss	status,2,c
 10424   005070  EF3C  F028         	goto	u6641
 10425   005074  EF3E  F028         	goto	u6640
 10426   005078                     u6641:
 10427   005078  EF5D  F028         	goto	l6236
 10428   00507C                     u6640:
 10429   00507C                     
 10430                           ;ECU_Layer/Lcd/ecu_lcd.c: 171:     {;ECU_Layer/Lcd/ecu_lcd.c: 172:         ret = (Std_Re
      +                          turnType)0x00;
 10431   00507C  0E00               	movlw	0
 10432   00507E  6E17               	movwf	lcd_4bit_send_string@ret^0,c
 10433                           
 10434                           ;ECU_Layer/Lcd/ecu_lcd.c: 173:     }
 10435   005080  EF76  F028         	goto	l6238
 10436   005084                     l6232:
 10437                           
 10438                           ;ECU_Layer/Lcd/ecu_lcd.c: 177:         {;ECU_Layer/Lcd/ecu_lcd.c: 178:             ret &
      +                          = lcd_4bit_send_char_data(_lcd_config, *str);
 10439   005084  C013  F00F         	movff	lcd_4bit_send_string@_lcd_config,lcd_4bit_send_char_data@_lcd_config
 10440   005088  C014  F010         	movff	lcd_4bit_send_string@_lcd_config+1,lcd_4bit_send_char_data@_lcd_config+1
 10441   00508C  C015  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
 10442   005090  C016  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
 10443   005094  0E00               	movlw	low (__smallconst shr (0+16))
 10444   005096  6EF8               	movwf	tblptru,c
 10445   005098  0E0F               	movlw	(high __ramtop+-1)
 10446   00509A  64F7               	cpfsgt	tblptrh,c
 10447   00509C  D003               	bra	u6657
 10448   00509E  0008               	tblrd		*
 10449   0050A0  50F5               	movf	tablat,w,c
 10450   0050A2  D005               	bra	u6650
 10451   0050A4                     u6657:
 10452   0050A4  CFF6 FFE9          	movff	tblptrl,fsr0l
 10453   0050A8  CFF7 FFEA          	movff	tblptrh,fsr0h
 10454   0050AC  50EF               	movf	indf0,w,c
 10455   0050AE                     u6650:
 10456   0050AE  6E11               	movwf	lcd_4bit_send_char_data@data^0,c
 10457   0050B0  EC3A  F029         	call	_lcd_4bit_send_char_data	;wreg free
 10458   0050B4  1617               	andwf	lcd_4bit_send_string@ret^0,f,c
 10459   0050B6                     
 10460                           ;ECU_Layer/Lcd/ecu_lcd.c: 179:             *str++;
 10461   0050B6  4A15               	infsnz	lcd_4bit_send_string@str^0,f,c
 10462   0050B8  2A16               	incf	(lcd_4bit_send_string@str+1)^0,f,c
 10463   0050BA                     l6236:
 10464                           
 10465                           ;ECU_Layer/Lcd/ecu_lcd.c: 176:         while(*str)
 10466   0050BA  C015  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
 10467   0050BE  C016  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
 10468   0050C2  0E00               	movlw	low (__smallconst shr (0+16))
 10469   0050C4  6EF8               	movwf	tblptru,c
 10470   0050C6  0E0F               	movlw	(high __ramtop+-1)
 10471   0050C8  64F7               	cpfsgt	tblptrh,c
 10472   0050CA  D003               	bra	u6667
 10473   0050CC  0008               	tblrd		*
 10474   0050CE  50F5               	movf	tablat,w,c
 10475   0050D0  D005               	bra	u6660
 10476   0050D2                     u6667:
 10477   0050D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 10478   0050D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 10479   0050DA  50EF               	movf	indf0,w,c
 10480   0050DC                     u6660:
 10481   0050DC  0900               	iorlw	0
 10482   0050DE  A4D8               	btfss	status,2,c
 10483   0050E0  EF74  F028         	goto	u6671
 10484   0050E4  EF76  F028         	goto	u6670
 10485   0050E8                     u6671:
 10486   0050E8  EF42  F028         	goto	l6232
 10487   0050EC                     u6670:
 10488   0050EC                     l6238:
 10489                           
 10490                           ;ECU_Layer/Lcd/ecu_lcd.c: 184:     return ret;
 10491   0050EC  5017               	movf	lcd_4bit_send_string@ret^0,w,c
 10492   0050EE  0012               	return		;funcret
 10493   0050F0                     __end_of_lcd_4bit_send_string:
 10494                           	callstack 0
 10495                           
 10496 ;; *************** function _lcd_4bit_send_custom_char *****************
 10497 ;; Defined at:
 10498 ;;		line 223 in file "ECU_Layer/Lcd/ecu_lcd.c"
 10499 ;; Parameters:    Size  Location     Type
 10500 ;;  _lcd_config     2   31[COMRAM] PTR const struct .
 10501 ;;		 -> lcd_2(6), 
 10502 ;;  row             1   33[COMRAM] unsigned char 
 10503 ;;  col             1   34[COMRAM] unsigned char 
 10504 ;;  _chr            2   35[COMRAM] PTR unsigned char 
 10505 ;;		 -> smile(8), 
 10506 ;;  mempos          1   37[COMRAM] unsigned char 
 10507 ;; Auto vars:     Size  Location     Type
 10508 ;;  l_cnt           1   39[COMRAM] unsigned char 
 10509 ;;  ret             1   38[COMRAM] unsigned char 
 10510 ;; Return value:  Size  Location     Type
 10511 ;;                  1    wreg      unsigned char 
 10512 ;; Registers used:
 10513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10514 ;; Tracked objects:
 10515 ;;		On entry : 0/0
 10516 ;;		On exit  : 0/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10519 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10522 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10523 ;;Total ram usage:        9 bytes
 10524 ;; Hardware stack levels used: 1
 10525 ;; Hardware stack levels required when called: 5
 10526 ;; This function calls:
 10527 ;;		_lcd_4bit_send_char_data
 10528 ;;		_lcd_4bit_send_char_data_pos
 10529 ;;		_lcd_4bit_send_command
 10530 ;; This function is called by:
 10531 ;;		_main
 10532 ;; This function uses a non-reentrant model
 10533 ;;
 10534                           
 10535                           	psect	text44
 10536   005178                     __ptext44:
 10537                           	callstack 0
 10538   005178                     _lcd_4bit_send_custom_char:
 10539                           	callstack 25
 10540   005178                     
 10541                           ;ECU_Layer/Lcd/ecu_lcd.c: 223: Std_ReturnType lcd_4bit_send_custom_char(const lcd_4bit_t
      +                           * _lcd_config, uint8 row, uint8 col, uint8 _chr[], uint8 mempos);ECU_Layer/Lcd/ecu_lcd.
      +                          c: 224: {;ECU_Layer/Lcd/ecu_lcd.c: 225:     Std_ReturnType ret = (Std_ReturnType)0x01;
 10542   005178  0E01               	movlw	1
 10543   00517A  6E27               	movwf	lcd_4bit_send_custom_char@ret^0,c
 10544   00517C                     
 10545                           ;ECU_Layer/Lcd/ecu_lcd.c: 227:     if(((void*)0) == _lcd_config)
 10546   00517C  5020               	movf	lcd_4bit_send_custom_char@_lcd_config^0,w,c
 10547   00517E  1021               	iorwf	(lcd_4bit_send_custom_char@_lcd_config+1)^0,w,c
 10548   005180  A4D8               	btfss	status,2,c
 10549   005182  EFC5  F028         	goto	u7141
 10550   005186  EFC7  F028         	goto	u7140
 10551   00518A                     u7141:
 10552   00518A  EFCB  F028         	goto	l6506
 10553   00518E                     u7140:
 10554   00518E                     
 10555                           ;ECU_Layer/Lcd/ecu_lcd.c: 228:     {;ECU_Layer/Lcd/ecu_lcd.c: 229:         ret = (Std_Re
      +                          turnType)0x00;
 10556   00518E  0E00               	movlw	0
 10557   005190  6E27               	movwf	lcd_4bit_send_custom_char@ret^0,c
 10558                           
 10559                           ;ECU_Layer/Lcd/ecu_lcd.c: 230:     }
 10560   005192  EFFB  F028         	goto	l6522
 10561   005196                     l6506:
 10562                           
 10563                           ;ECU_Layer/Lcd/ecu_lcd.c: 232:     {;ECU_Layer/Lcd/ecu_lcd.c: 233:         lcd_4bit_send
      +                          _command(_lcd_config, (0x40 + (mempos * 8)));
 10564   005196  C020  F00F         	movff	lcd_4bit_send_custom_char@_lcd_config,lcd_4bit_send_command@_lcd_config
 10565   00519A  C021  F010         	movff	lcd_4bit_send_custom_char@_lcd_config+1,lcd_4bit_send_command@_lcd_config+1
 10566   00519E  5026               	movf	lcd_4bit_send_custom_char@mempos^0,w,c
 10567   0051A0  0D08               	mullw	8
 10568   0051A2  50F3               	movf	243,w,c
 10569   0051A4  0F40               	addlw	64
 10570   0051A6  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
 10571   0051A8  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
 10572   0051AC                     
 10573                           ;ECU_Layer/Lcd/ecu_lcd.c: 234:         for(l_cnt = 0 ; l_cnt < 8 ; l_cnt++)
 10574   0051AC  0E00               	movlw	0
 10575   0051AE  6E28               	movwf	lcd_4bit_send_custom_char@l_cnt^0,c
 10576   0051B0                     l6514:
 10577                           
 10578                           ;ECU_Layer/Lcd/ecu_lcd.c: 235:         {;ECU_Layer/Lcd/ecu_lcd.c: 236:             lcd_4
      +                          bit_send_char_data(_lcd_config, _chr[l_cnt]);
 10579   0051B0  C020  F00F         	movff	lcd_4bit_send_custom_char@_lcd_config,lcd_4bit_send_char_data@_lcd_config
 10580   0051B4  C021  F010         	movff	lcd_4bit_send_custom_char@_lcd_config+1,lcd_4bit_send_char_data@_lcd_config+1
 10581   0051B8  5028               	movf	lcd_4bit_send_custom_char@l_cnt^0,w,c
 10582   0051BA  2424               	addwf	lcd_4bit_send_custom_char@_chr^0,w,c
 10583   0051BC  6ED9               	movwf	fsr2l,c
 10584   0051BE  0E00               	movlw	0
 10585   0051C0  2025               	addwfc	(lcd_4bit_send_custom_char@_chr+1)^0,w,c
 10586   0051C2  6EDA               	movwf	fsr2h,c
 10587   0051C4  50DF               	movf	indf2,w,c
 10588   0051C6  6E11               	movwf	lcd_4bit_send_char_data@data^0,c
 10589   0051C8  EC3A  F029         	call	_lcd_4bit_send_char_data	;wreg free
 10590   0051CC                     
 10591                           ;ECU_Layer/Lcd/ecu_lcd.c: 237:         }
 10592   0051CC  2A28               	incf	lcd_4bit_send_custom_char@l_cnt^0,f,c
 10593   0051CE  0E07               	movlw	7
 10594   0051D0  6428               	cpfsgt	lcd_4bit_send_custom_char@l_cnt^0,c
 10595   0051D2  EFED  F028         	goto	u7151
 10596   0051D6  EFEF  F028         	goto	u7150
 10597   0051DA                     u7151:
 10598   0051DA  EFD8  F028         	goto	l6514
 10599   0051DE                     u7150:
 10600   0051DE                     
 10601                           ;ECU_Layer/Lcd/ecu_lcd.c: 238:         lcd_4bit_send_char_data_pos(_lcd_config, row, col
      +                          , mempos);
 10602   0051DE  C020  F01A         	movff	lcd_4bit_send_custom_char@_lcd_config,lcd_4bit_send_char_data_pos@_lcd_config
 10603   0051E2  C021  F01B         	movff	lcd_4bit_send_custom_char@_lcd_config+1,lcd_4bit_send_char_data_pos@_lcd_config+1
 10604   0051E6  C022  F01C         	movff	lcd_4bit_send_custom_char@row,lcd_4bit_send_char_data_pos@row
 10605   0051EA  C023  F01D         	movff	lcd_4bit_send_custom_char@col,lcd_4bit_send_char_data_pos@col
 10606   0051EE  C026  F01E         	movff	lcd_4bit_send_custom_char@mempos,lcd_4bit_send_char_data_pos@data
 10607   0051F2  EC87  F02B         	call	_lcd_4bit_send_char_data_pos	;wreg free
 10608   0051F6                     l6522:
 10609                           
 10610                           ;ECU_Layer/Lcd/ecu_lcd.c: 241:     return ret;
 10611   0051F6  5027               	movf	lcd_4bit_send_custom_char@ret^0,w,c
 10612   0051F8  0012               	return		;funcret
 10613   0051FA                     __end_of_lcd_4bit_send_custom_char:
 10614                           	callstack 0
 10615                           
 10616 ;; *************** function _lcd_4bit_send_char_data_pos *****************
 10617 ;; Defined at:
 10618 ;;		line 142 in file "ECU_Layer/Lcd/ecu_lcd.c"
 10619 ;; Parameters:    Size  Location     Type
 10620 ;;  _lcd_config     2   25[COMRAM] PTR const struct .
 10621 ;;		 -> lcd_2(6), 
 10622 ;;  row             1   27[COMRAM] unsigned char 
 10623 ;;  col             1   28[COMRAM] unsigned char 
 10624 ;;  data            1   29[COMRAM] unsigned char 
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;  ret             1   30[COMRAM] unsigned char 
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      unsigned char 
 10629 ;; Registers used:
 10630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10636 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10639 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10640 ;;Total ram usage:        6 bytes
 10641 ;; Hardware stack levels used: 1
 10642 ;; Hardware stack levels required when called: 4
 10643 ;; This function calls:
 10644 ;;		_lcd_4bit_send_char_data
 10645 ;;		_lcd_4bit_set_cursor
 10646 ;; This function is called by:
 10647 ;;		_lcd_4bit_send_custom_char
 10648 ;; This function uses a non-reentrant model
 10649 ;;
 10650                           
 10651                           	psect	text45
 10652   00570E                     __ptext45:
 10653                           	callstack 0
 10654   00570E                     _lcd_4bit_send_char_data_pos:
 10655                           	callstack 25
 10656   00570E                     
 10657                           ;ECU_Layer/Lcd/ecu_lcd.c: 142: Std_ReturnType lcd_4bit_send_char_data_pos(const lcd_4bit
      +                          _t * _lcd_config, uint8 row, uint8 col, uint8 data);ECU_Layer/Lcd/ecu_lcd.c: 143: {;ECU_
      +                          Layer/Lcd/ecu_lcd.c: 144:     Std_ReturnType ret = (Std_ReturnType)0x01;
 10658   00570E  0E01               	movlw	1
 10659   005710  6E1F               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
 10660   005712                     
 10661                           ;ECU_Layer/Lcd/ecu_lcd.c: 145:     if(((void*)0) == _lcd_config)
 10662   005712  501A               	movf	lcd_4bit_send_char_data_pos@_lcd_config^0,w,c
 10663   005714  101B               	iorwf	(lcd_4bit_send_char_data_pos@_lcd_config+1)^0,w,c
 10664   005716  A4D8               	btfss	status,2,c
 10665   005718  EF90  F02B         	goto	u6631
 10666   00571C  EF92  F02B         	goto	u6630
 10667   005720                     u6631:
 10668   005720  EF94  F02B         	goto	l6222
 10669   005724                     u6630:
 10670   005724                     
 10671                           ;ECU_Layer/Lcd/ecu_lcd.c: 148:     }
 10672   005724  EFA8  F02B         	goto	l232
 10673   005728                     l6222:
 10674                           
 10675                           ;ECU_Layer/Lcd/ecu_lcd.c: 150:     {;ECU_Layer/Lcd/ecu_lcd.c: 151:         ret &= lcd_4b
      +                          it_set_cursor(_lcd_config, row, col);
 10676   005728  C01A  F013         	movff	lcd_4bit_send_char_data_pos@_lcd_config,lcd_4bit_set_cursor@_lcd_config
 10677   00572C  C01B  F014         	movff	lcd_4bit_send_char_data_pos@_lcd_config+1,lcd_4bit_set_cursor@_lcd_config+1
 10678   005730  C01C  F015         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
 10679   005734  C01D  F016         	movff	lcd_4bit_send_char_data_pos@col,lcd_4bit_set_cursor@column
 10680   005738  EC9F  F026         	call	_lcd_4bit_set_cursor	;wreg free
 10681   00573C  161F               	andwf	lcd_4bit_send_char_data_pos@ret^0,f,c
 10682                           
 10683                           ;ECU_Layer/Lcd/ecu_lcd.c: 152:         ret &= lcd_4bit_send_char_data(_lcd_config, data)
      +                          ;
 10684   00573E  C01A  F00F         	movff	lcd_4bit_send_char_data_pos@_lcd_config,lcd_4bit_send_char_data@_lcd_config
 10685   005742  C01B  F010         	movff	lcd_4bit_send_char_data_pos@_lcd_config+1,lcd_4bit_send_char_data@_lcd_config+1
 10686   005746  C01E  F011         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
 10687   00574A  EC3A  F029         	call	_lcd_4bit_send_char_data	;wreg free
 10688   00574E  161F               	andwf	lcd_4bit_send_char_data_pos@ret^0,f,c
 10689   005750                     l232:
 10690   005750  0012               	return		;funcret
 10691   005752                     __end_of_lcd_4bit_send_char_data_pos:
 10692                           	callstack 0
 10693                           
 10694 ;; *************** function _lcd_4bit_set_cursor *****************
 10695 ;; Defined at:
 10696 ;;		line 560 in file "ECU_Layer/Lcd/ecu_lcd.c"
 10697 ;; Parameters:    Size  Location     Type
 10698 ;;  _lcd_config     2   18[COMRAM] PTR const struct .
 10699 ;;		 -> lcd_2(6), 
 10700 ;;  row             1   20[COMRAM] unsigned char 
 10701 ;;  column          1   21[COMRAM] unsigned char 
 10702 ;; Auto vars:     Size  Location     Type
 10703 ;;  ret             1   24[COMRAM] unsigned char 
 10704 ;; Return value:  Size  Location     Type
 10705 ;;                  1    wreg      unsigned char 
 10706 ;; Registers used:
 10707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10708 ;; Tracked objects:
 10709 ;;		On entry : 0/0
 10710 ;;		On exit  : 0/0
 10711 ;;		Unchanged: 0/0
 10712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10716 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10717 ;;Total ram usage:        7 bytes
 10718 ;; Hardware stack levels used: 1
 10719 ;; Hardware stack levels required when called: 3
 10720 ;; This function calls:
 10721 ;;		_lcd_4bit_send_command
 10722 ;; This function is called by:
 10723 ;;		_lcd_4bit_send_char_data_pos
 10724 ;;		_lcd_4bit_send_string_pos
 10725 ;; This function uses a non-reentrant model
 10726 ;;
 10727                           
 10728                           	psect	text46
 10729   004D3E                     __ptext46:
 10730                           	callstack 0
 10731   004D3E                     _lcd_4bit_set_cursor:
 10732                           	callstack 26
 10733   004D3E                     
 10734                           ;ECU_Layer/Lcd/ecu_lcd.c: 560: static Std_ReturnType lcd_4bit_set_cursor(const lcd_4bit_
      +                          t * _lcd_config, uint8 row, uint8 column);ECU_Layer/Lcd/ecu_lcd.c: 561: {;ECU_Layer/Lcd/
      +                          ecu_lcd.c: 562:     Std_ReturnType ret = (Std_ReturnType)0x01;
 10735   004D3E  0E01               	movlw	1
 10736   004D40  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
 10737   004D42                     
 10738                           ;ECU_Layer/Lcd/ecu_lcd.c: 563:     column --;
 10739   004D42  0616               	decf	lcd_4bit_set_cursor@column^0,f,c
 10740                           
 10741                           ;ECU_Layer/Lcd/ecu_lcd.c: 565:     switch(row)
 10742   004D44  EFD8  F026         	goto	l5986
 10743   004D48                     l5974:
 10744   004D48  C013  F00F         	movff	lcd_4bit_set_cursor@_lcd_config,lcd_4bit_send_command@_lcd_config
 10745   004D4C  C014  F010         	movff	lcd_4bit_set_cursor@_lcd_config+1,lcd_4bit_send_command@_lcd_config+1
 10746   004D50  5016               	movf	lcd_4bit_set_cursor@column^0,w,c
 10747   004D52  0F80               	addlw	128
 10748   004D54  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
 10749   004D56  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
 10750   004D5A  1619               	andwf	lcd_4bit_set_cursor@ret^0,f,c
 10751   004D5C  EFF5  F026         	goto	l5988
 10752   004D60                     l5976:
 10753   004D60  C013  F00F         	movff	lcd_4bit_set_cursor@_lcd_config,lcd_4bit_send_command@_lcd_config
 10754   004D64  C014  F010         	movff	lcd_4bit_set_cursor@_lcd_config+1,lcd_4bit_send_command@_lcd_config+1
 10755   004D68  5016               	movf	lcd_4bit_set_cursor@column^0,w,c
 10756   004D6A  0FC0               	addlw	192
 10757   004D6C  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
 10758   004D6E  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
 10759   004D72  1619               	andwf	lcd_4bit_set_cursor@ret^0,f,c
 10760   004D74  EFF5  F026         	goto	l5988
 10761   004D78                     l5978:
 10762   004D78  C013  F00F         	movff	lcd_4bit_set_cursor@_lcd_config,lcd_4bit_send_command@_lcd_config
 10763   004D7C  C014  F010         	movff	lcd_4bit_set_cursor@_lcd_config+1,lcd_4bit_send_command@_lcd_config+1
 10764   004D80  5016               	movf	lcd_4bit_set_cursor@column^0,w,c
 10765   004D82  0F94               	addlw	148
 10766   004D84  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
 10767   004D86  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
 10768   004D8A  1619               	andwf	lcd_4bit_set_cursor@ret^0,f,c
 10769   004D8C  EFF5  F026         	goto	l5988
 10770   004D90                     l5980:
 10771   004D90  C013  F00F         	movff	lcd_4bit_set_cursor@_lcd_config,lcd_4bit_send_command@_lcd_config
 10772   004D94  C014  F010         	movff	lcd_4bit_set_cursor@_lcd_config+1,lcd_4bit_send_command@_lcd_config+1
 10773   004D98  5016               	movf	lcd_4bit_set_cursor@column^0,w,c
 10774   004D9A  0FD4               	addlw	212
 10775   004D9C  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
 10776   004D9E  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
 10777   004DA2  1619               	andwf	lcd_4bit_set_cursor@ret^0,f,c
 10778   004DA4  EFF5  F026         	goto	l5988
 10779   004DA8                     l5982:
 10780   004DA8  0E00               	movlw	0
 10781   004DAA  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
 10782   004DAC  EFF5  F026         	goto	l5988
 10783   004DB0                     l5986:
 10784   004DB0  5015               	movf	lcd_4bit_set_cursor@row^0,w,c
 10785   004DB2  6E17               	movwf	??_lcd_4bit_set_cursor^0,c
 10786   004DB4  6A18               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
 10787                           
 10788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10789                           ; Switch size 1, requested type "simple"
 10790                           ; Number of cases is 1, Range of values is 0 to 0
 10791                           ; switch strategies available:
 10792                           ; Name         Instructions Cycles
 10793                           ; simple_byte            4     3 (average)
 10794                           ;	Chosen strategy is simple_byte
 10795   004DB6  5018               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
 10796   004DB8  0A00               	xorlw	0	; case 0
 10797   004DBA  B4D8               	btfsc	status,2,c
 10798   004DBC  EFE2  F026         	goto	l7702
 10799   004DC0  EFD4  F026         	goto	l5982
 10800   004DC4                     l7702:
 10801                           
 10802                           ; Switch size 1, requested type "simple"
 10803                           ; Number of cases is 4, Range of values is 1 to 4
 10804                           ; switch strategies available:
 10805                           ; Name         Instructions Cycles
 10806                           ; simple_byte           13     7 (average)
 10807                           ;	Chosen strategy is simple_byte
 10808   004DC4  5017               	movf	??_lcd_4bit_set_cursor^0,w,c
 10809   004DC6  0A01               	xorlw	1	; case 1
 10810   004DC8  B4D8               	btfsc	status,2,c
 10811   004DCA  EFA4  F026         	goto	l5974
 10812   004DCE  0A03               	xorlw	3	; case 2
 10813   004DD0  B4D8               	btfsc	status,2,c
 10814   004DD2  EFB0  F026         	goto	l5976
 10815   004DD6  0A01               	xorlw	1	; case 3
 10816   004DD8  B4D8               	btfsc	status,2,c
 10817   004DDA  EFBC  F026         	goto	l5978
 10818   004DDE  0A07               	xorlw	7	; case 4
 10819   004DE0  B4D8               	btfsc	status,2,c
 10820   004DE2  EFC8  F026         	goto	l5980
 10821   004DE6  EFD4  F026         	goto	l5982
 10822   004DEA                     l5988:
 10823                           
 10824                           ;ECU_Layer/Lcd/ecu_lcd.c: 573:     return ret;
 10825   004DEA  5019               	movf	lcd_4bit_set_cursor@ret^0,w,c
 10826   004DEC  0012               	return		;funcret
 10827   004DEE                     __end_of_lcd_4bit_set_cursor:
 10828                           	callstack 0
 10829                           
 10830 ;; *************** function _lcd_4bit_send_char_data *****************
 10831 ;; Defined at:
 10832 ;;		line 113 in file "ECU_Layer/Lcd/ecu_lcd.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;  _lcd_config     2   14[COMRAM] PTR const struct .
 10835 ;;		 -> lcd_2(6), 
 10836 ;;  data            1   16[COMRAM] unsigned char 
 10837 ;; Auto vars:     Size  Location     Type
 10838 ;;  ret             1   17[COMRAM] unsigned char 
 10839 ;; Return value:  Size  Location     Type
 10840 ;;                  1    wreg      unsigned char 
 10841 ;; Registers used:
 10842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10843 ;; Tracked objects:
 10844 ;;		On entry : 0/0
 10845 ;;		On exit  : 0/0
 10846 ;;		Unchanged: 0/0
 10847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10848 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10851 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10852 ;;Total ram usage:        4 bytes
 10853 ;; Hardware stack levels used: 1
 10854 ;; Hardware stack levels required when called: 2
 10855 ;; This function calls:
 10856 ;;		_gpio_pin_write_logic
 10857 ;;		_lcd_4bit_send_enable
 10858 ;;		_lcd_send_4bit
 10859 ;; This function is called by:
 10860 ;;		_lcd_4bit_send_char_data_pos
 10861 ;;		_lcd_4bit_send_string
 10862 ;;		_lcd_4bit_send_custom_char
 10863 ;; This function uses a non-reentrant model
 10864 ;;
 10865                           
 10866                           	psect	text47
 10867   005274                     __ptext47:
 10868                           	callstack 0
 10869   005274                     _lcd_4bit_send_char_data:
 10870                           	callstack 26
 10871   005274                     
 10872                           ;ECU_Layer/Lcd/ecu_lcd.c: 116:     if(((void*)0) == _lcd_config)
 10873   005274  500F               	movf	lcd_4bit_send_char_data@_lcd_config^0,w,c
 10874   005276  1010               	iorwf	(lcd_4bit_send_char_data@_lcd_config+1)^0,w,c
 10875   005278  A4D8               	btfss	status,2,c
 10876   00527A  EF41  F029         	goto	u6421
 10877   00527E  EF43  F029         	goto	u6420
 10878   005282                     u6421:
 10879   005282  EF47  F029         	goto	l5964
 10880   005286                     u6420:
 10881   005286                     
 10882                           ;ECU_Layer/Lcd/ecu_lcd.c: 117:     {;ECU_Layer/Lcd/ecu_lcd.c: 118:         ret = (Std_Re
      +                          turnType)0x00;
 10883   005286  0E00               	movlw	0
 10884   005288  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
 10885                           
 10886                           ;ECU_Layer/Lcd/ecu_lcd.c: 119:     }
 10887   00528A  EF71  F029         	goto	l5966
 10888   00528E                     l5964:
 10889                           
 10890                           ;ECU_Layer/Lcd/ecu_lcd.c: 121:     {;ECU_Layer/Lcd/ecu_lcd.c: 122:         ret = gpio_pi
      +                          n_write_logic(&(_lcd_config -> lcd_rs), GPIO_HIGH);
 10891   00528E  C00F  F001         	movff	lcd_4bit_send_char_data@_lcd_config,gpio_pin_write_logic@_pin_config
 10892   005292  C010  F002         	movff	lcd_4bit_send_char_data@_lcd_config+1,gpio_pin_write_logic@_pin_config+1
 10893   005296  0E01               	movlw	1
 10894   005298  6E03               	movwf	gpio_pin_write_logic@_logic^0,c
 10895   00529A  EC0E  F021         	call	_gpio_pin_write_logic	;wreg free
 10896   00529E  6E12               	movwf	lcd_4bit_send_char_data@ret^0,c
 10897                           
 10898                           ;ECU_Layer/Lcd/ecu_lcd.c: 123:         ret &= lcd_send_4bit(_lcd_config, (data >> 4));
 10899   0052A0  C00F  F00B         	movff	lcd_4bit_send_char_data@_lcd_config,lcd_send_4bit@_lcd_config
 10900   0052A4  C010  F00C         	movff	lcd_4bit_send_char_data@_lcd_config+1,lcd_send_4bit@_lcd_config+1
 10901   0052A8  3811               	swapf	lcd_4bit_send_char_data@data^0,w,c
 10902   0052AA  0B0F               	andlw	15
 10903   0052AC  6E0D               	movwf	lcd_send_4bit@_data_cmd^0,c
 10904   0052AE  EC46  F026         	call	_lcd_send_4bit	;wreg free
 10905   0052B2  1612               	andwf	lcd_4bit_send_char_data@ret^0,f,c
 10906                           
 10907                           ;ECU_Layer/Lcd/ecu_lcd.c: 124:         ret &= lcd_4bit_send_enable(_lcd_config);
 10908   0052B4  C00F  F00B         	movff	lcd_4bit_send_char_data@_lcd_config,lcd_4bit_send_enable@_lcd_config
 10909   0052B8  C010  F00C         	movff	lcd_4bit_send_char_data@_lcd_config+1,lcd_4bit_send_enable@_lcd_config+1
 10910   0052BC  EC0A  F02C         	call	_lcd_4bit_send_enable	;wreg free
 10911   0052C0  1612               	andwf	lcd_4bit_send_char_data@ret^0,f,c
 10912                           
 10913                           ;ECU_Layer/Lcd/ecu_lcd.c: 125:         ret &= lcd_send_4bit(_lcd_config, data);
 10914   0052C2  C00F  F00B         	movff	lcd_4bit_send_char_data@_lcd_config,lcd_send_4bit@_lcd_config
 10915   0052C6  C010  F00C         	movff	lcd_4bit_send_char_data@_lcd_config+1,lcd_send_4bit@_lcd_config+1
 10916   0052CA  C011  F00D         	movff	lcd_4bit_send_char_data@data,lcd_send_4bit@_data_cmd
 10917   0052CE  EC46  F026         	call	_lcd_send_4bit	;wreg free
 10918   0052D2  1612               	andwf	lcd_4bit_send_char_data@ret^0,f,c
 10919                           
 10920                           ;ECU_Layer/Lcd/ecu_lcd.c: 126:         ret &= lcd_4bit_send_enable(_lcd_config);
 10921   0052D4  C00F  F00B         	movff	lcd_4bit_send_char_data@_lcd_config,lcd_4bit_send_enable@_lcd_config
 10922   0052D8  C010  F00C         	movff	lcd_4bit_send_char_data@_lcd_config+1,lcd_4bit_send_enable@_lcd_config+1
 10923   0052DC  EC0A  F02C         	call	_lcd_4bit_send_enable	;wreg free
 10924   0052E0  1612               	andwf	lcd_4bit_send_char_data@ret^0,f,c
 10925   0052E2                     l5966:
 10926                           
 10927                           ;ECU_Layer/Lcd/ecu_lcd.c: 129:     return ret;
 10928   0052E2  5012               	movf	lcd_4bit_send_char_data@ret^0,w,c
 10929   0052E4  0012               	return		;funcret
 10930   0052E6                     __end_of_lcd_4bit_send_char_data:
 10931                           	callstack 0
 10932                           
 10933 ;; *************** function _keypad_get_value *****************
 10934 ;; Defined at:
 10935 ;;		line 76 in file "ECU_Layer/Keypad/ecu_keypad.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;  keypad_confi    2   10[COMRAM] PTR const struct .
 10938 ;;		 -> keypad(8), 
 10939 ;;  value           2   12[COMRAM] PTR unsigned char 
 10940 ;;		 -> keypad_value(1), 
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;  row_counter     1   18[COMRAM] unsigned char 
 10943 ;;  column_value    1   17[COMRAM] enum E2970
 10944 ;;  column_count    1   16[COMRAM] unsigned char 
 10945 ;;  ret             1    0        unsigned char 
 10946 ;; Return value:  Size  Location     Type
 10947 ;;                  1    wreg      unsigned char 
 10948 ;; Registers used:
 10949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10950 ;; Tracked objects:
 10951 ;;		On entry : 0/0
 10952 ;;		On exit  : 0/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10956 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10957 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10958 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10959 ;;Total ram usage:        9 bytes
 10960 ;; Hardware stack levels used: 1
 10961 ;; Hardware stack levels required when called: 1
 10962 ;; This function calls:
 10963 ;;		_gpio_pin_read_logic
 10964 ;;		_gpio_pin_write_logic
 10965 ;; This function is called by:
 10966 ;;		_main
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           	psect	text48
 10971   003A54                     __ptext48:
 10972                           	callstack 0
 10973   003A54                     _keypad_get_value:
 10974                           	callstack 29
 10975   003A54                     
 10976                           ;ECU_Layer/Keypad/ecu_keypad.c: 79:     uint8 row_counter = 0, column_counter = 0;
 10977   003A54  0E00               	movlw	0
 10978   003A56  6E13               	movwf	keypad_get_value@row_counter^0,c
 10979   003A58  0E00               	movlw	0
 10980   003A5A  6E11               	movwf	keypad_get_value@column_counter^0,c
 10981                           
 10982                           ;ECU_Layer/Keypad/ecu_keypad.c: 80:     logic_t column_value = 0;
 10983   003A5C  0E00               	movlw	0
 10984   003A5E  6E12               	movwf	keypad_get_value@column_value^0,c
 10985   003A60                     
 10986                           ;ECU_Layer/Keypad/ecu_keypad.c: 82:     if(((void*)0) == keypad_config || ((void*)0) == 
      +                          value)
 10987   003A60  500B               	movf	keypad_get_value@keypad_config^0,w,c
 10988   003A62  100C               	iorwf	(keypad_get_value@keypad_config+1)^0,w,c
 10989   003A64  B4D8               	btfsc	status,2,c
 10990   003A66  EF37  F01D         	goto	u7041
 10991   003A6A  EF39  F01D         	goto	u7040
 10992   003A6E                     u7041:
 10993   003A6E  EF42  F01D         	goto	l6428
 10994   003A72                     u7040:
 10995   003A72  500D               	movf	keypad_get_value@value^0,w,c
 10996   003A74  100E               	iorwf	(keypad_get_value@value+1)^0,w,c
 10997   003A76  A4D8               	btfss	status,2,c
 10998   003A78  EF40  F01D         	goto	u7051
 10999   003A7C  EF42  F01D         	goto	u7050
 11000   003A80                     u7051:
 11001   003A80  EF44  F01D         	goto	l6430
 11002   003A84                     u7050:
 11003   003A84                     l6428:
 11004                           
 11005                           ;ECU_Layer/Keypad/ecu_keypad.c: 85:     }
 11006   003A84  EF03  F01E         	goto	l183
 11007   003A88                     l6430:
 11008                           
 11009                           ;ECU_Layer/Keypad/ecu_keypad.c: 87:     {;ECU_Layer/Keypad/ecu_keypad.c: 88:         for
      +                          (row_counter = 0; row_counter < 4 ; row_counter++)
 11010   003A88  0E00               	movlw	0
 11011   003A8A  6E13               	movwf	keypad_get_value@row_counter^0,c
 11012   003A8C                     l6436:
 11013                           
 11014                           ;ECU_Layer/Keypad/ecu_keypad.c: 89:         {;ECU_Layer/Keypad/ecu_keypad.c: 90:        
      +                               gpio_pin_write_logic(&(keypad_config->keypad_row[row_counter]), GPIO_LOW);
 11015   003A8C  5013               	movf	keypad_get_value@row_counter^0,w,c
 11016   003A8E  240B               	addwf	keypad_get_value@keypad_config^0,w,c
 11017   003A90  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 11018   003A92  0E00               	movlw	0
 11019   003A94  200C               	addwfc	(keypad_get_value@keypad_config+1)^0,w,c
 11020   003A96  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 11021   003A98  0E00               	movlw	0
 11022   003A9A  6E03               	movwf	gpio_pin_write_logic@_logic^0,c
 11023   003A9C  EC0E  F021         	call	_gpio_pin_write_logic	;wreg free
 11024   003AA0                     
 11025                           ;ECU_Layer/Keypad/ecu_keypad.c: 91:         }
 11026   003AA0  2A13               	incf	keypad_get_value@row_counter^0,f,c
 11027   003AA2  0E03               	movlw	3
 11028   003AA4  6413               	cpfsgt	keypad_get_value@row_counter^0,c
 11029   003AA6  EF57  F01D         	goto	u7061
 11030   003AAA  EF59  F01D         	goto	u7060
 11031   003AAE                     u7061:
 11032   003AAE  EF46  F01D         	goto	l6436
 11033   003AB2                     u7060:
 11034   003AB2                     
 11035                           ;ECU_Layer/Keypad/ecu_keypad.c: 93:         for(row_counter = 0; row_counter < 4 ; row_c
      +                          ounter++)
 11036   003AB2  0E00               	movlw	0
 11037   003AB4  6E13               	movwf	keypad_get_value@row_counter^0,c
 11038   003AB6                     l6448:
 11039                           
 11040                           ;ECU_Layer/Keypad/ecu_keypad.c: 94:         {;ECU_Layer/Keypad/ecu_keypad.c: 95:        
      +                               gpio_pin_write_logic(&(keypad_config->keypad_row[row_counter]), GPIO_HIGH);
 11041   003AB6  5013               	movf	keypad_get_value@row_counter^0,w,c
 11042   003AB8  240B               	addwf	keypad_get_value@keypad_config^0,w,c
 11043   003ABA  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 11044   003ABC  0E00               	movlw	0
 11045   003ABE  200C               	addwfc	(keypad_get_value@keypad_config+1)^0,w,c
 11046   003AC0  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 11047   003AC2  0E01               	movlw	1
 11048   003AC4  6E03               	movwf	gpio_pin_write_logic@_logic^0,c
 11049   003AC6  EC0E  F021         	call	_gpio_pin_write_logic	;wreg free
 11050   003ACA                     
 11051                           ;ECU_Layer/Keypad/ecu_keypad.c: 96:             for(column_counter = 0; column_counter <
      +                           4 ; column_counter++)
 11052   003ACA  0E00               	movlw	0
 11053   003ACC  6E11               	movwf	keypad_get_value@column_counter^0,c
 11054   003ACE                     l6456:
 11055                           
 11056                           ;ECU_Layer/Keypad/ecu_keypad.c: 97:             {;ECU_Layer/Keypad/ecu_keypad.c: 98:    
      +                                       gpio_pin_read_logic(&(keypad_config->keypad_col[column_counter]), &column_v
      +                          alue);
 11057   003ACE  5011               	movf	keypad_get_value@column_counter^0,w,c
 11058   003AD0  240B               	addwf	keypad_get_value@keypad_config^0,w,c
 11059   003AD2  6E0F               	movwf	??_keypad_get_value^0,c
 11060   003AD4  0E00               	movlw	0
 11061   003AD6  200C               	addwfc	(keypad_get_value@keypad_config+1)^0,w,c
 11062   003AD8  6E10               	movwf	(??_keypad_get_value+1)^0,c
 11063   003ADA  0E04               	movlw	4
 11064   003ADC  240F               	addwf	??_keypad_get_value^0,w,c
 11065   003ADE  6E01               	movwf	gpio_pin_read_logic@_pin_config^0,c
 11066   003AE0  0E00               	movlw	0
 11067   003AE2  2010               	addwfc	(??_keypad_get_value+1)^0,w,c
 11068   003AE4  6E02               	movwf	(gpio_pin_read_logic@_pin_config+1)^0,c
 11069   003AE6  0E12               	movlw	low keypad_get_value@column_value
 11070   003AE8  6E03               	movwf	gpio_pin_read_logic@_logic^0,c
 11071   003AEA  0E00               	movlw	high keypad_get_value@column_value
 11072   003AEC  6E04               	movwf	(gpio_pin_read_logic@_logic+1)^0,c
 11073   003AEE  ECE9  F025         	call	_gpio_pin_read_logic	;wreg free
 11074   003AF2                     
 11075                           ;ECU_Layer/Keypad/ecu_keypad.c: 99:                 if(GPIO_HIGH == column_value)
 11076   003AF2  0412               	decf	keypad_get_value@column_value^0,w,c
 11077   003AF4  A4D8               	btfss	status,2,c
 11078   003AF6  EF7F  F01D         	goto	u7071
 11079   003AFA  EF81  F01D         	goto	u7070
 11080   003AFE                     u7071:
 11081   003AFE  EFE7  F01D         	goto	l6474
 11082   003B02                     u7070:
 11083   003B02                     
 11084                           ;ECU_Layer/Keypad/ecu_keypad.c: 100:                 {;ECU_Layer/Keypad/ecu_keypad.c: 10
      +                          1:                     _delay((unsigned long)((10)*(4000000UL/4000.0)));
 11085   003B02  0E0D               	movlw	13
 11086   003B04  6E0F               	movwf	??_keypad_get_value^0,c
 11087   003B06  0EFC               	movlw	252
 11088   003B08                     u8387:
 11089   003B08  2EE8               	decfsz	wreg,f,c
 11090   003B0A  D7FE               	bra	u8387
 11091   003B0C  2E0F               	decfsz	??_keypad_get_value^0,f,c
 11092   003B0E  D7FC               	bra	u8387
 11093   003B10                     
 11094                           ;ECU_Layer/Keypad/ecu_keypad.c: 102:                     gpio_pin_read_logic(&(keypad_co
      +                          nfig->keypad_col[column_counter]), &column_value);
 11095   003B10  5011               	movf	keypad_get_value@column_counter^0,w,c
 11096   003B12  240B               	addwf	keypad_get_value@keypad_config^0,w,c
 11097   003B14  6E0F               	movwf	??_keypad_get_value^0,c
 11098   003B16  0E00               	movlw	0
 11099   003B18  200C               	addwfc	(keypad_get_value@keypad_config+1)^0,w,c
 11100   003B1A  6E10               	movwf	(??_keypad_get_value+1)^0,c
 11101   003B1C  0E04               	movlw	4
 11102   003B1E  240F               	addwf	??_keypad_get_value^0,w,c
 11103   003B20  6E01               	movwf	gpio_pin_read_logic@_pin_config^0,c
 11104   003B22  0E00               	movlw	0
 11105   003B24  2010               	addwfc	(??_keypad_get_value+1)^0,w,c
 11106   003B26  6E02               	movwf	(gpio_pin_read_logic@_pin_config+1)^0,c
 11107   003B28  0E12               	movlw	low keypad_get_value@column_value
 11108   003B2A  6E03               	movwf	gpio_pin_read_logic@_logic^0,c
 11109   003B2C  0E00               	movlw	high keypad_get_value@column_value
 11110   003B2E  6E04               	movwf	(gpio_pin_read_logic@_logic+1)^0,c
 11111   003B30  ECE9  F025         	call	_gpio_pin_read_logic	;wreg free
 11112   003B34                     
 11113                           ;ECU_Layer/Keypad/ecu_keypad.c: 103:                     if(GPIO_HIGH == column_value)
 11114   003B34  0412               	decf	keypad_get_value@column_value^0,w,c
 11115   003B36  A4D8               	btfss	status,2,c
 11116   003B38  EFA0  F01D         	goto	u7081
 11117   003B3C  EFA2  F01D         	goto	u7080
 11118   003B40                     u7081:
 11119   003B40  EFE7  F01D         	goto	l6474
 11120   003B44                     u7080:
 11121   003B44                     
 11122                           ;ECU_Layer/Keypad/ecu_keypad.c: 104:                     {;ECU_Layer/Keypad/ecu_keypad.c
      +                          : 105:                         *value = keypad_elements[row_counter][column_counter];
 11123   003B44  5013               	movf	keypad_get_value@row_counter^0,w,c
 11124   003B46  0D04               	mullw	4
 11125   003B48  0E01               	movlw	low _keypad_elements
 11126   003B4A  24F3               	addwf	243,w,c
 11127   003B4C  6E0F               	movwf	??_keypad_get_value^0,c
 11128   003B4E  0E10               	movlw	high _keypad_elements
 11129   003B50  20F4               	addwfc	prodh,w,c
 11130   003B52  6E10               	movwf	(??_keypad_get_value+1)^0,c
 11131   003B54  5011               	movf	keypad_get_value@column_counter^0,w,c
 11132   003B56  260F               	addwf	??_keypad_get_value^0,f,c
 11133   003B58  0E00               	movlw	0
 11134   003B5A  2210               	addwfc	(??_keypad_get_value+1)^0,f,c
 11135   003B5C  C00F  FFF6         	movff	??_keypad_get_value,tblptrl
 11136   003B60  C010  FFF7         	movff	??_keypad_get_value+1,tblptrh
 11137   003B64                     	if	0	;tblptru may be non-zero
 11138   003B64                     	endif
 11139   003B64                     	if	0	;tblptru may be non-zero
 11140   003B64                     	endif
 11141   003B64  C00D  FFD9         	movff	keypad_get_value@value,fsr2l
 11142   003B68  C00E  FFDA         	movff	keypad_get_value@value+1,fsr2h
 11143   003B6C  0008               	tblrd		*
 11144   003B6E  CFF5 FFDF          	movff	tablat,indf2
 11145   003B72                     
 11146                           ;ECU_Layer/Keypad/ecu_keypad.c: 106:                         gpio_pin_read_logic(&(keypa
      +                          d_config->keypad_col[column_counter]), &column_value);
 11147   003B72  5011               	movf	keypad_get_value@column_counter^0,w,c
 11148   003B74  240B               	addwf	keypad_get_value@keypad_config^0,w,c
 11149   003B76  6E0F               	movwf	??_keypad_get_value^0,c
 11150   003B78  0E00               	movlw	0
 11151   003B7A  200C               	addwfc	(keypad_get_value@keypad_config+1)^0,w,c
 11152   003B7C  6E10               	movwf	(??_keypad_get_value+1)^0,c
 11153   003B7E  0E04               	movlw	4
 11154   003B80  240F               	addwf	??_keypad_get_value^0,w,c
 11155   003B82  6E01               	movwf	gpio_pin_read_logic@_pin_config^0,c
 11156   003B84  0E00               	movlw	0
 11157   003B86  2010               	addwfc	(??_keypad_get_value+1)^0,w,c
 11158   003B88  6E02               	movwf	(gpio_pin_read_logic@_pin_config+1)^0,c
 11159   003B8A  0E12               	movlw	low keypad_get_value@column_value
 11160   003B8C  6E03               	movwf	gpio_pin_read_logic@_logic^0,c
 11161   003B8E  0E00               	movlw	high keypad_get_value@column_value
 11162   003B90  6E04               	movwf	(gpio_pin_read_logic@_logic+1)^0,c
 11163   003B92  ECE9  F025         	call	_gpio_pin_read_logic	;wreg free
 11164                           
 11165                           ;ECU_Layer/Keypad/ecu_keypad.c: 107:                         while(GPIO_HIGH == column_v
      +                          alue)
 11166   003B96  EFDF  F01D         	goto	l6472
 11167   003B9A                     l6470:
 11168                           
 11169                           ;ECU_Layer/Keypad/ecu_keypad.c: 108:                         {;ECU_Layer/Keypad/ecu_keyp
      +                          ad.c: 109:                             gpio_pin_read_logic(&(keypad_config->keypad_col[c
      +                          olumn_counter]), &column_value);
 11170   003B9A  5011               	movf	keypad_get_value@column_counter^0,w,c
 11171   003B9C  240B               	addwf	keypad_get_value@keypad_config^0,w,c
 11172   003B9E  6E0F               	movwf	??_keypad_get_value^0,c
 11173   003BA0  0E00               	movlw	0
 11174   003BA2  200C               	addwfc	(keypad_get_value@keypad_config+1)^0,w,c
 11175   003BA4  6E10               	movwf	(??_keypad_get_value+1)^0,c
 11176   003BA6  0E04               	movlw	4
 11177   003BA8  240F               	addwf	??_keypad_get_value^0,w,c
 11178   003BAA  6E01               	movwf	gpio_pin_read_logic@_pin_config^0,c
 11179   003BAC  0E00               	movlw	0
 11180   003BAE  2010               	addwfc	(??_keypad_get_value+1)^0,w,c
 11181   003BB0  6E02               	movwf	(gpio_pin_read_logic@_pin_config+1)^0,c
 11182   003BB2  0E12               	movlw	low keypad_get_value@column_value
 11183   003BB4  6E03               	movwf	gpio_pin_read_logic@_logic^0,c
 11184   003BB6  0E00               	movlw	high keypad_get_value@column_value
 11185   003BB8  6E04               	movwf	(gpio_pin_read_logic@_logic+1)^0,c
 11186   003BBA  ECE9  F025         	call	_gpio_pin_read_logic	;wreg free
 11187   003BBE                     l6472:
 11188                           
 11189                           ;ECU_Layer/Keypad/ecu_keypad.c: 107:                         while(GPIO_HIGH == column_v
      +                          alue)
 11190   003BBE  0412               	decf	keypad_get_value@column_value^0,w,c
 11191   003BC0  B4D8               	btfsc	status,2,c
 11192   003BC2  EFE5  F01D         	goto	u7091
 11193   003BC6  EFE7  F01D         	goto	u7090
 11194   003BCA                     u7091:
 11195   003BCA  EFCD  F01D         	goto	l6470
 11196   003BCE                     u7090:
 11197   003BCE                     l6474:
 11198                           
 11199                           ;ECU_Layer/Keypad/ecu_keypad.c: 115:             }
 11200   003BCE  2A11               	incf	keypad_get_value@column_counter^0,f,c
 11201   003BD0  0E03               	movlw	3
 11202   003BD2  6411               	cpfsgt	keypad_get_value@column_counter^0,c
 11203   003BD4  EFEE  F01D         	goto	u7101
 11204   003BD8  EFF0  F01D         	goto	u7100
 11205   003BDC                     u7101:
 11206   003BDC  EF67  F01D         	goto	l6456
 11207   003BE0                     u7100:
 11208   003BE0                     
 11209                           ;ECU_Layer/Keypad/ecu_keypad.c: 116:             gpio_pin_write_logic(&(keypad_config->k
      +                          eypad_row[row_counter]), GPIO_LOW);
 11210   003BE0  5013               	movf	keypad_get_value@row_counter^0,w,c
 11211   003BE2  240B               	addwf	keypad_get_value@keypad_config^0,w,c
 11212   003BE4  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 11213   003BE6  0E00               	movlw	0
 11214   003BE8  200C               	addwfc	(keypad_get_value@keypad_config+1)^0,w,c
 11215   003BEA  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 11216   003BEC  0E00               	movlw	0
 11217   003BEE  6E03               	movwf	gpio_pin_write_logic@_logic^0,c
 11218   003BF0  EC0E  F021         	call	_gpio_pin_write_logic	;wreg free
 11219   003BF4                     
 11220                           ;ECU_Layer/Keypad/ecu_keypad.c: 117:         }
 11221   003BF4  2A13               	incf	keypad_get_value@row_counter^0,f,c
 11222   003BF6  0E03               	movlw	3
 11223   003BF8  6413               	cpfsgt	keypad_get_value@row_counter^0,c
 11224   003BFA  EF01  F01E         	goto	u7111
 11225   003BFE  EF03  F01E         	goto	u7110
 11226   003C02                     u7111:
 11227   003C02  EF5B  F01D         	goto	l6448
 11228   003C06                     u7110:
 11229   003C06                     l183:
 11230   003C06  0012               	return		;funcret
 11231   003C08                     __end_of_keypad_get_value:
 11232                           	callstack 0
 11233                           
 11234 ;; *************** function _gpio_pin_read_logic *****************
 11235 ;; Defined at:
 11236 ;;		line 112 in file "Mcal_Layer/GPIO/hal_gpio.c"
 11237 ;; Parameters:    Size  Location     Type
 11238 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 11239 ;;		 -> keypad.keypad_col(4), keypad(8), 
 11240 ;;  _logic          2    2[COMRAM] PTR enum E2970
 11241 ;;		 -> keypad_get_value@column_value(1), button_read_logic@Pin_Logic_Status(1), 
 11242 ;; Auto vars:     Size  Location     Type
 11243 ;;  ret             1    0        unsigned char 
 11244 ;; Return value:  Size  Location     Type
 11245 ;;                  1    wreg      unsigned char 
 11246 ;; Registers used:
 11247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11248 ;; Tracked objects:
 11249 ;;		On entry : 0/0
 11250 ;;		On exit  : 0/0
 11251 ;;		Unchanged: 0/0
 11252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11253 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11255 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11256 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11257 ;;Total ram usage:        9 bytes
 11258 ;; Hardware stack levels used: 1
 11259 ;; This function calls:
 11260 ;;		Nothing
 11261 ;; This function is called by:
 11262 ;;		_keypad_get_value
 11263 ;;		_button_read_logic
 11264 ;; This function uses a non-reentrant model
 11265 ;;
 11266                           
 11267                           	psect	text49
 11268   004BD2                     __ptext49:
 11269                           	callstack 0
 11270   004BD2                     _gpio_pin_read_logic:
 11271                           	callstack 29
 11272   004BD2                     
 11273                           ;Mcal_Layer/GPIO/hal_gpio.c: 115:     if(((void*)0) == _pin_config || _pin_config -> por
      +                          t > 5 - 1 || _pin_config -> pin > 8 - 1)
 11274   004BD2  5001               	movf	gpio_pin_read_logic@_pin_config^0,w,c
 11275   004BD4  1002               	iorwf	(gpio_pin_read_logic@_pin_config+1)^0,w,c
 11276   004BD6  B4D8               	btfsc	status,2,c
 11277   004BD8  EFF0  F025         	goto	u6591
 11278   004BDC  EFF2  F025         	goto	u6590
 11279   004BE0                     u6591:
 11280   004BE0  EF12  F026         	goto	l6210
 11281   004BE4                     u6590:
 11282   004BE4  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
 11283   004BE8  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
 11284   004BEC  50DF               	movf	223,w,c
 11285   004BEE  0B07               	andlw	7
 11286   004BF0  6E05               	movwf	??_gpio_pin_read_logic^0,c
 11287   004BF2  0E05               	movlw	5
 11288   004BF4  6005               	cpfslt	??_gpio_pin_read_logic^0,c
 11289   004BF6  EFFF  F025         	goto	u6601
 11290   004BFA  EF01  F026         	goto	u6600
 11291   004BFE                     u6601:
 11292   004BFE  EF12  F026         	goto	l6210
 11293   004C02                     u6600:
 11294   004C02  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
 11295   004C06  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
 11296   004C0A  30DF               	rrcf	223,w,c
 11297   004C0C  32E8               	rrcf	wreg,f,c
 11298   004C0E  32E8               	rrcf	wreg,f,c
 11299   004C10  0B07               	andlw	7
 11300   004C12  6E05               	movwf	??_gpio_pin_read_logic^0,c
 11301   004C14  0E07               	movlw	7
 11302   004C16  6405               	cpfsgt	??_gpio_pin_read_logic^0,c
 11303   004C18  EF10  F026         	goto	u6611
 11304   004C1C  EF12  F026         	goto	u6610
 11305   004C20                     u6611:
 11306   004C20  EF14  F026         	goto	l6212
 11307   004C24                     u6610:
 11308   004C24                     l6210:
 11309                           
 11310                           ;Mcal_Layer/GPIO/hal_gpio.c: 118:     }
 11311   004C24  EF45  F026         	goto	l491
 11312   004C28                     l6212:
 11313                           
 11314                           ;Mcal_Layer/GPIO/hal_gpio.c: 120:     {;Mcal_Layer/GPIO/hal_gpio.c: 121:         *_logic
      +                           = ( (*port_registers[_pin_config -> port] >> _pin_config -> pin) & (uint8)1 );
 11315   004C28  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
 11316   004C2C  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
 11317   004C30  30DF               	rrcf	223,w,c
 11318   004C32  32E8               	rrcf	wreg,f,c
 11319   004C34  32E8               	rrcf	wreg,f,c
 11320   004C36  0B07               	andlw	7
 11321   004C38  6E05               	movwf	??_gpio_pin_read_logic^0,c
 11322   004C3A  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
 11323   004C3E  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
 11324   004C42  50DF               	movf	223,w,c
 11325   004C44  0B07               	andlw	7
 11326   004C46  6E06               	movwf	(??_gpio_pin_read_logic+1)^0,c
 11327   004C48  5006               	movf	(??_gpio_pin_read_logic+1)^0,w,c
 11328   004C4A  0D02               	mullw	2
 11329   004C4C  0EC8               	movlw	low _port_registers
 11330   004C4E  24F3               	addwf	243,w,c
 11331   004C50  6ED9               	movwf	fsr2l,c
 11332   004C52  0E01               	movlw	high _port_registers
 11333   004C54  20F4               	addwfc	prodh,w,c
 11334   004C56  6EDA               	movwf	fsr2h,c
 11335   004C58  CFDE F007          	movff	postinc2,??_gpio_pin_read_logic+2
 11336   004C5C  CFDD F008          	movff	postdec2,??_gpio_pin_read_logic+3
 11337   004C60  C007  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
 11338   004C64  C008  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
 11339   004C68  50DF               	movf	indf2,w,c
 11340   004C6A  6E09               	movwf	(??_gpio_pin_read_logic+4)^0,c
 11341   004C6C  2A05               	incf	??_gpio_pin_read_logic^0,f,c
 11342   004C6E  EF3B  F026         	goto	u6624
 11343   004C72                     u6625:
 11344   004C72  90D8               	bcf	status,0,c
 11345   004C74  3209               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
 11346   004C76                     u6624:
 11347   004C76  2E05               	decfsz	??_gpio_pin_read_logic^0,f,c
 11348   004C78  EF39  F026         	goto	u6625
 11349   004C7C  5009               	movf	(??_gpio_pin_read_logic+4)^0,w,c
 11350   004C7E  0B01               	andlw	1
 11351   004C80  C003  FFD9         	movff	gpio_pin_read_logic@_logic,fsr2l
 11352   004C84  C004  FFDA         	movff	gpio_pin_read_logic@_logic+1,fsr2h
 11353   004C88  6EDF               	movwf	indf2,c
 11354   004C8A                     l491:
 11355   004C8A  0012               	return		;funcret
 11356   004C8C                     __end_of_gpio_pin_read_logic:
 11357                           	callstack 0
 11358                           
 11359 ;; *************** function _application_init *****************
 11360 ;; Defined at:
 11361 ;;		line 126 in file "application.c"
 11362 ;; Parameters:    Size  Location     Type
 11363 ;;		None
 11364 ;; Auto vars:     Size  Location     Type
 11365 ;;		None
 11366 ;; Return value:  Size  Location     Type
 11367 ;;                  1    wreg      void 
 11368 ;; Registers used:
 11369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11370 ;; Tracked objects:
 11371 ;;		On entry : 0/0
 11372 ;;		On exit  : 0/0
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11379 ;;Total ram usage:        0 bytes
 11380 ;; Hardware stack levels used: 1
 11381 ;; Hardware stack levels required when called: 5
 11382 ;; This function calls:
 11383 ;;		_ecu_layer_init
 11384 ;; This function is called by:
 11385 ;;		_main
 11386 ;; This function uses a non-reentrant model
 11387 ;;
 11388                           
 11389                           	psect	text50
 11390   0059C4                     __ptext50:
 11391                           	callstack 0
 11392   0059C4                     _application_init:
 11393                           	callstack 25
 11394   0059C4                     
 11395                           ;application.c: 128:     ecu_layer_init();
 11396   0059C4  ECD5  F02C         	call	_ecu_layer_init	;wreg free
 11397   0059C8  0012               	return		;funcret
 11398   0059CA                     __end_of_application_init:
 11399                           	callstack 0
 11400                           
 11401 ;; *************** function _ecu_layer_init *****************
 11402 ;; Defined at:
 11403 ;;		line 145 in file "ECU_Layer/ecu_layer_init.c"
 11404 ;; Parameters:    Size  Location     Type
 11405 ;;		None
 11406 ;; Auto vars:     Size  Location     Type
 11407 ;;		None
 11408 ;; Return value:  Size  Location     Type
 11409 ;;                  1    wreg      void 
 11410 ;; Registers used:
 11411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11412 ;; Tracked objects:
 11413 ;;		On entry : 0/0
 11414 ;;		On exit  : 0/0
 11415 ;;		Unchanged: 0/0
 11416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11421 ;;Total ram usage:        0 bytes
 11422 ;; Hardware stack levels used: 1
 11423 ;; Hardware stack levels required when called: 4
 11424 ;; This function calls:
 11425 ;;		_keypad_initialization
 11426 ;;		_lcd_4bit_initialize
 11427 ;; This function is called by:
 11428 ;;		_application_init
 11429 ;; This function uses a non-reentrant model
 11430 ;;
 11431                           
 11432                           	psect	text51
 11433   0059AA                     __ptext51:
 11434                           	callstack 0
 11435   0059AA                     _ecu_layer_init:
 11436                           	callstack 25
 11437   0059AA                     
 11438                           ;ECU_Layer/ecu_layer_init.c: 147:     keypad_initialization(&keypad);
 11439   0059AA  0EDA               	movlw	low _keypad
 11440   0059AC  6E14               	movwf	keypad_initialization@keypad_config^0,c
 11441   0059AE  0E01               	movlw	high _keypad
 11442   0059B0  6E15               	movwf	(keypad_initialization@keypad_config+1)^0,c
 11443   0059B2  EC89  F025         	call	_keypad_initialization	;wreg free
 11444                           
 11445                           ;ECU_Layer/ecu_layer_init.c: 148:     lcd_4bit_initialize(&lcd_2);
 11446   0059B6  0EF5               	movlw	low _lcd_2
 11447   0059B8  6E14               	movwf	lcd_4bit_initialize@_lcd_config^0,c
 11448   0059BA  0E00               	movlw	high _lcd_2
 11449   0059BC  6E15               	movwf	(lcd_4bit_initialize@_lcd_config+1)^0,c
 11450   0059BE  EC59  F020         	call	_lcd_4bit_initialize	;wreg free
 11451   0059C2  0012               	return		;funcret
 11452   0059C4                     __end_of_ecu_layer_init:
 11453                           	callstack 0
 11454                           
 11455 ;; *************** function _lcd_4bit_initialize *****************
 11456 ;; Defined at:
 11457 ;;		line 29 in file "ECU_Layer/Lcd/ecu_lcd.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;  _lcd_config     2   19[COMRAM] PTR const struct .
 11460 ;;		 -> lcd_2(6), 
 11461 ;; Auto vars:     Size  Location     Type
 11462 ;;  l_data_pins_    1   24[COMRAM] unsigned char 
 11463 ;;  ret             1   23[COMRAM] unsigned char 
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  1    wreg      unsigned char 
 11466 ;; Registers used:
 11467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11476 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11477 ;;Total ram usage:        6 bytes
 11478 ;; Hardware stack levels used: 1
 11479 ;; Hardware stack levels required when called: 3
 11480 ;; This function calls:
 11481 ;;		_gpio_pin_direction_init
 11482 ;;		_lcd_4bit_send_command
 11483 ;; This function is called by:
 11484 ;;		_ecu_layer_init
 11485 ;; This function uses a non-reentrant model
 11486 ;;
 11487                           
 11488                           	psect	text52
 11489   0040B2                     __ptext52:
 11490                           	callstack 0
 11491   0040B2                     _lcd_4bit_initialize:
 11492                           	callstack 25
 11493   0040B2                     
 11494                           ;ECU_Layer/Lcd/ecu_lcd.c: 29: Std_ReturnType lcd_4bit_initialize(const lcd_4bit_t * _lcd
      +                          _config);ECU_Layer/Lcd/ecu_lcd.c: 30: {;ECU_Layer/Lcd/ecu_lcd.c: 31:     Std_ReturnType 
      +                          ret = (Std_ReturnType)0x01;
 11495   0040B2  0E01               	movlw	1
 11496   0040B4  6E18               	movwf	lcd_4bit_initialize@ret^0,c
 11497   0040B6                     
 11498                           ;ECU_Layer/Lcd/ecu_lcd.c: 33:     if(((void*)0) == _lcd_config)
 11499   0040B6  5014               	movf	lcd_4bit_initialize@_lcd_config^0,w,c
 11500   0040B8  1015               	iorwf	(lcd_4bit_initialize@_lcd_config+1)^0,w,c
 11501   0040BA  A4D8               	btfss	status,2,c
 11502   0040BC  EF62  F020         	goto	u6371
 11503   0040C0  EF64  F020         	goto	u6370
 11504   0040C4                     u6371:
 11505   0040C4  EF66  F020         	goto	l5914
 11506   0040C8                     u6370:
 11507   0040C8                     l5912:
 11508                           
 11509                           ;ECU_Layer/Lcd/ecu_lcd.c: 36:     }
 11510   0040C8  EF0D  F021         	goto	l217
 11511   0040CC                     l5914:
 11512                           
 11513                           ;ECU_Layer/Lcd/ecu_lcd.c: 38:     {;ECU_Layer/Lcd/ecu_lcd.c: 39:         if( (gpio_pin_d
      +                          irection_init(&(_lcd_config -> lcd_rs))) &&
 11514   0040CC  C014  F00B         	movff	lcd_4bit_initialize@_lcd_config,gpio_pin_direction_init@_pin_config
 11515   0040D0  C015  F00C         	movff	lcd_4bit_initialize@_lcd_config+1,gpio_pin_direction_init@_pin_config+1
 11516   0040D4  ECDE  F01E         	call	_gpio_pin_direction_init	;wreg free
 11517   0040D8  0900               	iorlw	0
 11518   0040DA  B4D8               	btfsc	status,2,c
 11519   0040DC  EF72  F020         	goto	u6381
 11520   0040E0  EF74  F020         	goto	u6380
 11521   0040E4                     u6381:
 11522   0040E4  EF64  F020         	goto	l5912
 11523   0040E8                     u6380:
 11524   0040E8  0E01               	movlw	1
 11525   0040EA  2414               	addwf	lcd_4bit_initialize@_lcd_config^0,w,c
 11526   0040EC  6E0B               	movwf	gpio_pin_direction_init@_pin_config^0,c
 11527   0040EE  0E00               	movlw	0
 11528   0040F0  2015               	addwfc	(lcd_4bit_initialize@_lcd_config+1)^0,w,c
 11529   0040F2  6E0C               	movwf	(gpio_pin_direction_init@_pin_config+1)^0,c
 11530   0040F4  ECDE  F01E         	call	_gpio_pin_direction_init	;wreg free
 11531   0040F8  0900               	iorlw	0
 11532   0040FA  B4D8               	btfsc	status,2,c
 11533   0040FC  EF82  F020         	goto	u6391
 11534   004100  EF84  F020         	goto	u6390
 11535   004104                     u6391:
 11536   004104  EF64  F020         	goto	l5912
 11537   004108                     u6390:
 11538   004108                     
 11539                           ;ECU_Layer/Lcd/ecu_lcd.c: 41:         {;ECU_Layer/Lcd/ecu_lcd.c: 42:             for(l_d
      +                          ata_pins_cnt = 0; l_data_pins_cnt < 4; l_data_pins_cnt++)
 11540   004108  0E00               	movlw	0
 11541   00410A  6E19               	movwf	lcd_4bit_initialize@l_data_pins_cnt^0,c
 11542   00410C                     l5924:
 11543                           
 11544                           ;ECU_Layer/Lcd/ecu_lcd.c: 43:             {;ECU_Layer/Lcd/ecu_lcd.c: 44:                
      +                           if( !(gpio_pin_direction_init(&(_lcd_config -> lcd_data[l_data_pins_cnt]))) )
 11545   00410C  5019               	movf	lcd_4bit_initialize@l_data_pins_cnt^0,w,c
 11546   00410E  2414               	addwf	lcd_4bit_initialize@_lcd_config^0,w,c
 11547   004110  6E16               	movwf	??_lcd_4bit_initialize^0,c
 11548   004112  0E00               	movlw	0
 11549   004114  2015               	addwfc	(lcd_4bit_initialize@_lcd_config+1)^0,w,c
 11550   004116  6E17               	movwf	(??_lcd_4bit_initialize+1)^0,c
 11551   004118  0E02               	movlw	2
 11552   00411A  2416               	addwf	??_lcd_4bit_initialize^0,w,c
 11553   00411C  6E0B               	movwf	gpio_pin_direction_init@_pin_config^0,c
 11554   00411E  0E00               	movlw	0
 11555   004120  2017               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
 11556   004122  6E0C               	movwf	(gpio_pin_direction_init@_pin_config+1)^0,c
 11557   004124  ECDE  F01E         	call	_gpio_pin_direction_init	;wreg free
 11558   004128  0900               	iorlw	0
 11559   00412A  A4D8               	btfss	status,2,c
 11560   00412C  EF9A  F020         	goto	u6401
 11561   004130  EF9C  F020         	goto	u6400
 11562   004134                     u6401:
 11563   004134  EFA0  F020         	goto	l5928
 11564   004138                     u6400:
 11565   004138                     
 11566                           ;ECU_Layer/Lcd/ecu_lcd.c: 45:                 {;ECU_Layer/Lcd/ecu_lcd.c: 46:            
      +                                   ret = (Std_ReturnType)0x00;
 11567   004138  0E00               	movlw	0
 11568   00413A  6E18               	movwf	lcd_4bit_initialize@ret^0,c
 11569                           
 11570                           ;ECU_Layer/Lcd/ecu_lcd.c: 47:                     break;
 11571   00413C  EFA9  F020         	goto	l5932
 11572   004140                     l5928:
 11573                           
 11574                           ;ECU_Layer/Lcd/ecu_lcd.c: 49:             }
 11575   004140  2A19               	incf	lcd_4bit_initialize@l_data_pins_cnt^0,f,c
 11576   004142  0E03               	movlw	3
 11577   004144  6419               	cpfsgt	lcd_4bit_initialize@l_data_pins_cnt^0,c
 11578   004146  EFA7  F020         	goto	u6411
 11579   00414A  EFA9  F020         	goto	u6410
 11580   00414E                     u6411:
 11581   00414E  EF86  F020         	goto	l5924
 11582   004152                     u6410:
 11583   004152                     l5932:
 11584                           
 11585                           ;ECU_Layer/Lcd/ecu_lcd.c: 50:             _delay((unsigned long)((20)*(4000000UL/4000.0)
      +                          ));
 11586   004152  0E1A               	movlw	26
 11587   004154  6E16               	movwf	??_lcd_4bit_initialize^0,c
 11588   004156  0EF8               	movlw	248
 11589   004158                     u8397:
 11590   004158  2EE8               	decfsz	wreg,f,c
 11591   00415A  D7FE               	bra	u8397
 11592   00415C  2E16               	decfsz	??_lcd_4bit_initialize^0,f,c
 11593   00415E  D7FC               	bra	u8397
 11594   004160  D000               	nop2	
 11595   004162                     
 11596                           ;ECU_Layer/Lcd/ecu_lcd.c: 51:             ret &= lcd_4bit_send_command(_lcd_config , 0x3
      +                          8);
 11597   004162  C014  F00F         	movff	lcd_4bit_initialize@_lcd_config,lcd_4bit_send_command@_lcd_config
 11598   004166  C015  F010         	movff	lcd_4bit_initialize@_lcd_config+1,lcd_4bit_send_command@_lcd_config+1
 11599   00416A  0E38               	movlw	56
 11600   00416C  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
 11601   00416E  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
 11602   004172  1618               	andwf	lcd_4bit_initialize@ret^0,f,c
 11603   004174                     
 11604                           ;ECU_Layer/Lcd/ecu_lcd.c: 52:             _delay((unsigned long)((5)*(4000000UL/4000.0))
      +                          );
 11605   004174  0E07               	movlw	7
 11606   004176  6E16               	movwf	??_lcd_4bit_initialize^0,c
 11607   004178  0E7D               	movlw	125
 11608   00417A                     u8407:
 11609   00417A  2EE8               	decfsz	wreg,f,c
 11610   00417C  D7FE               	bra	u8407
 11611   00417E  2E16               	decfsz	??_lcd_4bit_initialize^0,f,c
 11612   004180  D7FC               	bra	u8407
 11613   004182  F000               	nop	
 11614                           
 11615                           ;ECU_Layer/Lcd/ecu_lcd.c: 53:             ret &= lcd_4bit_send_command(_lcd_config , 0x3
      +                          8);
 11616   004184  C014  F00F         	movff	lcd_4bit_initialize@_lcd_config,lcd_4bit_send_command@_lcd_config
 11617   004188  C015  F010         	movff	lcd_4bit_initialize@_lcd_config+1,lcd_4bit_send_command@_lcd_config+1
 11618   00418C  0E38               	movlw	56
 11619   00418E  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
 11620   004190  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
 11621   004194  1618               	andwf	lcd_4bit_initialize@ret^0,f,c
 11622   004196                     
 11623                           ;ECU_Layer/Lcd/ecu_lcd.c: 54:             _delay((unsigned long)((150)*(4000000UL/400000
      +                          0.0)));
 11624   004196  0E32               	movlw	50
 11625   004198                     u8417:
 11626   004198  2EE8               	decfsz	wreg,f,c
 11627   00419A  D7FE               	bra	u8417
 11628   00419C                     
 11629                           ;ECU_Layer/Lcd/ecu_lcd.c: 55:             ret &= lcd_4bit_send_command(_lcd_config , 0x3
      +                          8);
 11630   00419C  C014  F00F         	movff	lcd_4bit_initialize@_lcd_config,lcd_4bit_send_command@_lcd_config
 11631   0041A0  C015  F010         	movff	lcd_4bit_initialize@_lcd_config+1,lcd_4bit_send_command@_lcd_config+1
 11632   0041A4  0E38               	movlw	56
 11633   0041A6  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
 11634   0041A8  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
 11635   0041AC  1618               	andwf	lcd_4bit_initialize@ret^0,f,c
 11636   0041AE                     
 11637                           ;ECU_Layer/Lcd/ecu_lcd.c: 59:             ret &= lcd_4bit_send_command(_lcd_config , 0x0
      +                          1);
 11638   0041AE  C014  F00F         	movff	lcd_4bit_initialize@_lcd_config,lcd_4bit_send_command@_lcd_config
 11639   0041B2  C015  F010         	movff	lcd_4bit_initialize@_lcd_config+1,lcd_4bit_send_command@_lcd_config+1
 11640   0041B6  0E01               	movlw	1
 11641   0041B8  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
 11642   0041BA  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
 11643   0041BE  1618               	andwf	lcd_4bit_initialize@ret^0,f,c
 11644   0041C0                     
 11645                           ;ECU_Layer/Lcd/ecu_lcd.c: 60:             ret &= lcd_4bit_send_command(_lcd_config , 0x0
      +                          2);
 11646   0041C0  C014  F00F         	movff	lcd_4bit_initialize@_lcd_config,lcd_4bit_send_command@_lcd_config
 11647   0041C4  C015  F010         	movff	lcd_4bit_initialize@_lcd_config+1,lcd_4bit_send_command@_lcd_config+1
 11648   0041C8  0E02               	movlw	2
 11649   0041CA  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
 11650   0041CC  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
 11651   0041D0  1618               	andwf	lcd_4bit_initialize@ret^0,f,c
 11652   0041D2                     
 11653                           ;ECU_Layer/Lcd/ecu_lcd.c: 61:             ret &= lcd_4bit_send_command(_lcd_config , 0x0
      +                          6);
 11654   0041D2  C014  F00F         	movff	lcd_4bit_initialize@_lcd_config,lcd_4bit_send_command@_lcd_config
 11655   0041D6  C015  F010         	movff	lcd_4bit_initialize@_lcd_config+1,lcd_4bit_send_command@_lcd_config+1
 11656   0041DA  0E06               	movlw	6
 11657   0041DC  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
 11658   0041DE  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
 11659   0041E2  1618               	andwf	lcd_4bit_initialize@ret^0,f,c
 11660   0041E4                     
 11661                           ;ECU_Layer/Lcd/ecu_lcd.c: 62:             ret &= lcd_4bit_send_command(_lcd_config , 0x0
      +                          C);
 11662   0041E4  C014  F00F         	movff	lcd_4bit_initialize@_lcd_config,lcd_4bit_send_command@_lcd_config
 11663   0041E8  C015  F010         	movff	lcd_4bit_initialize@_lcd_config+1,lcd_4bit_send_command@_lcd_config+1
 11664   0041EC  0E0C               	movlw	12
 11665   0041EE  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
 11666   0041F0  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
 11667   0041F4  1618               	andwf	lcd_4bit_initialize@ret^0,f,c
 11668   0041F6                     
 11669                           ;ECU_Layer/Lcd/ecu_lcd.c: 63:             ret &= lcd_4bit_send_command(_lcd_config , 0x8
      +                          0);
 11670   0041F6  C014  F00F         	movff	lcd_4bit_initialize@_lcd_config,lcd_4bit_send_command@_lcd_config
 11671   0041FA  C015  F010         	movff	lcd_4bit_initialize@_lcd_config+1,lcd_4bit_send_command@_lcd_config+1
 11672   0041FE  0E80               	movlw	128
 11673   004200  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
 11674   004202  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
 11675   004206  1618               	andwf	lcd_4bit_initialize@ret^0,f,c
 11676   004208                     
 11677                           ;ECU_Layer/Lcd/ecu_lcd.c: 64:             ret &= lcd_4bit_send_command(_lcd_config , 0x2
      +                          8);
 11678   004208  C014  F00F         	movff	lcd_4bit_initialize@_lcd_config,lcd_4bit_send_command@_lcd_config
 11679   00420C  C015  F010         	movff	lcd_4bit_initialize@_lcd_config+1,lcd_4bit_send_command@_lcd_config+1
 11680   004210  0E28               	movlw	40
 11681   004212  6E11               	movwf	lcd_4bit_send_command@cmd^0,c
 11682   004214  ECED  F027         	call	_lcd_4bit_send_command	;wreg free
 11683   004218  1618               	andwf	lcd_4bit_initialize@ret^0,f,c
 11684   00421A                     l217:
 11685   00421A  0012               	return		;funcret
 11686   00421C                     __end_of_lcd_4bit_initialize:
 11687                           	callstack 0
 11688                           
 11689 ;; *************** function _lcd_4bit_send_command *****************
 11690 ;; Defined at:
 11691 ;;		line 83 in file "ECU_Layer/Lcd/ecu_lcd.c"
 11692 ;; Parameters:    Size  Location     Type
 11693 ;;  _lcd_config     2   14[COMRAM] PTR const struct .
 11694 ;;		 -> lcd_2(6), 
 11695 ;;  cmd             1   16[COMRAM] unsigned char 
 11696 ;; Auto vars:     Size  Location     Type
 11697 ;;  ret             1   17[COMRAM] unsigned char 
 11698 ;; Return value:  Size  Location     Type
 11699 ;;                  1    wreg      unsigned char 
 11700 ;; Registers used:
 11701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11702 ;; Tracked objects:
 11703 ;;		On entry : 0/0
 11704 ;;		On exit  : 0/0
 11705 ;;		Unchanged: 0/0
 11706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11707 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11710 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11711 ;;Total ram usage:        4 bytes
 11712 ;; Hardware stack levels used: 1
 11713 ;; Hardware stack levels required when called: 2
 11714 ;; This function calls:
 11715 ;;		_gpio_pin_write_logic
 11716 ;;		_lcd_4bit_send_enable
 11717 ;;		_lcd_send_4bit
 11718 ;; This function is called by:
 11719 ;;		_lcd_4bit_initialize
 11720 ;;		_lcd_4bit_send_custom_char
 11721 ;;		_lcd_4bit_set_cursor
 11722 ;;		_main
 11723 ;; This function uses a non-reentrant model
 11724 ;;
 11725                           
 11726                           	psect	text53
 11727   004FDA                     __ptext53:
 11728                           	callstack 0
 11729   004FDA                     _lcd_4bit_send_command:
 11730                           	callstack 26
 11731   004FDA                     
 11732                           ;ECU_Layer/Lcd/ecu_lcd.c: 86:     if(((void*)0) == _lcd_config)
 11733   004FDA  500F               	movf	lcd_4bit_send_command@_lcd_config^0,w,c
 11734   004FDC  1010               	iorwf	(lcd_4bit_send_command@_lcd_config+1)^0,w,c
 11735   004FDE  A4D8               	btfss	status,2,c
 11736   004FE0  EFF4  F027         	goto	u5781
 11737   004FE4  EFF6  F027         	goto	u5780
 11738   004FE8                     u5781:
 11739   004FE8  EFFA  F027         	goto	l5534
 11740   004FEC                     u5780:
 11741   004FEC                     
 11742                           ;ECU_Layer/Lcd/ecu_lcd.c: 87:     {;ECU_Layer/Lcd/ecu_lcd.c: 88:         ret = (Std_Retu
      +                          rnType)0x00;
 11743   004FEC  0E00               	movlw	0
 11744   004FEE  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 11745                           
 11746                           ;ECU_Layer/Lcd/ecu_lcd.c: 89:     }
 11747   004FF0  EF31  F028         	goto	l5540
 11748   004FF4                     l5534:
 11749                           
 11750                           ;ECU_Layer/Lcd/ecu_lcd.c: 91:     {;ECU_Layer/Lcd/ecu_lcd.c: 93:         ret = gpio_pin_
      +                          write_logic(&(_lcd_config -> lcd_rs), GPIO_LOW);
 11751   004FF4  C00F  F001         	movff	lcd_4bit_send_command@_lcd_config,gpio_pin_write_logic@_pin_config
 11752   004FF8  C010  F002         	movff	lcd_4bit_send_command@_lcd_config+1,gpio_pin_write_logic@_pin_config+1
 11753   004FFC  0E00               	movlw	0
 11754   004FFE  6E03               	movwf	gpio_pin_write_logic@_logic^0,c
 11755   005000  EC0E  F021         	call	_gpio_pin_write_logic	;wreg free
 11756   005004  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 11757                           
 11758                           ;ECU_Layer/Lcd/ecu_lcd.c: 94:         ret &= lcd_send_4bit(_lcd_config, (cmd >> 4));
 11759   005006  C00F  F00B         	movff	lcd_4bit_send_command@_lcd_config,lcd_send_4bit@_lcd_config
 11760   00500A  C010  F00C         	movff	lcd_4bit_send_command@_lcd_config+1,lcd_send_4bit@_lcd_config+1
 11761   00500E  3811               	swapf	lcd_4bit_send_command@cmd^0,w,c
 11762   005010  0B0F               	andlw	15
 11763   005012  6E0D               	movwf	lcd_send_4bit@_data_cmd^0,c
 11764   005014  EC46  F026         	call	_lcd_send_4bit	;wreg free
 11765   005018  1612               	andwf	lcd_4bit_send_command@ret^0,f,c
 11766                           
 11767                           ;ECU_Layer/Lcd/ecu_lcd.c: 95:         ret &= lcd_4bit_send_enable(_lcd_config);
 11768   00501A  C00F  F00B         	movff	lcd_4bit_send_command@_lcd_config,lcd_4bit_send_enable@_lcd_config
 11769   00501E  C010  F00C         	movff	lcd_4bit_send_command@_lcd_config+1,lcd_4bit_send_enable@_lcd_config+1
 11770   005022  EC0A  F02C         	call	_lcd_4bit_send_enable	;wreg free
 11771   005026  1612               	andwf	lcd_4bit_send_command@ret^0,f,c
 11772                           
 11773                           ;ECU_Layer/Lcd/ecu_lcd.c: 96:         ret &= lcd_send_4bit(_lcd_config, cmd);
 11774   005028  C00F  F00B         	movff	lcd_4bit_send_command@_lcd_config,lcd_send_4bit@_lcd_config
 11775   00502C  C010  F00C         	movff	lcd_4bit_send_command@_lcd_config+1,lcd_send_4bit@_lcd_config+1
 11776   005030  C011  F00D         	movff	lcd_4bit_send_command@cmd,lcd_send_4bit@_data_cmd
 11777   005034  EC46  F026         	call	_lcd_send_4bit	;wreg free
 11778   005038  1612               	andwf	lcd_4bit_send_command@ret^0,f,c
 11779                           
 11780                           ;ECU_Layer/Lcd/ecu_lcd.c: 97:         ret &= lcd_4bit_send_enable(_lcd_config);
 11781   00503A  C00F  F00B         	movff	lcd_4bit_send_command@_lcd_config,lcd_4bit_send_enable@_lcd_config
 11782   00503E  C010  F00C         	movff	lcd_4bit_send_command@_lcd_config+1,lcd_4bit_send_enable@_lcd_config+1
 11783   005042  EC0A  F02C         	call	_lcd_4bit_send_enable	;wreg free
 11784   005046  1612               	andwf	lcd_4bit_send_command@ret^0,f,c
 11785   005048                     
 11786                           ;ECU_Layer/Lcd/ecu_lcd.c: 98:         _delay((unsigned long)((1)*(4000000UL/4000.0)));
 11787   005048  0EC8               	movlw	200
 11788   00504A                     u8427:
 11789   00504A  D000               	nop2	
 11790   00504C  2EE8               	decfsz	wreg,f,c
 11791   00504E  D7FD               	bra	u8427
 11792   005050                     
 11793                           ;ECU_Layer/Lcd/ecu_lcd.c: 99:         ret = gpio_pin_write_logic(&(_lcd_config -> lcd_rs
      +                          ), GPIO_HIGH);
 11794   005050  C00F  F001         	movff	lcd_4bit_send_command@_lcd_config,gpio_pin_write_logic@_pin_config
 11795   005054  C010  F002         	movff	lcd_4bit_send_command@_lcd_config+1,gpio_pin_write_logic@_pin_config+1
 11796   005058  0E01               	movlw	1
 11797   00505A  6E03               	movwf	gpio_pin_write_logic@_logic^0,c
 11798   00505C  EC0E  F021         	call	_gpio_pin_write_logic	;wreg free
 11799   005060  6E12               	movwf	lcd_4bit_send_command@ret^0,c
 11800   005062                     l5540:
 11801                           
 11802                           ;ECU_Layer/Lcd/ecu_lcd.c: 102:     return ret;
 11803   005062  5012               	movf	lcd_4bit_send_command@ret^0,w,c
 11804   005064  0012               	return		;funcret
 11805   005066                     __end_of_lcd_4bit_send_command:
 11806                           	callstack 0
 11807                           
 11808 ;; *************** function _lcd_send_4bit *****************
 11809 ;; Defined at:
 11810 ;;		line 529 in file "ECU_Layer/Lcd/ecu_lcd.c"
 11811 ;; Parameters:    Size  Location     Type
 11812 ;;  _lcd_config     2   10[COMRAM] PTR const struct .
 11813 ;;		 -> lcd_2(6), 
 11814 ;;  _data_cmd       1   12[COMRAM] unsigned char 
 11815 ;; Auto vars:     Size  Location     Type
 11816 ;;  ret             1   13[COMRAM] unsigned char 
 11817 ;; Return value:  Size  Location     Type
 11818 ;;                  1    wreg      unsigned char 
 11819 ;; Registers used:
 11820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11821 ;; Tracked objects:
 11822 ;;		On entry : 0/0
 11823 ;;		On exit  : 0/0
 11824 ;;		Unchanged: 0/0
 11825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11826 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11829 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11830 ;;Total ram usage:        4 bytes
 11831 ;; Hardware stack levels used: 1
 11832 ;; Hardware stack levels required when called: 1
 11833 ;; This function calls:
 11834 ;;		_gpio_pin_write_logic
 11835 ;; This function is called by:
 11836 ;;		_lcd_4bit_send_command
 11837 ;;		_lcd_4bit_send_char_data
 11838 ;; This function uses a non-reentrant model
 11839 ;;
 11840                           
 11841                           	psect	text54
 11842   004C8C                     __ptext54:
 11843                           	callstack 0
 11844   004C8C                     _lcd_send_4bit:
 11845                           	callstack 26
 11846   004C8C                     
 11847                           ;ECU_Layer/Lcd/ecu_lcd.c: 529: static Std_ReturnType lcd_send_4bit(const lcd_4bit_t * _l
      +                          cd_config, uint8 _data_cmd);ECU_Layer/Lcd/ecu_lcd.c: 530: {;ECU_Layer/Lcd/ecu_lcd.c: 531
      +                          :     Std_ReturnType ret = (Std_ReturnType)0x01;
 11848   004C8C  0E01               	movlw	1
 11849   004C8E  6E0E               	movwf	lcd_send_4bit@ret^0,c
 11850   004C90                     
 11851                           ;ECU_Layer/Lcd/ecu_lcd.c: 533:     if ( (gpio_pin_write_logic(&(_lcd_config->lcd_data[0]
      +                          ), ((_data_cmd >> 0) & (uint8)0x01))) &&
 11852   004C90  0E02               	movlw	2
 11853   004C92  240B               	addwf	lcd_send_4bit@_lcd_config^0,w,c
 11854   004C94  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 11855   004C96  0E00               	movlw	0
 11856   004C98  200C               	addwfc	(lcd_send_4bit@_lcd_config+1)^0,w,c
 11857   004C9A  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 11858   004C9C  500D               	movf	lcd_send_4bit@_data_cmd^0,w,c
 11859   004C9E  0B01               	andlw	1
 11860   004CA0  6E03               	movwf	gpio_pin_write_logic@_logic^0,c
 11861   004CA2  EC0E  F021         	call	_gpio_pin_write_logic	;wreg free
 11862   004CA6  0900               	iorlw	0
 11863   004CA8  B4D8               	btfsc	status,2,c
 11864   004CAA  EF59  F026         	goto	u4681
 11865   004CAE  EF5B  F026         	goto	u4680
 11866   004CB2                     u4681:
 11867   004CB2  EF9B  F026         	goto	l4910
 11868   004CB6                     u4680:
 11869   004CB6  0E03               	movlw	3
 11870   004CB8  240B               	addwf	lcd_send_4bit@_lcd_config^0,w,c
 11871   004CBA  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 11872   004CBC  0E00               	movlw	0
 11873   004CBE  200C               	addwfc	(lcd_send_4bit@_lcd_config+1)^0,w,c
 11874   004CC0  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 11875   004CC2  90D8               	bcf	status,0,c
 11876   004CC4  300D               	rrcf	lcd_send_4bit@_data_cmd^0,w,c
 11877   004CC6  0B01               	andlw	1
 11878   004CC8  6E03               	movwf	gpio_pin_write_logic@_logic^0,c
 11879   004CCA  EC0E  F021         	call	_gpio_pin_write_logic	;wreg free
 11880   004CCE  0900               	iorlw	0
 11881   004CD0  B4D8               	btfsc	status,2,c
 11882   004CD2  EF6D  F026         	goto	u4691
 11883   004CD6  EF6F  F026         	goto	u4690
 11884   004CDA                     u4691:
 11885   004CDA  EF9B  F026         	goto	l4910
 11886   004CDE                     u4690:
 11887   004CDE  0E04               	movlw	4
 11888   004CE0  240B               	addwf	lcd_send_4bit@_lcd_config^0,w,c
 11889   004CE2  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 11890   004CE4  0E00               	movlw	0
 11891   004CE6  200C               	addwfc	(lcd_send_4bit@_lcd_config+1)^0,w,c
 11892   004CE8  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 11893   004CEA  400D               	rrncf	lcd_send_4bit@_data_cmd^0,w,c
 11894   004CEC  42E8               	rrncf	wreg,f,c
 11895   004CEE  0B3F               	andlw	63
 11896   004CF0  0B01               	andlw	1
 11897   004CF2  6E03               	movwf	gpio_pin_write_logic@_logic^0,c
 11898   004CF4  EC0E  F021         	call	_gpio_pin_write_logic	;wreg free
 11899   004CF8  0900               	iorlw	0
 11900   004CFA  B4D8               	btfsc	status,2,c
 11901   004CFC  EF82  F026         	goto	u4701
 11902   004D00  EF84  F026         	goto	u4700
 11903   004D04                     u4701:
 11904   004D04  EF9B  F026         	goto	l4910
 11905   004D08                     u4700:
 11906   004D08  0E05               	movlw	5
 11907   004D0A  240B               	addwf	lcd_send_4bit@_lcd_config^0,w,c
 11908   004D0C  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 11909   004D0E  0E00               	movlw	0
 11910   004D10  200C               	addwfc	(lcd_send_4bit@_lcd_config+1)^0,w,c
 11911   004D12  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 11912   004D14  380D               	swapf	lcd_send_4bit@_data_cmd^0,w,c
 11913   004D16  46E8               	rlncf	wreg,f,c
 11914   004D18  0B1F               	andlw	31
 11915   004D1A  0B01               	andlw	1
 11916   004D1C  6E03               	movwf	gpio_pin_write_logic@_logic^0,c
 11917   004D1E  EC0E  F021         	call	_gpio_pin_write_logic	;wreg free
 11918   004D22  0900               	iorlw	0
 11919   004D24  B4D8               	btfsc	status,2,c
 11920   004D26  EF97  F026         	goto	u4711
 11921   004D2A  EF99  F026         	goto	u4710
 11922   004D2E                     u4711:
 11923   004D2E  EF9B  F026         	goto	l4910
 11924   004D32                     u4710:
 11925   004D32  EF9D  F026         	goto	l318
 11926   004D36                     l4910:
 11927                           
 11928                           ;ECU_Layer/Lcd/ecu_lcd.c: 542:     {;ECU_Layer/Lcd/ecu_lcd.c: 543:         ret= (Std_Ret
      +                          urnType)0x00;
 11929   004D36  0E00               	movlw	0
 11930   004D38  6E0E               	movwf	lcd_send_4bit@ret^0,c
 11931   004D3A                     l318:
 11932                           
 11933                           ;ECU_Layer/Lcd/ecu_lcd.c: 546:     return ret;
 11934   004D3A  500E               	movf	lcd_send_4bit@ret^0,w,c
 11935   004D3C  0012               	return		;funcret
 11936   004D3E                     __end_of_lcd_send_4bit:
 11937                           	callstack 0
 11938                           
 11939 ;; *************** function _lcd_4bit_send_enable *****************
 11940 ;; Defined at:
 11941 ;;		line 549 in file "ECU_Layer/Lcd/ecu_lcd.c"
 11942 ;; Parameters:    Size  Location     Type
 11943 ;;  _lcd_config     2   10[COMRAM] PTR const struct .
 11944 ;;		 -> lcd_2(6), 
 11945 ;; Auto vars:     Size  Location     Type
 11946 ;;  ret             1   12[COMRAM] unsigned char 
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  1    wreg      unsigned char 
 11949 ;; Registers used:
 11950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11951 ;; Tracked objects:
 11952 ;;		On entry : 0/0
 11953 ;;		On exit  : 0/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11959 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11960 ;;Total ram usage:        3 bytes
 11961 ;; Hardware stack levels used: 1
 11962 ;; Hardware stack levels required when called: 1
 11963 ;; This function calls:
 11964 ;;		_gpio_pin_write_logic
 11965 ;; This function is called by:
 11966 ;;		_lcd_4bit_send_command
 11967 ;;		_lcd_4bit_send_char_data
 11968 ;; This function uses a non-reentrant model
 11969 ;;
 11970                           
 11971                           	psect	text55
 11972   005814                     __ptext55:
 11973                           	callstack 0
 11974   005814                     _lcd_4bit_send_enable:
 11975                           	callstack 26
 11976   005814                     
 11977                           ;ECU_Layer/Lcd/ecu_lcd.c: 549: static Std_ReturnType lcd_4bit_send_enable(const lcd_4bit
      +                          _t * _lcd_config);ECU_Layer/Lcd/ecu_lcd.c: 550: {;ECU_Layer/Lcd/ecu_lcd.c: 551:     Std_
      +                          ReturnType ret = (Std_ReturnType)0x01;
 11978   005814  0E01               	movlw	1
 11979   005816  6E0D               	movwf	lcd_4bit_send_enable@ret^0,c
 11980   005818                     
 11981                           ;ECU_Layer/Lcd/ecu_lcd.c: 553:     ret &= gpio_pin_write_logic(&(_lcd_config->lcd_en), G
      +                          PIO_HIGH);
 11982   005818  0E01               	movlw	1
 11983   00581A  240B               	addwf	lcd_4bit_send_enable@_lcd_config^0,w,c
 11984   00581C  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 11985   00581E  0E00               	movlw	0
 11986   005820  200C               	addwfc	(lcd_4bit_send_enable@_lcd_config+1)^0,w,c
 11987   005822  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 11988   005824  0E01               	movlw	1
 11989   005826  6E03               	movwf	gpio_pin_write_logic@_logic^0,c
 11990   005828  EC0E  F021         	call	_gpio_pin_write_logic	;wreg free
 11991   00582C  160D               	andwf	lcd_4bit_send_enable@ret^0,f,c
 11992   00582E                     
 11993                           ;ECU_Layer/Lcd/ecu_lcd.c: 554:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
 11994   00582E  D000               	nop2		;2 cycle nop
 11995   005830  D000               	nop2		;2 cycle nop
 11996   005832  F000               	nop	
 11997   005834                     
 11998                           ;ECU_Layer/Lcd/ecu_lcd.c: 555:     ret &= gpio_pin_write_logic(&(_lcd_config->lcd_en), G
      +                          PIO_LOW);
 11999   005834  0E01               	movlw	1
 12000   005836  240B               	addwf	lcd_4bit_send_enable@_lcd_config^0,w,c
 12001   005838  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 12002   00583A  0E00               	movlw	0
 12003   00583C  200C               	addwfc	(lcd_4bit_send_enable@_lcd_config+1)^0,w,c
 12004   00583E  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
 12005   005840  0E00               	movlw	0
 12006   005842  6E03               	movwf	gpio_pin_write_logic@_logic^0,c
 12007   005844  EC0E  F021         	call	_gpio_pin_write_logic	;wreg free
 12008   005848  160D               	andwf	lcd_4bit_send_enable@ret^0,f,c
 12009                           
 12010                           ;ECU_Layer/Lcd/ecu_lcd.c: 557:     return ret;
 12011   00584A  500D               	movf	lcd_4bit_send_enable@ret^0,w,c
 12012   00584C  0012               	return		;funcret
 12013   00584E                     __end_of_lcd_4bit_send_enable:
 12014                           	callstack 0
 12015                           
 12016 ;; *************** function _keypad_initialization *****************
 12017 ;; Defined at:
 12018 ;;		line 25 in file "ECU_Layer/Keypad/ecu_keypad.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;  keypad_confi    2   19[COMRAM] PTR const struct .
 12021 ;;		 -> keypad(8), 
 12022 ;; Auto vars:     Size  Location     Type
 12023 ;;  cnt             1   24[COMRAM] unsigned char 
 12024 ;;  flg             1   23[COMRAM] unsigned char 
 12025 ;;  ret             1    0        unsigned char 
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  1    wreg      unsigned char 
 12028 ;; Registers used:
 12029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12030 ;; Tracked objects:
 12031 ;;		On entry : 0/0
 12032 ;;		On exit  : 0/0
 12033 ;;		Unchanged: 0/0
 12034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;Total ram usage:        6 bytes
 12040 ;; Hardware stack levels used: 1
 12041 ;; Hardware stack levels required when called: 2
 12042 ;; This function calls:
 12043 ;;		_gpio_pin_direction_init
 12044 ;; This function is called by:
 12045 ;;		_ecu_layer_init
 12046 ;; This function uses a non-reentrant model
 12047 ;;
 12048                           
 12049                           	psect	text56
 12050   004B12                     __ptext56:
 12051                           	callstack 0
 12052   004B12                     _keypad_initialization:
 12053                           	callstack 26
 12054   004B12                     
 12055                           ;ECU_Layer/Keypad/ecu_keypad.c: 28:     uint8 cnt = 0, flg = 0;
 12056   004B12  0E00               	movlw	0
 12057   004B14  6E19               	movwf	keypad_initialization@cnt^0,c
 12058   004B16  0E00               	movlw	0
 12059   004B18  6E18               	movwf	keypad_initialization@flg^0,c
 12060   004B1A                     
 12061                           ;ECU_Layer/Keypad/ecu_keypad.c: 29:     if(((void*)0) == keypad_config)
 12062   004B1A  5014               	movf	keypad_initialization@keypad_config^0,w,c
 12063   004B1C  1015               	iorwf	(keypad_initialization@keypad_config+1)^0,w,c
 12064   004B1E  A4D8               	btfss	status,2,c
 12065   004B20  EF94  F025         	goto	u6311
 12066   004B24  EF96  F025         	goto	u6310
 12067   004B28                     u6311:
 12068   004B28  EF98  F025         	goto	l5870
 12069   004B2C                     u6310:
 12070   004B2C                     
 12071                           ;ECU_Layer/Keypad/ecu_keypad.c: 32:     }
 12072   004B2C  EFE8  F025         	goto	l165
 12073   004B30                     l5870:
 12074                           
 12075                           ;ECU_Layer/Keypad/ecu_keypad.c: 34:     {;ECU_Layer/Keypad/ecu_keypad.c: 35:         for
      +                          (cnt = 0; cnt < 4; cnt++)
 12076   004B30  0E00               	movlw	0
 12077   004B32  6E19               	movwf	keypad_initialization@cnt^0,c
 12078   004B34                     l5876:
 12079                           
 12080                           ;ECU_Layer/Keypad/ecu_keypad.c: 36:         {;ECU_Layer/Keypad/ecu_keypad.c: 37:        
      +                               if(gpio_pin_direction_init(&(keypad_config->keypad_row[cnt])))
 12081   004B34  5019               	movf	keypad_initialization@cnt^0,w,c
 12082   004B36  2414               	addwf	keypad_initialization@keypad_config^0,w,c
 12083   004B38  6E0B               	movwf	gpio_pin_direction_init@_pin_config^0,c
 12084   004B3A  0E00               	movlw	0
 12085   004B3C  2015               	addwfc	(keypad_initialization@keypad_config+1)^0,w,c
 12086   004B3E  6E0C               	movwf	(gpio_pin_direction_init@_pin_config+1)^0,c
 12087   004B40  ECDE  F01E         	call	_gpio_pin_direction_init	;wreg free
 12088   004B44  0900               	iorlw	0
 12089   004B46  B4D8               	btfsc	status,2,c
 12090   004B48  EFA8  F025         	goto	u6321
 12091   004B4C  EFAA  F025         	goto	u6320
 12092   004B50                     u6321:
 12093   004B50  EFAC  F025         	goto	l5882
 12094   004B54                     u6320:
 12095   004B54  EFB0  F025         	goto	l5884
 12096   004B58                     l5882:
 12097                           
 12098                           ;ECU_Layer/Keypad/ecu_keypad.c: 44:                 flg = 1;
 12099   004B58  0E01               	movlw	1
 12100   004B5A  6E18               	movwf	keypad_initialization@flg^0,c
 12101                           
 12102                           ;ECU_Layer/Keypad/ecu_keypad.c: 45:                 break;
 12103   004B5C  EFB9  F025         	goto	l5888
 12104   004B60                     l5884:
 12105   004B60  2A19               	incf	keypad_initialization@cnt^0,f,c
 12106   004B62  0E03               	movlw	3
 12107   004B64  6419               	cpfsgt	keypad_initialization@cnt^0,c
 12108   004B66  EFB7  F025         	goto	u6331
 12109   004B6A  EFB9  F025         	goto	u6330
 12110   004B6E                     u6331:
 12111   004B6E  EF9A  F025         	goto	l5876
 12112   004B72                     u6330:
 12113   004B72                     l5888:
 12114                           
 12115                           ;ECU_Layer/Keypad/ecu_keypad.c: 48:         if(flg == 0)
 12116   004B72  5018               	movf	keypad_initialization@flg^0,w,c
 12117   004B74  A4D8               	btfss	status,2,c
 12118   004B76  EFBF  F025         	goto	u6341
 12119   004B7A  EFC1  F025         	goto	u6340
 12120   004B7E                     u6341:
 12121   004B7E  EFE8  F025         	goto	l165
 12122   004B82                     u6340:
 12123   004B82                     
 12124                           ;ECU_Layer/Keypad/ecu_keypad.c: 49:         {;ECU_Layer/Keypad/ecu_keypad.c: 50:        
      +                               for(cnt = 0; cnt < 4; cnt++)
 12125   004B82  0E00               	movlw	0
 12126   004B84  6E19               	movwf	keypad_initialization@cnt^0,c
 12127   004B86                     l5896:
 12128                           
 12129                           ;ECU_Layer/Keypad/ecu_keypad.c: 51:             {;ECU_Layer/Keypad/ecu_keypad.c: 52:    
      +                                       if(gpio_pin_direction_init(&(keypad_config->keypad_col[cnt])))
 12130   004B86  5019               	movf	keypad_initialization@cnt^0,w,c
 12131   004B88  2414               	addwf	keypad_initialization@keypad_config^0,w,c
 12132   004B8A  6E16               	movwf	??_keypad_initialization^0,c
 12133   004B8C  0E00               	movlw	0
 12134   004B8E  2015               	addwfc	(keypad_initialization@keypad_config+1)^0,w,c
 12135   004B90  6E17               	movwf	(??_keypad_initialization+1)^0,c
 12136   004B92  0E04               	movlw	4
 12137   004B94  2416               	addwf	??_keypad_initialization^0,w,c
 12138   004B96  6E0B               	movwf	gpio_pin_direction_init@_pin_config^0,c
 12139   004B98  0E00               	movlw	0
 12140   004B9A  2017               	addwfc	(??_keypad_initialization+1)^0,w,c
 12141   004B9C  6E0C               	movwf	(gpio_pin_direction_init@_pin_config+1)^0,c
 12142   004B9E  ECDE  F01E         	call	_gpio_pin_direction_init	;wreg free
 12143   004BA2  0900               	iorlw	0
 12144   004BA4  B4D8               	btfsc	status,2,c
 12145   004BA6  EFD7  F025         	goto	u6351
 12146   004BAA  EFD9  F025         	goto	u6350
 12147   004BAE                     u6351:
 12148   004BAE  EFDB  F025         	goto	l5902
 12149   004BB2                     u6350:
 12150   004BB2  EFDF  F025         	goto	l5904
 12151   004BB6                     l5902:
 12152                           
 12153                           ;ECU_Layer/Keypad/ecu_keypad.c: 59:                     flg = 1;
 12154   004BB6  0E01               	movlw	1
 12155   004BB8  6E18               	movwf	keypad_initialization@flg^0,c
 12156                           
 12157                           ;ECU_Layer/Keypad/ecu_keypad.c: 60:                     break;
 12158   004BBA  EFE8  F025         	goto	l165
 12159   004BBE                     l5904:
 12160   004BBE  2A19               	incf	keypad_initialization@cnt^0,f,c
 12161   004BC0  0E03               	movlw	3
 12162   004BC2  6419               	cpfsgt	keypad_initialization@cnt^0,c
 12163   004BC4  EFE6  F025         	goto	u6361
 12164   004BC8  EFE8  F025         	goto	u6360
 12165   004BCC                     u6361:
 12166   004BCC  EFC3  F025         	goto	l5896
 12167   004BD0                     u6360:
 12168   004BD0                     l165:
 12169   004BD0  0012               	return		;funcret
 12170   004BD2                     __end_of_keypad_initialization:
 12171                           	callstack 0
 12172                           
 12173 ;; *************** function _gpio_pin_direction_init *****************
 12174 ;; Defined at:
 12175 ;;		line 24 in file "Mcal_Layer/GPIO/hal_gpio.c"
 12176 ;; Parameters:    Size  Location     Type
 12177 ;;  _pin_config     2   10[COMRAM] PTR const struct .
 12178 ;;		 -> keypad.keypad_col(4), keypad.keypad_row(4), keypad(8), lcd_2.lcd_data(4), 
 12179 ;;		 -> lcd_2(6), relay_initialization@relay(1), led_initialization@pin_obj(1), 
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;  ret             1   18[COMRAM] unsigned char 
 12182 ;; Return value:  Size  Location     Type
 12183 ;;                  1    wreg      unsigned char 
 12184 ;; Registers used:
 12185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12186 ;; Tracked objects:
 12187 ;;		On entry : 0/0
 12188 ;;		On exit  : 0/0
 12189 ;;		Unchanged: 0/0
 12190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12193 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12194 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12195 ;;Total ram usage:        9 bytes
 12196 ;; Hardware stack levels used: 1
 12197 ;; Hardware stack levels required when called: 1
 12198 ;; This function calls:
 12199 ;;		_gpio_pin_write_logic
 12200 ;; This function is called by:
 12201 ;;		_keypad_initialization
 12202 ;;		_lcd_4bit_initialize
 12203 ;;		_seven_segment_initialize
 12204 ;;		_seven_segment_control_initialize
 12205 ;;		_button_initialization
 12206 ;;		_buzzer_initialization
 12207 ;;		_dc_motor_initialization
 12208 ;;		_lcd_8bit_initialize
 12209 ;;		_led_initialization
 12210 ;;		_relay_initialization
 12211 ;; This function uses a non-reentrant model
 12212 ;;
 12213                           
 12214                           	psect	text57
 12215   003DBC                     __ptext57:
 12216                           	callstack 0
 12217   003DBC                     _gpio_pin_direction_init:
 12218                           	callstack 26
 12219   003DBC                     
 12220                           ;Mcal_Layer/GPIO/hal_gpio.c: 24: Std_ReturnType gpio_pin_direction_init(const pin_config
      +                          _t * _pin_config);Mcal_Layer/GPIO/hal_gpio.c: 25: {;Mcal_Layer/GPIO/hal_gpio.c: 26:     
      +                          Std_ReturnType ret = (Std_ReturnType)0x01;
 12221   003DBC  0E01               	movlw	1
 12222   003DBE  6E13               	movwf	gpio_pin_direction_init@ret^0,c
 12223   003DC0                     
 12224                           ;Mcal_Layer/GPIO/hal_gpio.c: 27:     if(((void*)0) == _pin_config || _pin_config -> port
      +                           > 5 - 1 || _pin_config -> pin > 8 - 1)
 12225   003DC0  500B               	movf	gpio_pin_direction_init@_pin_config^0,w,c
 12226   003DC2  100C               	iorwf	(gpio_pin_direction_init@_pin_config+1)^0,w,c
 12227   003DC4  B4D8               	btfsc	status,2,c
 12228   003DC6  EFE7  F01E         	goto	u5711
 12229   003DCA  EFE9  F01E         	goto	u5710
 12230   003DCE                     u5711:
 12231   003DCE  EF09  F01F         	goto	l5508
 12232   003DD2                     u5710:
 12233   003DD2  C00B  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
 12234   003DD6  C00C  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
 12235   003DDA  50DF               	movf	223,w,c
 12236   003DDC  0B07               	andlw	7
 12237   003DDE  6E0D               	movwf	??_gpio_pin_direction_init^0,c
 12238   003DE0  0E05               	movlw	5
 12239   003DE2  600D               	cpfslt	??_gpio_pin_direction_init^0,c
 12240   003DE4  EFF6  F01E         	goto	u5721
 12241   003DE8  EFF8  F01E         	goto	u5720
 12242   003DEC                     u5721:
 12243   003DEC  EF09  F01F         	goto	l5508
 12244   003DF0                     u5720:
 12245   003DF0  C00B  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
 12246   003DF4  C00C  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
 12247   003DF8  30DF               	rrcf	223,w,c
 12248   003DFA  32E8               	rrcf	wreg,f,c
 12249   003DFC  32E8               	rrcf	wreg,f,c
 12250   003DFE  0B07               	andlw	7
 12251   003E00  6E0D               	movwf	??_gpio_pin_direction_init^0,c
 12252   003E02  0E07               	movlw	7
 12253   003E04  640D               	cpfsgt	??_gpio_pin_direction_init^0,c
 12254   003E06  EF07  F01F         	goto	u5731
 12255   003E0A  EF09  F01F         	goto	u5730
 12256   003E0E                     u5731:
 12257   003E0E  EF7B  F01F         	goto	l5518
 12258   003E12                     u5730:
 12259   003E12                     l5508:
 12260                           
 12261                           ;Mcal_Layer/GPIO/hal_gpio.c: 28:     {;Mcal_Layer/GPIO/hal_gpio.c: 29:         ret = (St
      +                          d_ReturnType)0x00;
 12262   003E12  0E00               	movlw	0
 12263   003E14  6E13               	movwf	gpio_pin_direction_init@ret^0,c
 12264                           
 12265                           ;Mcal_Layer/GPIO/hal_gpio.c: 30:     }
 12266   003E16  EF9C  F01F         	goto	l5520
 12267   003E1A                     l5510:
 12268                           
 12269                           ;Mcal_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config -> port] &
      +                          = ~((uint8)1 << _pin_config -> pin));
 12270   003E1A  C00B  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
 12271   003E1E  C00C  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
 12272   003E22  30DF               	rrcf	223,w,c
 12273   003E24  32E8               	rrcf	wreg,f,c
 12274   003E26  32E8               	rrcf	wreg,f,c
 12275   003E28  0B07               	andlw	7
 12276   003E2A  6E0D               	movwf	??_gpio_pin_direction_init^0,c
 12277   003E2C  0E01               	movlw	1
 12278   003E2E  6E0E               	movwf	(??_gpio_pin_direction_init+1)^0,c
 12279   003E30  2A0D               	incf	??_gpio_pin_direction_init^0,f,c
 12280   003E32  EF1D  F01F         	goto	u5744
 12281   003E36                     u5745:
 12282   003E36  90D8               	bcf	status,0,c
 12283   003E38  360E               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
 12284   003E3A                     u5744:
 12285   003E3A  2E0D               	decfsz	??_gpio_pin_direction_init^0,f,c
 12286   003E3C  EF1B  F01F         	goto	u5745
 12287   003E40  500E               	movf	(??_gpio_pin_direction_init+1)^0,w,c
 12288   003E42  0AFF               	xorlw	255
 12289   003E44  6E0F               	movwf	(??_gpio_pin_direction_init+2)^0,c
 12290   003E46  C00B  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
 12291   003E4A  C00C  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
 12292   003E4E  50DF               	movf	223,w,c
 12293   003E50  0B07               	andlw	7
 12294   003E52  6E10               	movwf	(??_gpio_pin_direction_init+3)^0,c
 12295   003E54  5010               	movf	(??_gpio_pin_direction_init+3)^0,w,c
 12296   003E56  0D02               	mullw	2
 12297   003E58  0EEA               	movlw	low _tris_registers
 12298   003E5A  24F3               	addwf	243,w,c
 12299   003E5C  6ED9               	movwf	fsr2l,c
 12300   003E5E  0E00               	movlw	high _tris_registers
 12301   003E60  20F4               	addwfc	prodh,w,c
 12302   003E62  6EDA               	movwf	fsr2h,c
 12303   003E64  CFDE F011          	movff	postinc2,??_gpio_pin_direction_init+4
 12304   003E68  CFDD F012          	movff	postdec2,??_gpio_pin_direction_init+5
 12305   003E6C  C011  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
 12306   003E70  C012  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
 12307   003E74  500F               	movf	(??_gpio_pin_direction_init+2)^0,w,c
 12308   003E76  16DF               	andwf	indf2,f,c
 12309   003E78                     
 12310                           ;Mcal_Layer/GPIO/hal_gpio.c: 37:                 ret = gpio_pin_write_logic(_pin_config,
      +                           _pin_config -> logic);
 12311   003E78  C00B  F001         	movff	gpio_pin_direction_init@_pin_config,gpio_pin_write_logic@_pin_config
 12312   003E7C  C00C  F002         	movff	gpio_pin_direction_init@_pin_config+1,gpio_pin_write_logic@_pin_config+1
 12313   003E80  C00B  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
 12314   003E84  C00C  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
 12315   003E88  0E00               	movlw	0
 12316   003E8A  BEDF               	btfsc	indf2,7,c
 12317   003E8C  0E01               	movlw	1
 12318   003E8E  6E03               	movwf	gpio_pin_write_logic@_logic^0,c
 12319   003E90  EC0E  F021         	call	_gpio_pin_write_logic	;wreg free
 12320   003E94  6E13               	movwf	gpio_pin_direction_init@ret^0,c
 12321                           
 12322                           ;Mcal_Layer/GPIO/hal_gpio.c: 38:                 break;
 12323   003E96  EF9C  F01F         	goto	l5520
 12324   003E9A                     l5514:
 12325                           
 12326                           ;Mcal_Layer/GPIO/hal_gpio.c: 40:                 (*tris_registers[_pin_config -> port] |
      +                          = ((uint8)1 << _pin_config -> pin));
 12327   003E9A  C00B  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
 12328   003E9E  C00C  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
 12329   003EA2  30DF               	rrcf	223,w,c
 12330   003EA4  32E8               	rrcf	wreg,f,c
 12331   003EA6  32E8               	rrcf	wreg,f,c
 12332   003EA8  0B07               	andlw	7
 12333   003EAA  6E0D               	movwf	??_gpio_pin_direction_init^0,c
 12334   003EAC  0E01               	movlw	1
 12335   003EAE  6E0E               	movwf	(??_gpio_pin_direction_init+1)^0,c
 12336   003EB0  2A0D               	incf	??_gpio_pin_direction_init^0,f,c
 12337   003EB2  EF5D  F01F         	goto	u5754
 12338   003EB6                     u5755:
 12339   003EB6  90D8               	bcf	status,0,c
 12340   003EB8  360E               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
 12341   003EBA                     u5754:
 12342   003EBA  2E0D               	decfsz	??_gpio_pin_direction_init^0,f,c
 12343   003EBC  EF5B  F01F         	goto	u5755
 12344   003EC0  C00B  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
 12345   003EC4  C00C  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
 12346   003EC8  50DF               	movf	223,w,c
 12347   003ECA  0B07               	andlw	7
 12348   003ECC  6E0F               	movwf	(??_gpio_pin_direction_init+2)^0,c
 12349   003ECE  500F               	movf	(??_gpio_pin_direction_init+2)^0,w,c
 12350   003ED0  0D02               	mullw	2
 12351   003ED2  0EEA               	movlw	low _tris_registers
 12352   003ED4  24F3               	addwf	243,w,c
 12353   003ED6  6ED9               	movwf	fsr2l,c
 12354   003ED8  0E00               	movlw	high _tris_registers
 12355   003EDA  20F4               	addwfc	prodh,w,c
 12356   003EDC  6EDA               	movwf	fsr2h,c
 12357   003EDE  CFDE F010          	movff	postinc2,??_gpio_pin_direction_init+3
 12358   003EE2  CFDD F011          	movff	postdec2,??_gpio_pin_direction_init+4
 12359   003EE6  C010  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
 12360   003EEA  C011  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
 12361   003EEE  500E               	movf	(??_gpio_pin_direction_init+1)^0,w,c
 12362   003EF0  12DF               	iorwf	indf2,f,c
 12363                           
 12364                           ;Mcal_Layer/GPIO/hal_gpio.c: 41:                 break;
 12365   003EF2  EF9C  F01F         	goto	l5520
 12366   003EF6                     l5518:
 12367   003EF6  C00B  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
 12368   003EFA  C00C  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
 12369   003EFE  BCDF               	btfsc	indf2,6,c
 12370   003F00  EF84  F01F         	goto	u5761
 12371   003F04  EF87  F01F         	goto	u5760
 12372   003F08                     u5761:
 12373   003F08  0E01               	movlw	1
 12374   003F0A  EF88  F01F         	goto	u5770
 12375   003F0E                     u5760:
 12376   003F0E  0E00               	movlw	0
 12377   003F10                     u5770:
 12378   003F10  6E0D               	movwf	??_gpio_pin_direction_init^0,c
 12379   003F12  6A0E               	clrf	(??_gpio_pin_direction_init+1)^0,c
 12380                           
 12381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12382                           ; Switch size 1, requested type "simple"
 12383                           ; Number of cases is 1, Range of values is 0 to 0
 12384                           ; switch strategies available:
 12385                           ; Name         Instructions Cycles
 12386                           ; simple_byte            4     3 (average)
 12387                           ;	Chosen strategy is simple_byte
 12388   003F14  500E               	movf	(??_gpio_pin_direction_init+1)^0,w,c
 12389   003F16  0A00               	xorlw	0	; case 0
 12390   003F18  B4D8               	btfsc	status,2,c
 12391   003F1A  EF91  F01F         	goto	l7704
 12392   003F1E  EF09  F01F         	goto	l5508
 12393   003F22                     l7704:
 12394                           
 12395                           ; Switch size 1, requested type "simple"
 12396                           ; Number of cases is 2, Range of values is 0 to 1
 12397                           ; switch strategies available:
 12398                           ; Name         Instructions Cycles
 12399                           ; simple_byte            7     4 (average)
 12400                           ;	Chosen strategy is simple_byte
 12401   003F22  500D               	movf	??_gpio_pin_direction_init^0,w,c
 12402   003F24  0A00               	xorlw	0	; case 0
 12403   003F26  B4D8               	btfsc	status,2,c
 12404   003F28  EF0D  F01F         	goto	l5510
 12405   003F2C  0A01               	xorlw	1	; case 1
 12406   003F2E  B4D8               	btfsc	status,2,c
 12407   003F30  EF4D  F01F         	goto	l5514
 12408   003F34  EF09  F01F         	goto	l5508
 12409   003F38                     l5520:
 12410                           
 12411                           ;Mcal_Layer/GPIO/hal_gpio.c: 45:     return ret;
 12412   003F38  5013               	movf	gpio_pin_direction_init@ret^0,w,c
 12413   003F3A  0012               	return		;funcret
 12414   003F3C                     __end_of_gpio_pin_direction_init:
 12415                           	callstack 0
 12416                           
 12417 ;; *************** function _gpio_pin_write_logic *****************
 12418 ;; Defined at:
 12419 ;;		line 80 in file "Mcal_Layer/GPIO/hal_gpio.c"
 12420 ;; Parameters:    Size  Location     Type
 12421 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 12422 ;;		 -> keypad.keypad_col(4), keypad.keypad_row(4), keypad(8), lcd_2.lcd_data(4), 
 12423 ;;		 -> lcd_2(6), relay_off@relay(1), relay_on@relay(1), relay_initialization@relay(1), 
 12424 ;;		 -> led_off@pin_obj(1), led_on@pin_obj(1), led_initialization@pin_obj(1), 
 12425 ;;  _logic          1    2[COMRAM] enum E2970
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;  ret             1    9[COMRAM] unsigned char 
 12428 ;; Return value:  Size  Location     Type
 12429 ;;                  1    wreg      unsigned char 
 12430 ;; Registers used:
 12431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12432 ;; Tracked objects:
 12433 ;;		On entry : 0/0
 12434 ;;		On exit  : 0/0
 12435 ;;		Unchanged: 0/0
 12436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12437 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12439 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12440 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12441 ;;Total ram usage:       10 bytes
 12442 ;; Hardware stack levels used: 1
 12443 ;; This function calls:
 12444 ;;		Nothing
 12445 ;; This function is called by:
 12446 ;;		_keypad_get_value
 12447 ;;		_lcd_4bit_send_command
 12448 ;;		_lcd_4bit_send_char_data
 12449 ;;		_lcd_send_4bit
 12450 ;;		_lcd_4bit_send_enable
 12451 ;;		_gpio_pin_direction_init
 12452 ;;		_seven_segment_write_number
 12453 ;;		_seven_segment_control_turn_on
 12454 ;;		_seven_segment_control_turn_off
 12455 ;;		_buzzer_on
 12456 ;;		_buzzer_off
 12457 ;;		_buzzer_beeb
 12458 ;;		_dc_motor_move_left
 12459 ;;		_dc_motor_move_right
 12460 ;;		_dc_motor_move_stop
 12461 ;;		_lcd_8bit_send_command
 12462 ;;		_lcd_8bit_send_char_data
 12463 ;;		_lcd_8bit_send_enable
 12464 ;;		_led_on
 12465 ;;		_led_off
 12466 ;;		_relay_on
 12467 ;;		_relay_off
 12468 ;; This function uses a non-reentrant model
 12469 ;;
 12470                           
 12471                           	psect	text58
 12472   00421C                     __ptext58:
 12473                           	callstack 0
 12474   00421C                     _gpio_pin_write_logic:
 12475                           	callstack 26
 12476   00421C                     
 12477                           ;Mcal_Layer/GPIO/hal_gpio.c: 80: Std_ReturnType gpio_pin_write_logic(const pin_config_t 
      +                          * _pin_config, logic_t _logic);Mcal_Layer/GPIO/hal_gpio.c: 81: {;Mcal_Layer/GPIO/hal_gpi
      +                          o.c: 82:     Std_ReturnType ret = (Std_ReturnType)0x01;
 12478   00421C  0E01               	movlw	1
 12479   00421E  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
 12480   004220                     
 12481                           ;Mcal_Layer/GPIO/hal_gpio.c: 83:     if(((void*)0) == _pin_config || _pin_config -> port
      +                           > 5 - 1 || _pin_config -> pin > 8 - 1)
 12482   004220  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
 12483   004222  1002               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
 12484   004224  B4D8               	btfsc	status,2,c
 12485   004226  EF17  F021         	goto	u4231
 12486   00422A  EF19  F021         	goto	u4230
 12487   00422E                     u4231:
 12488   00422E  EF39  F021         	goto	l4670
 12489   004232                     u4230:
 12490   004232  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 12491   004236  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 12492   00423A  50DF               	movf	223,w,c
 12493   00423C  0B07               	andlw	7
 12494   00423E  6E04               	movwf	??_gpio_pin_write_logic^0,c
 12495   004240  0E05               	movlw	5
 12496   004242  6004               	cpfslt	??_gpio_pin_write_logic^0,c
 12497   004244  EF26  F021         	goto	u4241
 12498   004248  EF28  F021         	goto	u4240
 12499   00424C                     u4241:
 12500   00424C  EF39  F021         	goto	l4670
 12501   004250                     u4240:
 12502   004250  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 12503   004254  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 12504   004258  30DF               	rrcf	223,w,c
 12505   00425A  32E8               	rrcf	wreg,f,c
 12506   00425C  32E8               	rrcf	wreg,f,c
 12507   00425E  0B07               	andlw	7
 12508   004260  6E04               	movwf	??_gpio_pin_write_logic^0,c
 12509   004262  0E07               	movlw	7
 12510   004264  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
 12511   004266  EF37  F021         	goto	u4251
 12512   00426A  EF39  F021         	goto	u4250
 12513   00426E                     u4251:
 12514   00426E  EF9C  F021         	goto	l4678
 12515   004272                     u4250:
 12516   004272                     l4670:
 12517                           
 12518                           ;Mcal_Layer/GPIO/hal_gpio.c: 84:     {;Mcal_Layer/GPIO/hal_gpio.c: 85:         ret = (St
      +                          d_ReturnType)0x00;
 12519   004272  0E00               	movlw	0
 12520   004274  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
 12521                           
 12522                           ;Mcal_Layer/GPIO/hal_gpio.c: 86:     }
 12523   004276  EFB1  F021         	goto	l4680
 12524   00427A                     l4672:
 12525                           
 12526                           ;Mcal_Layer/GPIO/hal_gpio.c: 92:                 (*lat_registers[_pin_config -> port] &=
      +                           ~((uint8)1 << _pin_config -> pin));
 12527   00427A  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 12528   00427E  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 12529   004282  30DF               	rrcf	223,w,c
 12530   004284  32E8               	rrcf	wreg,f,c
 12531   004286  32E8               	rrcf	wreg,f,c
 12532   004288  0B07               	andlw	7
 12533   00428A  6E04               	movwf	??_gpio_pin_write_logic^0,c
 12534   00428C  0E01               	movlw	1
 12535   00428E  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
 12536   004290  2A04               	incf	??_gpio_pin_write_logic^0,f,c
 12537   004292  EF4D  F021         	goto	u4264
 12538   004296                     u4265:
 12539   004296  90D8               	bcf	status,0,c
 12540   004298  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 12541   00429A                     u4264:
 12542   00429A  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
 12543   00429C  EF4B  F021         	goto	u4265
 12544   0042A0  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 12545   0042A2  0AFF               	xorlw	255
 12546   0042A4  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
 12547   0042A6  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 12548   0042AA  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 12549   0042AE  50DF               	movf	223,w,c
 12550   0042B0  0B07               	andlw	7
 12551   0042B2  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
 12552   0042B4  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
 12553   0042B6  0D02               	mullw	2
 12554   0042B8  0EE0               	movlw	low _lat_registers
 12555   0042BA  24F3               	addwf	243,w,c
 12556   0042BC  6ED9               	movwf	fsr2l,c
 12557   0042BE  0E00               	movlw	high _lat_registers
 12558   0042C0  20F4               	addwfc	prodh,w,c
 12559   0042C2  6EDA               	movwf	fsr2h,c
 12560   0042C4  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
 12561   0042C8  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
 12562   0042CC  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
 12563   0042D0  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
 12564   0042D4  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
 12565   0042D6  16DF               	andwf	indf2,f,c
 12566                           
 12567                           ;Mcal_Layer/GPIO/hal_gpio.c: 93:                 break;
 12568   0042D8  EFB1  F021         	goto	l4680
 12569   0042DC                     l4674:
 12570                           
 12571                           ;Mcal_Layer/GPIO/hal_gpio.c: 95:                 (*lat_registers[_pin_config -> port] |=
      +                           ((uint8)1 << _pin_config -> pin));
 12572   0042DC  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 12573   0042E0  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 12574   0042E4  30DF               	rrcf	223,w,c
 12575   0042E6  32E8               	rrcf	wreg,f,c
 12576   0042E8  32E8               	rrcf	wreg,f,c
 12577   0042EA  0B07               	andlw	7
 12578   0042EC  6E04               	movwf	??_gpio_pin_write_logic^0,c
 12579   0042EE  0E01               	movlw	1
 12580   0042F0  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
 12581   0042F2  2A04               	incf	??_gpio_pin_write_logic^0,f,c
 12582   0042F4  EF7E  F021         	goto	u4274
 12583   0042F8                     u4275:
 12584   0042F8  90D8               	bcf	status,0,c
 12585   0042FA  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 12586   0042FC                     u4274:
 12587   0042FC  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
 12588   0042FE  EF7C  F021         	goto	u4275
 12589   004302  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 12590   004306  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 12591   00430A  50DF               	movf	223,w,c
 12592   00430C  0B07               	andlw	7
 12593   00430E  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
 12594   004310  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
 12595   004312  0D02               	mullw	2
 12596   004314  0EE0               	movlw	low _lat_registers
 12597   004316  24F3               	addwf	243,w,c
 12598   004318  6ED9               	movwf	fsr2l,c
 12599   00431A  0E00               	movlw	high _lat_registers
 12600   00431C  20F4               	addwfc	prodh,w,c
 12601   00431E  6EDA               	movwf	fsr2h,c
 12602   004320  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
 12603   004324  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
 12604   004328  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
 12605   00432C  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
 12606   004330  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 12607   004332  12DF               	iorwf	indf2,f,c
 12608                           
 12609                           ;Mcal_Layer/GPIO/hal_gpio.c: 96:                 break;
 12610   004334  EFB1  F021         	goto	l4680
 12611   004338                     l4678:
 12612   004338  5003               	movf	gpio_pin_write_logic@_logic^0,w,c
 12613   00433A  6E04               	movwf	??_gpio_pin_write_logic^0,c
 12614   00433C  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
 12615                           
 12616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12617                           ; Switch size 1, requested type "simple"
 12618                           ; Number of cases is 1, Range of values is 0 to 0
 12619                           ; switch strategies available:
 12620                           ; Name         Instructions Cycles
 12621                           ; simple_byte            4     3 (average)
 12622                           ;	Chosen strategy is simple_byte
 12623   00433E  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 12624   004340  0A00               	xorlw	0	; case 0
 12625   004342  B4D8               	btfsc	status,2,c
 12626   004344  EFA6  F021         	goto	l7706
 12627   004348  EF39  F021         	goto	l4670
 12628   00434C                     l7706:
 12629                           
 12630                           ; Switch size 1, requested type "simple"
 12631                           ; Number of cases is 2, Range of values is 0 to 1
 12632                           ; switch strategies available:
 12633                           ; Name         Instructions Cycles
 12634                           ; simple_byte            7     4 (average)
 12635                           ;	Chosen strategy is simple_byte
 12636   00434C  5004               	movf	??_gpio_pin_write_logic^0,w,c
 12637   00434E  0A00               	xorlw	0	; case 0
 12638   004350  B4D8               	btfsc	status,2,c
 12639   004352  EF3D  F021         	goto	l4672
 12640   004356  0A01               	xorlw	1	; case 1
 12641   004358  B4D8               	btfsc	status,2,c
 12642   00435A  EF6E  F021         	goto	l4674
 12643   00435E  EF39  F021         	goto	l4670
 12644   004362                     l4680:
 12645                           
 12646                           ;Mcal_Layer/GPIO/hal_gpio.c: 100:     return ret;
 12647   004362  500A               	movf	gpio_pin_write_logic@ret^0,w,c
 12648   004364  0012               	return		;funcret
 12649   004366                     __end_of_gpio_pin_write_logic:
 12650                           	callstack 0
 12651                           
 12652 ;; *************** function ___xxtofl *****************
 12653 ;; Defined at:
 12654 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
 12655 ;; Parameters:    Size  Location     Type
 12656 ;;  sign            1    wreg     unsigned char 
 12657 ;;  val             4    0[COMRAM] long 
 12658 ;; Auto vars:     Size  Location     Type
 12659 ;;  sign            1    8[COMRAM] unsigned char 
 12660 ;;  arg             4   10[COMRAM] unsigned long 
 12661 ;;  exp             1    9[COMRAM] unsigned char 
 12662 ;; Return value:  Size  Location     Type
 12663 ;;                  4    0[COMRAM] unsigned char 
 12664 ;; Registers used:
 12665 ;;		wreg, status,2, status,0
 12666 ;; Tracked objects:
 12667 ;;		On entry : 0/0
 12668 ;;		On exit  : 0/0
 12669 ;;		Unchanged: 0/0
 12670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12672 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12673 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12674 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12675 ;;Total ram usage:       14 bytes
 12676 ;; Hardware stack levels used: 1
 12677 ;; This function calls:
 12678 ;;		Nothing
 12679 ;; This function is called by:
 12680 ;;		_main
 12681 ;; This function uses a non-reentrant model
 12682 ;;
 12683                           
 12684                           	psect	text59
 12685   003C08                     __ptext59:
 12686                           	callstack 0
 12687   003C08                     ___xxtofl:
 12688                           	callstack 30
 12689                           
 12690                           ;incstack = 0
 12691                           ;___xxtofl@sign stored from wreg
 12692   003C08  6E09               	movwf	___xxtofl@sign^0,c
 12693   003C0A  5009               	movf	___xxtofl@sign^0,w,c
 12694   003C0C  B4D8               	btfsc	status,2,c
 12695   003C0E  EF0B  F01E         	goto	u7311
 12696   003C12  EF0D  F01E         	goto	u7310
 12697   003C16                     u7311:
 12698   003C16  EF2F  F01E         	goto	l1276
 12699   003C1A                     u7310:
 12700   003C1A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12701   003C1C  EF14  F01E         	goto	u7320
 12702   003C20  EF12  F01E         	goto	u7321
 12703   003C24                     u7321:
 12704   003C24  EF2F  F01E         	goto	l1276
 12705   003C28                     u7320:
 12706   003C28  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12707   003C2C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12708   003C30  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12709   003C34  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12710   003C38  1E05               	comf	??___xxtofl^0,f,c
 12711   003C3A  1E06               	comf	(??___xxtofl+1)^0,f,c
 12712   003C3C  1E07               	comf	(??___xxtofl+2)^0,f,c
 12713   003C3E  1E08               	comf	(??___xxtofl+3)^0,f,c
 12714   003C40  2A05               	incf	??___xxtofl^0,f,c
 12715   003C42  0E00               	movlw	0
 12716   003C44  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12717   003C46  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12718   003C48  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12719   003C4A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12720   003C4E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12721   003C52  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12722   003C56  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12723   003C5A  EF37  F01E         	goto	l6652
 12724   003C5E                     l1276:
 12725   003C5E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12726   003C62  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12727   003C66  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12728   003C6A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12729   003C6E                     l6652:
 12730   003C6E  5001               	movf	___xxtofl@val^0,w,c
 12731   003C70  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12732   003C72  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12733   003C74  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12734   003C76  A4D8               	btfss	status,2,c
 12735   003C78  EF40  F01E         	goto	u7331
 12736   003C7C  EF42  F01E         	goto	u7330
 12737   003C80                     u7331:
 12738   003C80  EF4C  F01E         	goto	l6658
 12739   003C84                     u7330:
 12740   003C84  0E00               	movlw	0
 12741   003C86  6E01               	movwf	?___xxtofl^0,c
 12742   003C88  0E00               	movlw	0
 12743   003C8A  6E02               	movwf	(?___xxtofl+1)^0,c
 12744   003C8C  0E00               	movlw	0
 12745   003C8E  6E03               	movwf	(?___xxtofl+2)^0,c
 12746   003C90  0E00               	movlw	0
 12747   003C92  6E04               	movwf	(?___xxtofl+3)^0,c
 12748   003C94  EFDD  F01E         	goto	l1279
 12749   003C98                     l6658:
 12750   003C98  0E96               	movlw	150
 12751   003C9A  6E0A               	movwf	___xxtofl@exp^0,c
 12752   003C9C  EF56  F01E         	goto	l6662
 12753   003CA0                     l6660:
 12754   003CA0  2A0A               	incf	___xxtofl@exp^0,f,c
 12755   003CA2  90D8               	bcf	status,0,c
 12756   003CA4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12757   003CA6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12758   003CA8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12759   003CAA  320B               	rrcf	___xxtofl@arg^0,f,c
 12760   003CAC                     l6662:
 12761   003CAC  0E00               	movlw	0
 12762   003CAE  140B               	andwf	___xxtofl@arg^0,w,c
 12763   003CB0  6E05               	movwf	??___xxtofl^0,c
 12764   003CB2  0E00               	movlw	0
 12765   003CB4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12766   003CB6  6E06               	movwf	(??___xxtofl+1)^0,c
 12767   003CB8  0E00               	movlw	0
 12768   003CBA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12769   003CBC  6E07               	movwf	(??___xxtofl+2)^0,c
 12770   003CBE  0EFE               	movlw	254
 12771   003CC0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12772   003CC2  6E08               	movwf	(??___xxtofl+3)^0,c
 12773   003CC4  5005               	movf	??___xxtofl^0,w,c
 12774   003CC6  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12775   003CC8  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12776   003CCA  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12777   003CCC  A4D8               	btfss	status,2,c
 12778   003CCE  EF6B  F01E         	goto	u7341
 12779   003CD2  EF6D  F01E         	goto	u7340
 12780   003CD6                     u7341:
 12781   003CD6  EF50  F01E         	goto	l6660
 12782   003CDA                     u7340:
 12783   003CDA  EF7B  F01E         	goto	l1283
 12784   003CDE                     l6664:
 12785   003CDE  2A0A               	incf	___xxtofl@exp^0,f,c
 12786   003CE0  0E01               	movlw	1
 12787   003CE2  260B               	addwf	___xxtofl@arg^0,f,c
 12788   003CE4  0E00               	movlw	0
 12789   003CE6  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12790   003CE8  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12791   003CEA  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12792   003CEC  90D8               	bcf	status,0,c
 12793   003CEE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12794   003CF0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12795   003CF2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12796   003CF4  320B               	rrcf	___xxtofl@arg^0,f,c
 12797   003CF6                     l1283:
 12798   003CF6  0E00               	movlw	0
 12799   003CF8  140B               	andwf	___xxtofl@arg^0,w,c
 12800   003CFA  6E05               	movwf	??___xxtofl^0,c
 12801   003CFC  0E00               	movlw	0
 12802   003CFE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12803   003D00  6E06               	movwf	(??___xxtofl+1)^0,c
 12804   003D02  0E00               	movlw	0
 12805   003D04  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12806   003D06  6E07               	movwf	(??___xxtofl+2)^0,c
 12807   003D08  0EFF               	movlw	255
 12808   003D0A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12809   003D0C  6E08               	movwf	(??___xxtofl+3)^0,c
 12810   003D0E  5005               	movf	??___xxtofl^0,w,c
 12811   003D10  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12812   003D12  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12813   003D14  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12814   003D16  A4D8               	btfss	status,2,c
 12815   003D18  EF90  F01E         	goto	u7351
 12816   003D1C  EF92  F01E         	goto	u7350
 12817   003D20                     u7351:
 12818   003D20  EF6F  F01E         	goto	l6664
 12819   003D24                     u7350:
 12820   003D24  EF9A  F01E         	goto	l6672
 12821   003D28                     l6670:
 12822   003D28  060A               	decf	___xxtofl@exp^0,f,c
 12823   003D2A  90D8               	bcf	status,0,c
 12824   003D2C  360B               	rlcf	___xxtofl@arg^0,f,c
 12825   003D2E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12826   003D30  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12827   003D32  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12828   003D34                     l6672:
 12829   003D34  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12830   003D36  EF9F  F01E         	goto	u7361
 12831   003D3A  EFA1  F01E         	goto	u7360
 12832   003D3E                     u7361:
 12833   003D3E  EFA9  F01E         	goto	l1290
 12834   003D42                     u7360:
 12835   003D42  0E02               	movlw	2
 12836   003D44  600A               	cpfslt	___xxtofl@exp^0,c
 12837   003D46  EFA7  F01E         	goto	u7371
 12838   003D4A  EFA9  F01E         	goto	u7370
 12839   003D4E                     u7371:
 12840   003D4E  EF94  F01E         	goto	l6670
 12841   003D52                     u7370:
 12842   003D52                     l1290:
 12843   003D52  B00A               	btfsc	___xxtofl@exp^0,0,c
 12844   003D54  EFAE  F01E         	goto	u7381
 12845   003D58  EFB0  F01E         	goto	u7380
 12846   003D5C                     u7381:
 12847   003D5C  EFB1  F01E         	goto	l6678
 12848   003D60                     u7380:
 12849   003D60  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12850   003D62                     l6678:
 12851   003D62  90D8               	bcf	status,0,c
 12852   003D64  320A               	rrcf	___xxtofl@exp^0,f,c
 12853   003D66  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12854   003D6A  6A06               	clrf	(??___xxtofl+1)^0,c
 12855   003D6C  6A07               	clrf	(??___xxtofl+2)^0,c
 12856   003D6E  6A08               	clrf	(??___xxtofl+3)^0,c
 12857   003D70  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12858   003D74  6A07               	clrf	(??___xxtofl+2)^0,c
 12859   003D76  6A06               	clrf	(??___xxtofl+1)^0,c
 12860   003D78  6A05               	clrf	??___xxtofl^0,c
 12861   003D7A  5005               	movf	??___xxtofl^0,w,c
 12862   003D7C  120B               	iorwf	___xxtofl@arg^0,f,c
 12863   003D7E  5006               	movf	(??___xxtofl+1)^0,w,c
 12864   003D80  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12865   003D82  5007               	movf	(??___xxtofl+2)^0,w,c
 12866   003D84  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12867   003D86  5008               	movf	(??___xxtofl+3)^0,w,c
 12868   003D88  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12869   003D8A  5009               	movf	___xxtofl@sign^0,w,c
 12870   003D8C  B4D8               	btfsc	status,2,c
 12871   003D8E  EFCB  F01E         	goto	u7391
 12872   003D92  EFCD  F01E         	goto	u7390
 12873   003D96                     u7391:
 12874   003D96  EFD5  F01E         	goto	l6688
 12875   003D9A                     u7390:
 12876   003D9A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12877   003D9C  EFD4  F01E         	goto	u7400
 12878   003DA0  EFD2  F01E         	goto	u7401
 12879   003DA4                     u7401:
 12880   003DA4  EFD5  F01E         	goto	l6688
 12881   003DA8                     u7400:
 12882   003DA8  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12883   003DAA                     l6688:
 12884   003DAA  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12885   003DAE  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12886   003DB2  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12887   003DB6  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12888   003DBA                     l1279:
 12889   003DBA  0012               	return		;funcret
 12890   003DBC                     __end_of___xxtofl:
 12891                           	callstack 0
 12892                           
 12893 ;; *************** function ___lmul *****************
 12894 ;; Defined at:
 12895 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
 12896 ;; Parameters:    Size  Location     Type
 12897 ;;  multiplier      4    0[COMRAM] unsigned long 
 12898 ;;  multiplicand    4    4[COMRAM] unsigned long 
 12899 ;; Auto vars:     Size  Location     Type
 12900 ;;  product         4    8[COMRAM] unsigned long 
 12901 ;; Return value:  Size  Location     Type
 12902 ;;                  4    0[COMRAM] unsigned long 
 12903 ;; Registers used:
 12904 ;;		wreg, status,2, status,0
 12905 ;; Tracked objects:
 12906 ;;		On entry : 0/0
 12907 ;;		On exit  : 0/0
 12908 ;;		Unchanged: 0/0
 12909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12910 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12911 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12913 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12914 ;;Total ram usage:       12 bytes
 12915 ;; Hardware stack levels used: 1
 12916 ;; This function calls:
 12917 ;;		Nothing
 12918 ;; This function is called by:
 12919 ;;		_main
 12920 ;; This function uses a non-reentrant model
 12921 ;;
 12922                           
 12923                           	psect	text60
 12924   005356                     __ptext60:
 12925                           	callstack 0
 12926   005356                     ___lmul:
 12927                           	callstack 30
 12928   005356  0E00               	movlw	0
 12929   005358  6E09               	movwf	___lmul@product^0,c
 12930   00535A  0E00               	movlw	0
 12931   00535C  6E0A               	movwf	(___lmul@product+1)^0,c
 12932   00535E  0E00               	movlw	0
 12933   005360  6E0B               	movwf	(___lmul@product+2)^0,c
 12934   005362  0E00               	movlw	0
 12935   005364  6E0C               	movwf	(___lmul@product+3)^0,c
 12936   005366                     l6638:
 12937   005366  A001               	btfss	___lmul@multiplier^0,0,c
 12938   005368  EFB8  F029         	goto	u7291
 12939   00536C  EFBA  F029         	goto	u7290
 12940   005370                     u7291:
 12941   005370  EFC2  F029         	goto	l6642
 12942   005374                     u7290:
 12943   005374  5005               	movf	___lmul@multiplicand^0,w,c
 12944   005376  2609               	addwf	___lmul@product^0,f,c
 12945   005378  5006               	movf	(___lmul@multiplicand+1)^0,w,c
 12946   00537A  220A               	addwfc	(___lmul@product+1)^0,f,c
 12947   00537C  5007               	movf	(___lmul@multiplicand+2)^0,w,c
 12948   00537E  220B               	addwfc	(___lmul@product+2)^0,f,c
 12949   005380  5008               	movf	(___lmul@multiplicand+3)^0,w,c
 12950   005382  220C               	addwfc	(___lmul@product+3)^0,f,c
 12951   005384                     l6642:
 12952   005384  90D8               	bcf	status,0,c
 12953   005386  3605               	rlcf	___lmul@multiplicand^0,f,c
 12954   005388  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
 12955   00538A  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
 12956   00538C  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
 12957   00538E  90D8               	bcf	status,0,c
 12958   005390  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
 12959   005392  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
 12960   005394  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
 12961   005396  3201               	rrcf	___lmul@multiplier^0,f,c
 12962   005398  5001               	movf	___lmul@multiplier^0,w,c
 12963   00539A  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
 12964   00539C  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
 12965   00539E  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
 12966   0053A0  A4D8               	btfss	status,2,c
 12967   0053A2  EFD5  F029         	goto	u7301
 12968   0053A6  EFD7  F029         	goto	u7300
 12969   0053AA                     u7301:
 12970   0053AA  EFB3  F029         	goto	l6638
 12971   0053AE                     u7300:
 12972   0053AE  C009  F001         	movff	___lmul@product,?___lmul
 12973   0053B2  C00A  F002         	movff	___lmul@product+1,?___lmul+1
 12974   0053B6  C00B  F003         	movff	___lmul@product+2,?___lmul+2
 12975   0053BA  C00C  F004         	movff	___lmul@product+3,?___lmul+3
 12976   0053BE  0012               	return		;funcret
 12977   0053C0                     __end_of___lmul:
 12978                           	callstack 0
 12979                           
 12980                           	psect	rparam
 12981   000000                     
 12982                           	psect	config
 12983                           
 12984                           ; Padding undefined space
 12985   300000                     	org	3145728
 12986   300000  FF                 	db	255
 12987                           
 12988                           ;Config register CONFIG1H @ 0x300001
 12989                           ;	Oscillator Selection bits
 12990                           ;	OSC = HS, HS oscillator
 12991                           ;	Fail-Safe Clock Monitor Enable bit
 12992                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12993                           ;	Internal/External Oscillator Switchover bit
 12994                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12995   300001                     	org	3145729
 12996   300001  02                 	db	2
 12997                           
 12998                           ;Config register CONFIG2L @ 0x300002
 12999                           ;	Power-up Timer Enable bit
 13000                           ;	PWRT = OFF, PWRT disabled
 13001                           ;	Brown-out Reset Enable bits
 13002                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 13003                           ;	Brown Out Reset Voltage bits
 13004                           ;	BORV = 1, 
 13005   300002                     	org	3145730
 13006   300002  09                 	db	9
 13007                           
 13008                           ;Config register CONFIG2H @ 0x300003
 13009                           ;	Watchdog Timer Enable bit
 13010                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 13011                           ;	Watchdog Timer Postscale Select bits
 13012                           ;	WDTPS = 32768, 1:32768
 13013   300003                     	org	3145731
 13014   300003  1E                 	db	30
 13015                           
 13016                           ; Padding undefined space
 13017   300004                     	org	3145732
 13018   300004  FF                 	db	255
 13019                           
 13020                           ;Config register CONFIG3H @ 0x300005
 13021                           ;	CCP2 MUX bit
 13022                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 13023                           ;	PORTB A/D Enable bit
 13024                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 13025                           ;	Low-Power Timer1 Oscillator Enable bit
 13026                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 13027                           ;	MCLR Pin Enable bit
 13028                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 13029   300005                     	org	3145733
 13030   300005  81                 	db	129
 13031                           
 13032                           ;Config register CONFIG4L @ 0x300006
 13033                           ;	Stack Full/Underflow Reset Enable bit
 13034                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13035                           ;	Single-Supply ICSP Enable bit
 13036                           ;	LVP = OFF, Single-Supply ICSP disabled
 13037                           ;	Extended Instruction Set Enable bit
 13038                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13039                           ;	Background Debugger Enable bit
 13040                           ;	DEBUG = 0x1, unprogrammed default
 13041   300006                     	org	3145734
 13042   300006  81                 	db	129
 13043                           
 13044                           ; Padding undefined space
 13045   300007                     	org	3145735
 13046   300007  FF                 	db	255
 13047                           
 13048                           ;Config register CONFIG5L @ 0x300008
 13049                           ;	Code Protection bit
 13050                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 13051                           ;	Code Protection bit
 13052                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 13053                           ;	Code Protection bit
 13054                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 13055                           ;	Code Protection bit
 13056                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 13057   300008                     	org	3145736
 13058   300008  0F                 	db	15
 13059                           
 13060                           ;Config register CONFIG5H @ 0x300009
 13061                           ;	Boot Block Code Protection bit
 13062                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 13063                           ;	Data EEPROM Code Protection bit
 13064                           ;	CPD = OFF, Data EEPROM not code-protected
 13065   300009                     	org	3145737
 13066   300009  C0                 	db	192
 13067                           
 13068                           ;Config register CONFIG6L @ 0x30000A
 13069                           ;	Write Protection bit
 13070                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 13071                           ;	Write Protection bit
 13072                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 13073                           ;	Write Protection bit
 13074                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 13075                           ;	Write Protection bit
 13076                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 13077   30000A                     	org	3145738
 13078   30000A  0F                 	db	15
 13079                           
 13080                           ;Config register CONFIG6H @ 0x30000B
 13081                           ;	Configuration Register Write Protection bit
 13082                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 13083                           ;	Boot Block Write Protection bit
 13084                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13085                           ;	Data EEPROM Write Protection bit
 13086                           ;	WRTD = OFF, Data EEPROM not write-protected
 13087   30000B                     	org	3145739
 13088   30000B  E0                 	db	224
 13089                           
 13090                           ;Config register CONFIG7L @ 0x30000C
 13091                           ;	Table Read Protection bit
 13092                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 13093                           ;	Table Read Protection bit
 13094                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 13095                           ;	Table Read Protection bit
 13096                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 13097                           ;	Table Read Protection bit
 13098                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 13099   30000C                     	org	3145740
 13100   30000C  0F                 	db	15
 13101                           
 13102                           ;Config register CONFIG7H @ 0x30000D
 13103                           ;	Boot Block Table Read Protection bit
 13104                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13105   30000D                     	org	3145741
 13106   30000D  40                 	db	64
 13107                           tosu	equ	0xFFF
 13108                           tosh	equ	0xFFE
 13109                           tosl	equ	0xFFD
 13110                           stkptr	equ	0xFFC
 13111                           pclatu	equ	0xFFB
 13112                           pclath	equ	0xFFA
 13113                           pcl	equ	0xFF9
 13114                           tblptru	equ	0xFF8
 13115                           tblptrh	equ	0xFF7
 13116                           tblptrl	equ	0xFF6
 13117                           tablat	equ	0xFF5
 13118                           prodh	equ	0xFF4
 13119                           prodl	equ	0xFF3
 13120                           indf0	equ	0xFEF
 13121                           postinc0	equ	0xFEE
 13122                           postdec0	equ	0xFED
 13123                           preinc0	equ	0xFEC
 13124                           plusw0	equ	0xFEB
 13125                           fsr0h	equ	0xFEA
 13126                           fsr0l	equ	0xFE9
 13127                           wreg	equ	0xFE8
 13128                           indf1	equ	0xFE7
 13129                           postinc1	equ	0xFE6
 13130                           postdec1	equ	0xFE5
 13131                           preinc1	equ	0xFE4
 13132                           plusw1	equ	0xFE3
 13133                           fsr1h	equ	0xFE2
 13134                           fsr1l	equ	0xFE1
 13135                           bsr	equ	0xFE0
 13136                           indf2	equ	0xFDF
 13137                           postinc2	equ	0xFDE
 13138                           postdec2	equ	0xFDD
 13139                           preinc2	equ	0xFDC
 13140                           plusw2	equ	0xFDB
 13141                           fsr2h	equ	0xFDA
 13142                           fsr2l	equ	0xFD9
 13143                           status	equ	0xFD8

Data Sizes:
    Strings     65
    Constant    16
    Data        53
    BSS         256
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    124     127
    BANK0           128     43     123
    BANK1           256      0     226
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    __strtoxll@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> ptr(BANK0[2]), 

    __strtoxll@s	PTR const unsigned char  size(2) Largest target is 11
		 -> number_str(BANK0[11]), 

    __strtoxll@cp	PTR const unsigned char  size(2) Largest target is 11
		 -> number_str(BANK0[11]), 

    strtoll@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> ptr(BANK0[2]), 

    strtoll@s	PTR const unsigned char  size(2) Largest target is 11
		 -> number_str(BANK0[11]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), result_str(BANK1[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), result_str(BANK1[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_13(CODE[4]), STR_10(CODE[4]), STR_6(CODE[19]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_13(CODE[4]), STR_10(CODE[4]), STR_6(CODE[19]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_7(CODE[19]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> result_str(BANK1[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_9(CODE[4]), STR_8(CODE[5]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_9(CODE[4]), STR_8(CODE[5]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_9(CODE[4]), STR_8(CODE[5]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1436$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_9(CODE[4]), STR_8(CODE[5]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> result_str(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1351$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1351$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 100
		 -> result_str(BANK1[20]), number_str(BANK0[11]), string(BANK1[100]), 

    memset@s	PTR unsigned char  size(2) Largest target is 100
		 -> result_str(BANK1[20]), number_str(BANK0[11]), string(BANK1[100]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), result_str(BANK1[20]), 

    ptr	PTR unsigned char  size(2) Largest target is 11
		 -> number_str(BANK0[11]), NULL(NULL[0]), 

    gpio_pin_read_logic@_logic	PTR enum E2970 size(2) Largest target is 1
		 -> keypad_get_value@column_value(COMRAM[1]), button_read_logic@Pin_Logic_Status(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad.keypad_col(BANK1[4]), keypad(BANK1[8]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad.keypad_col(BANK1[4]), keypad.keypad_row(BANK1[4]), keypad(BANK1[8]), lcd_2.lcd_data(BANK0[4]), 
		 -> lcd_2(BANK0[6]), relay_off@relay(COMRAM[1]), relay_on@relay(COMRAM[1]), relay_initialization@relay(COMRAM[1]), 
		 -> led_off@pin_obj(COMRAM[1]), led_on@pin_obj(COMRAM[1]), led_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_direction_init@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad.keypad_col(BANK1[4]), keypad.keypad_row(BANK1[4]), keypad(BANK1[8]), lcd_2.lcd_data(BANK0[4]), 
		 -> lcd_2(BANK0[6]), relay_initialization@relay(COMRAM[1]), led_initialization@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    lcd_4bit_set_cursor@_lcd_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_2(BANK0[6]), 

    lcd_4bit_send_enable@_lcd_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_2(BANK0[6]), 

    lcd_send_4bit@_lcd_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_2(BANK0[6]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> result_str(BANK1[20]), number_str(BANK0[11]), string(BANK1[100]), 

    lcd_4bit_send_custom_char@_chr	PTR unsigned char  size(2) Largest target is 8
		 -> smile(BANK1[8]), 

    lcd_4bit_send_custom_char@_lcd_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_2(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 100
		 -> STR_5(CODE[11]), STR_4(CODE[14]), result_str(BANK1[20]), string(BANK1[100]), 

    lcd_4bit_send_string_pos@_lcd_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_2(BANK0[6]), 

    lcd_4bit_send_string@str	PTR unsigned char  size(2) Largest target is 100
		 -> STR_5(CODE[11]), STR_4(CODE[14]), result_str(BANK1[20]), string(BANK1[100]), 

    lcd_4bit_send_string@_lcd_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_2(BANK0[6]), 

    lcd_4bit_send_char_data_pos@_lcd_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_2(BANK0[6]), 

    lcd_4bit_send_char_data@_lcd_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_2(BANK0[6]), 

    lcd_4bit_send_command@_lcd_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_2(BANK0[6]), 

    lcd_4bit_initialize@_lcd_config	PTR const struct . size(2) Largest target is 6
		 -> lcd_2(BANK0[6]), 

    keypad_get_value@value	PTR unsigned char  size(2) Largest target is 1
		 -> keypad_value(COMRAM[1]), 

    keypad_get_value@keypad_config	PTR const struct . size(2) Largest target is 8
		 -> keypad(BANK1[8]), 

    keypad_initialization@keypad_config	PTR const struct . size(2) Largest target is 8
		 -> keypad(BANK1[8]), 


Critical Paths under _main in COMRAM

    _strtoll->___strtoxll
    ___strtoxll->___omul
    _toupper->_islower
    _isalnum->_isalpha
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_send_string->_lcd_4bit_send_char_data
    _lcd_4bit_send_custom_char->_lcd_4bit_send_char_data_pos
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bit
    _keypad_get_value->_gpio_pin_write_logic
    _ecu_layer_init->_keypad_initialization
    _ecu_layer_init->_lcd_4bit_initialize
    _lcd_4bit_initialize->_gpio_pin_direction_init
    _lcd_4bit_send_command->_lcd_send_4bit
    _lcd_send_4bit->_gpio_pin_write_logic
    _lcd_4bit_send_enable->_gpio_pin_write_logic
    _keypad_initialization->_gpio_pin_direction_init
    _gpio_pin_direction_init->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  261390
                                             35 BANK0      8     8      0
                            ___fldiv
                             ___lmul
                           ___xxtofl
                   _application_init
                   _keypad_get_value
              _lcd_4bit_send_command
          _lcd_4bit_send_custom_char
           _lcd_4bit_send_string_pos
                             _memset
                            _sprintf
                             _strcmp
                             _strcpy
                            _strtoll
 ---------------------------------------------------------------------------------
 (1) _strtoll                                              8     0      8    4267
                                             70 COMRAM     8     0      8
                         ___strtoxll
 ---------------------------------------------------------------------------------
 (2) ___strtoxll                                          46    38      8    3745
                                             24 COMRAM    46    38      8
                             ___omul
                            _isalnum
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              4     2      2     464
                                              4 COMRAM     4     2      2
                            _islower
 ---------------------------------------------------------------------------------
 (4) _islower                                              4     2      2     161
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              4     2      2     236
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _isalnum                                              8     6      2     544
                                              6 COMRAM     7     5      2
                            _isalpha
 ---------------------------------------------------------------------------------
 (3) _isalpha                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___omul                                              24     8     16     370
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     1      4     264
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8   32167
                                             13 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   31196
                                            122 COMRAM     2     2      0
                                              7 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           21    15      6   30832
                                            112 COMRAM    10     4      6
                                              0 BANK0      7     7      0
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                12     6      6    3916
                                             27 COMRAM    12     6      6
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4    1143
                                              6 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   19341
                                             59 COMRAM    53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               8     4      4     552
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                15     9      6    4538
                                             27 COMRAM    15     9      6
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2911
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             10 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___almod                                             10     2      8     448
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6    3227
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             7     1      6   49058
                                             25 COMRAM     7     1      6
               _lcd_4bit_send_string
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string                                 5     1      4   22319
                                             18 COMRAM     5     1      4
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_custom_char                            9     2      7   94010
                                             31 COMRAM     9     2      7
            _lcd_4bit_send_char_data
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data_pos                          6     1      5   47234
                                             25 COMRAM     6     1      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4   24735
                                             18 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              4     1      3   22053
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
               _lcd_4bit_send_enable
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                    10     6      4    9120
                                             10 COMRAM     9     5      4
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                 10     6      4    1508
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _application_init                                     0     0      0   41670
                     _ecu_layer_init
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_init                                       0     0      0   41670
              _keypad_initialization
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  6     4      2   32929
                                             19 COMRAM     6     4      2
            _gpio_pin_direction_init
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                4     1      3   24052
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
               _lcd_4bit_send_enable
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bit                                        4     1      3    7545
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable                                 3     1      2    7110
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _keypad_initialization                                7     5      2    8741
                                             19 COMRAM     6     4      2
            _gpio_pin_direction_init
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                              9     7      2    8427
                                             10 COMRAM     9     7      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    6737
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
   ___lmul
   ___xxtofl
   _application_init
     _ecu_layer_init
       _keypad_initialization
         _gpio_pin_direction_init
           _gpio_pin_write_logic
       _lcd_4bit_initialize
         _gpio_pin_direction_init
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable
             _gpio_pin_write_logic
           _lcd_send_4bit
             _gpio_pin_write_logic
   _keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _lcd_4bit_send_command
   _lcd_4bit_send_custom_char
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable
       _lcd_send_4bit
     _lcd_4bit_send_char_data_pos
       _lcd_4bit_send_char_data
       _lcd_4bit_set_cursor
         _lcd_4bit_send_command
     _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_string
       _lcd_4bit_send_char_data
     _lcd_4bit_set_cursor
   _memset
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aldiv
           ___almod
           _abs
             ___almod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul
         _utoa
           ___lldiv
           ___llmod
           _pad
   _strcmp
   _strcpy
   _strtoll
     ___strtoxll
       ___omul
       _isalnum
         _isalpha
       _isalpha
       _isdigit
       _isspace
       _toupper
         _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E2       7       88.3%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2B      7B       5       96.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7C      7F       1      100.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DC      39        0.0%
DATA                 0      0     1DC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Aug 13 22:08:43 2023

                        ?_lcd_send_4bit 000B                            ___fldiv@aexp 0027  
                          ___fldiv@bexp 0026                            ___fldiv@sign 001F  
                   ___wmul@multiplicand 0003                                     l222 5064  
                                   l232 5750                                     l240 50EE  
                                   l217 421A                                     l322 584C  
                                   l227 52E4                                     l332 4DEC  
                                   l165 4BD0                                     l318 4D3A  
                                   l254 51F8                                     l319 4D3C  
                                   l415 59C2                                     l183 3C06  
                                   l247 554C                                     l700 458C  
                                   l621 5972                                     l632 53AE  
                                   l633 53BE                                     l465 3F3A  
                                   l713 4980                                     l609 23EC  
                                   l618 59C8                                     l491 4C8A  
                                   l484 4364                                     l638 4FB8  
                                   l655 4F3A                                     l639 4FD8  
                                   l648 4F2A                                     l918 4692  
                                   l880 4E96                                     l891 4796  
                                   l886 4750                                     l895 58F4  
                                   _abs 57D4                                     _pad 51FA  
                                   _ret 00A0                                     _ptr 00B3  
                                   prod 0FF3                                     wreg 0FE8  
                           led_on@F3053 00A6                            ___flmul@aexp 0012  
                          ___flmul@bexp 0013                            ___flmul@sign 000D  
                          ___flmul@temp 0018                            ___flmul@prod 0014  
                  _lcd_4bit_send_enable 5814                            ___fltol@exp1 000A  
                                  l1041 5166                                    l1203 3678  
                                  ?_abs 000B                                    l1205 34D8  
                                  l1214 351E                                    l1150 2BD2  
                                  l1151 2B98                                    l1216 3596  
                                  l1208 349C                                    l1048 5176  
                                  l1217 3584                                    l1242 3170  
                                  l1235 2F7A                                    l1252 32A0  
                                  l1244 31E8                                    l1420 4380  
                                  l1341 521C                                    l1245 31D6  
                                  l1149 2BE4                                    l1309 559C  
                                  l1502 580A                                    l1350 38DA  
                                  l1166 2CFE                                    l1158 2EB4  
                                  l1422 4388                                    l1239 32DE  
                                  l1175 2DCE                                    l1191 56C8  
                                  l1511 388A                                    l1352 38E2  
                                  l1176 2DBC                                    l1408 180A  
                                  l1432 4B08                                    l1505 5812  
                                  l1345 5272                                    l1353 3928  
                                  l1290 3D52                                    l1514 37CE  
                                  l1522 547C                                    l1283 3CF6  
                                  l1531 563C                                    l1276 3C5E  
                                  l1364 3A52                                    l1380 1220  
                                  l1436 4B10                                    l1428 4480  
                                  l1525 548C                                    l1279 3DBA  
                                  l1543 4A4A                                    l1551 570C  
                                  l1375 1A20                                    l1455 29F4  
                                  l1296 40B0                                    l5000 4896  
                                  l1625 1CEC                                    l5010 48CA  
                                  l5002 489A                                    l1554 59CA  
                                  l1378 13D2                                    l1562 5354  
                                  l1618 1C74                                    l1643 1F88  
                                  l1619 1CDC                                    l5020 4912  
                                  l5012 48DA                                    l5004 48A8  
                                  l5100 3450                                    l1573 5792  
                                  l5030 4960                                    l5022 4930  
                                  l5014 48F0                                    l5006 48B8  
                                  l5110 349A                                    l5102 3460  
                                  l1662 58BC                                    l1487 55EC  
                                  l1639 1EA8                                    l5032 4970  
                                  l5024 4940                                    l5016 48F8  
                                  l5008 48BC                                    l5120 34E8  
                                  l5112 34A6                                    l5104 3468  
                                  l5040 32FA                                    l5200 2F44  
                                  l1568 57D2                                    l6000 4F56  
                                  l1656 54EC                                    l1497 4894  
                                  l5026 494A                                    l5018 4904  
                                  l5122 34FE                                    l5130 352E  
                                  l5114 34C4                                    l5106 3478  
                                  l5050 332E                                    l5042 32FC  
                                  l5210 2F9A                                    l5202 2F54  
                                  l6010 251E                                    l6002 4F76  
                                  l5028 4950                                    l5132 353C  
                                  l5124 3504                                    l5116 34C6  
                                  l5108 348C                                    l5060 3360  
                                  l5044 330C                                    l5052 3336  
                                  l5036 32E0                                    l5300 32CE  
                                  l5220 2FDA                                    l5204 2F64  
                                  l6020 257E                                    l6012 252C  
                                  l6004 4F88                                    l1668 594C  
                                  l1676 5682                                    l1684 587C  
                                  l1693 5920                                    l5142 35A6  
                                  l5150 35EE                                    l5134 3540  
                                  l5126 350E                                    l5118 34D6  
                                  l5070 3394                                    l5062 3362  
                                  l5054 3346                                    l5046 331C  
                                  l5038 32EC                                    l5310 4DEE  
                                  l5230 3024                                    l5222 2FE6  
                                  l5214 2FAE                                    l5206 2F6A  
                                  l6022 258E                                    l6014 2530  
                                  l6110 29CC                                    l6006 24EC  
                                  l1687 5884                                    l5160 3658  
                                  l5152 3608                                    l5144 35B2  
                                  l5136 354E                                    l5128 351C  
                                  l5080 33DA                                    l5064 3372  
                                  l5072 339C                                    l5056 334C  
                                  l5048 332C                                    l5320 4E8E  
                                  l5312 4E1C                                    l5240 3076  
                                  l5232 3030                                    l5224 2FFE  
                                  l5216 2FBA                                    l5208 2F8A  
                                  l5304 5684                                    l5400 50F0  
                                  l6104 298E                                    l6040 2666  
                                  l6024 25A0                                    l6032 25B8  
                                  l6016 2554                                    l6008 2510  
                                  l6210 4C24                                    l6202 4BD2  
                                  l5162 3666                                    l5154 361E  
                                  l5146 35C0                                    l5138 357C  
                                  l5090 3402                                    l5082 33DE  
                                  l5074 33AC                                    l5066 3382  
                                  l5058 3352                                    l5322 4E94  
                                  l5314 4E2C                                    l5330 46D2  
                                  l5250 30F4                                    l5242 3086  
                                  l5234 3040                                    l5226 300A  
                                  l5218 2FC4                                    l5306 5694  
                                  l5410 5146                                    l5402 5106  
                                  l6106 29BA                                    l6026 25A8  
                                  l6034 25F4                                    l6018 2562  
                                  l5500 3DBC                                    l6212 4C28  
                                  l6204 4BD2                                    l6220 5724  
                                  l5420 5214                                    l5164 366C  
                                  l5156 3638                                    l5148 35EA  
                                  l5076 33C2                                    l5068 3392  
                                  l5316 4E5A                                    l5340 473E  
                                  l5332 4700                                    l5260 316E  
                                  l5252 312A                                    l5244 30A2  
                                  l5236 304C                                    l5228 3016  
                                  l5180 2ED2                                    l4700 2A42  
                                  l5412 5156                                    l5404 510E  
                                  l6060 278C                                    l6052 2700  
                                  l6036 2610                                    l6044 269A  
                                  l6028 25B0                                    l6300 1A68  
                                  l5510 3E1A                                    l5502 3DC0  
                                  l6206 4BE4                                    l6222 5728  
                                  l6230 507C                                    l5430 57D4  
                                  l5422 5228                                    l5166 366E  
                                  l5158 3654                                    l5094 3416  
                                  l5078 33D2                                    l5086 33F2  
                                  l5318 4E6A                                    l5342 478E  
                                  l5334 4710                                    l5326 4694  
                                  l5270 31CE                                    l5262 3180  
                                  l5254 3138                                    l5246 30AE  
                                  l5238 305C                                    l5190 2F18  
                                  l5182 2EE2                                    l5174 2EB6  
                                  l5350 58D4                                    l4710 2A74  
                                  l4702 2A44                                    l5414 5160  
                                  l5406 511A                                    l6070 27F6  
                                  l6062 27B6                                    l6054 2720  
                                  l6046 26C4                                    l6038 2630  
                                  l6302 1A76                                    ?_pad 0011  
                                  l5512 3E78                                    l5520 3F38  
                                  l5504 3DD2                                    l6208 4C02  
                                  l6216 570E                                    l6232 5084  
                                  l5432 57EE                                    l5424 523C  
                                  l5416 51FA                                    l5096 3430  
                                  l5088 3402                                    l5344 4794  
                                  l5336 471E                                    l5328 46C2  
                                  l5280 323C                                    l5264 318E  
                                  l5256 3156                                    l5248 30CA  
                                  l5192 2F1E                                    l5184 2EF2  
                                  l5176 2EC2                                    l5352 58E4  
                                  l4800 2C42                                    l4720 2A9C  
                                  l4712 2A76                                    l4704 2A4C  
                                  l5440 481E                                    l5600 1076  
                                  l5408 5128                                    l6080 2854  
                                  l6064 27D6                                    l6056 2758  
                                  l6072 2822                                    l6048 26E0  
                                  l6160 5642                                    l6400 1ED6  
                                  l6320 1B12                                    l6312 1AC4  
                                  l6304 1A88                                    l5514 3E9A  
                                  l5506 3DF0                                    l5530 4FDA  
                                  l6218 5712                                    l6234 50B6  
                                  l6226 5066                                    l4650 4994  
                                  l5426 5240                                    l5418 5208  
                                  l5098 3440                                    l5338 4730  
                                  l5290 32A4                                    l5274 31F8  
                                  l5282 3240                                    l5266 3192  
                                  l5258 3160                                    l5194 2F24  
                                  l5186 2F02                                    l5178 2ED0  
                                  l4810 2C6C                                    l4802 2C4E  
                                  l4730 2AD6                                    l4722 2AAC  
                                  l4714 2A7C                                    l4706 2A5C  
                                  l5370 45F8                                    l5362 45B8  
                                  l5442 482A                                    l5434 4798  
                                  l5610 10BE                                    l5602 107A  
                                  l6090 28E2                                    l6074 2832  
                                  l6162 5656                                    l6170 584E  
                                  l6402 1EE6                                    l6330 1B52  
                                  l6322 1B16                                    l6314 1AD6  
                                  l6306 1AA4                                    l6410 1F2E  
                                  l5508 3E12                                    l4900 4C90  
                                  l5540 5062                                    l5532 4FEC  
                                  l6500 5178                                    l6236 50BA  
                                  l6228 506A                                    l4652 49A6  
                                  l5428 525E                                    l5292 32B4  
                                  l5284 325A                                    l5276 3204  
                                  l5268 31A0                                    l5196 2F32  
                                  l5188 2F08                                    l5348 58BE  
                                  l4820 2CDE                                    l4804 2C52  
                                  l4812 2C72                                    l4740 2B02  
                                  l4732 2AE8                                    l4724 2ABC  
                                  l4716 2A8A                                    l4708 2A62  
                                  l5380 4628                                    l5372 4606  
                                  l5364 45E2                                    l5356 458E  
                                  l5452 488C                                    l5436 47B8  
                                  l5460 367A                                    l5700 1452  
                                  l5620 110C                                    l5612 10CE  
                                  l5604 109E                                    l6076 2844  
                                  l6084 285C                                    l6180 548E  
                                  l6164 5678                                    l6412 1F40  
                                  l6404 1EEE                                    l6340 1BAC  
                                  l6332 1B62                                    l6324 1B2A  
                                  l6316 1AF8                                    l6308 1AB4  
                                  l7300 2060                                    l4670 4272  
                                  l4662 421C                                    l5518 3EF6  
                                  l4902 4CB6                                    l4910 4D36  
                                  l5534 4FF4                                    l6430 3A88  
                                  l6422 3A54                                    l6502 517C  
                                  l6238 50EC                                    l4654 49B0  
                                  l5550 38C0                                    l5294 32C2  
                                  l5286 326E                                    l5278 3212  
                                  l5198 2F34                                    l4830 2D38  
                                  l4814 2C98                                    l4822 2CEE  
                                  l4806 2C60                                    l4750 2B16  
                                  l4742 2B06                                    l4734 2AF6  
                                  l4726 2ABE                                    l4718 2A8C  
                                  l5390 4652                                    l5382 4632  
                                  l5366 45E4                                    l5358 45A4  
                                  l5438 47F6                                    l5446 4836  
                                  l5462 369A                                    l5710 14EA  
                                  l5702 145A                                    l5630 1146  
                                  l5622 111C                                    l5614 10DA  
                                  l5606 10A6                                    l6094 2916  
                                  l6078 284C                                    l6086 288E  
                                  l6190 54C0                                    l6166 567C  
                                  l6158 563E                                    l6174 584E  
                                  l6414 1F50                                    l6406 1EFE  
                                  l6350 1C12                                    l6342 1BB4  
                                  l6334 1B74                                    l6318 1B00  
                                  l7310 2116                                    l7302 2074  
                                  l4672 427A                                    l4680 4362  
                                  l4664 4220                                    l4920 5834  
                                  l4904 4CDE                                    l5536 5048  
                                  l5528 4FDA                                    l6440 3AA2  
                                  l6424 3A60                                    l6520 51DE  
                                  l6504 518E                                    l6600 4094  
                                  l4656 49CE                                    l4648 4982  
                                  l5560 3910                                    l5552 38CE  
                                  l5544 388C                                    l5296 32C4  
                                  l5288 3288                                    l4840 2D68  
                                  l4832 2D42                                    l4824 2D14  
                                  l4816 2CCC                                    l4808 2C62  
                                  l4760 2B2A                                    l4752 2B1A  
                                  l4744 2B0A                                    l4736 2AFA  
                                  l4728 2AC6                                    l5392 4662  
                                  l5368 45F4                                    l5448 4848  
                                  l5480 3842                                    l5472 3782  
                                  l5464 36F0                                    l5456 5428  
                                  l5800 197E                                    l5720 15CC  
                                  l5712 1542                                    l5704 1462  
                                  l5640 11A4                                    l5632 114E  
                                  l5624 1120                                    l5616 10E2  
                                  l5608 10AE                                    l6096 2940  
                                  l6088 28AE                                    l6280 559E  
                                  l6192 54E2                                    l6176 5870  
                                  l6416 1F58                                    l6408 1F0E  
                                  l6360 1C52                                    l6352 1C2E  
                                  l6336 1B88                                    l6328 1B40  
                                  l7312 2132                                    l7304 2088  
                                  l4674 42DC                                    l4666 4232  
                                  l4914 5814                                    l4906 4D08  
                                  l5538 5050                                    l6450 3ACA  
                                  l6442 3AB2                                    l6426 3A72  
                                  l6514 51B0                                    l6522 51F6  
                                  l6506 5196                                    l6602 409A  
                                  l4658 4A04                                    l5570 3940  
                                  l5562 391C                                    l5554 38EA  
                                  l5546 38A0                                    l5298 32CA  
                                  l4850 2D90                                    l4842 2D6C  
                                  l4834 2D50                                    l4826 2D24  
                                  l4818 2CCE                                    l4770 2B64  
                                  l4762 2B2E                                    l4754 2B1E  
                                  l4746 2B0E                                    l4738 2AFE  
                                  l4690 2A02                                    l5394 4672  
                                  l5378 461E                                    l5482 386A  
                                  l5474 37BE                                    l5466 3704  
                                  l5458 5446                                    l5490 5602  
                                  l5810 19F8                                    l5802 19AE  
                                  l5730 1662                                    l5722 15FE  
                                  l5714 1576                                    l5706 1472  
                                  l5642 11A8                                    l5626 1126  
                                  l5618 10E6                                    l4930 596A  
                                  l6098 2960                                    l6282 55AA  
                                  l6610 5568                                    l6194 54E6  
                                  l6186 548E                                    l6418 1F68  
                                  l6370 1CB8                                    l6354 1C32  
                                  l6346 1BC4                                    l6338 1B9A  
                                  l6362 1C5A                                    l6290 1A22  
                                  l7330 2298                                    l7314 214E  
                                  l7322 2202                                    l7306 2098  
                                  l4668 4250                                    l4916 5818  
                                  l6460 3B02                                    l6436 3A8C  
                                  l6428 3A84                                    l6516 51CC  
                                  l6508 51AC                                    l6604 409E  
                                  l5580 39DC                                    l5572 3982  
                                  l5564 3924                                    l5556 38FA  
                                  l5548 38B0                                    l4860 2DEA  
                                  l4852 2D9E                                    l4844 2D7C  
                                  l4836 2D52                                    l4780 2BB6  
                                  l4772 2B80                                    l4764 2B32  
                                  l4756 2B22                                    l4748 2B12  
                                  l4692 2A10                                    l5396 4682  
                                  l5388 4646                                    l5484 387A  
                                  l5468 3712                                    l5476 37F2  
                                  l5492 560E                                    l4924 5794  
                                  l5812 1A00                                    l5804 19BA  
                                  l5740 1736                                    l5732 1696  
                                  l5724 1612                                    l5708 1486  
                                  l5716 157A                                    l5660 1230  
                                  l5644 11AE                                    l5628 112E  
                                  l5636 116E                                    l4940 4EC6  
                                  l5820 4390                                    l6284 55C6  
                                  l6612 5570                                    l6188 5492  
                                  l6380 1D50                                    l6364 1C6C  
                                  l6348 1BF4                                    l6356 1C3C  
                                  l6292 1A26                                    l6620 5752  
                                  l7340 22FA                                    l7316 21B2  
                                  l7324 223E                                    l7308 20AA  
                                  l4678 4338                                    l5902 4BB6  
                                  l4918 582E                                    l5910 40B6  
                                  l6278 59AA                                    l6470 3B9A  
                                  l6462 3B10                                    l6438 3AA0  
                                  l6518 51CE                                    l5590 3A32  
                                  l5582 39F2                                    l5574 3988  
                                  l5566 3930                                    l5558 3900  
                                  l4870 2E54                                    l4862 2DF8  
                                  l4854 2DB4                                    l4838 2D60  
                                  l4846 2D7E                                    l4790 2C02  
                                  l4782 2BC4                                    l4774 2B90  
                                  l4758 2B26                                    l4766 2B36  
                                  l4694 2A12                                    l5478 382E  
                                  l5494 5612                                    l4926 57A4  
                                  l5806 19D2                                    l5750 175E  
                                  l5734 16EC                                    l5742 173A  
                                  l5726 1644                                    l5718 1598  
                                  l5670 1312                                    l5662 1234  
                                  l5646 11B6                                    l5638 1194  
                                  l5654 11D2                                    l4950 4F18  
                                  l4942 4ED2                                    l4934 4E98  
                                  l5830 43E4                                    l5822 4398  
                                  l6286 55E2                                    l6614 558C  
                                  l6606 554E                                    l6630 531A  
                                  l6198 5922                                    l6390 1DAE  
                                  l6382 1D72                                    l6374 1D0C  
                                  l6366 1C84                                    l6358 1C40  
                                  l6294 1A32                                    l7350 2374  
                                  l7342 230E                                    l7334 22C0  
                                  l7326 2264                                    l7318 21EA  
                                  l6640 5374                                    l5904 4BBE  
                                  l5912 40C8                                    l6480 3BF4  
                                  l6472 3BBE                                    l6464 3B34  
                                  l6456 3ACE                                    l6448 3AB6  
                                  l4960 4494                                    l5584 3A0C  
                                  l5576 398E                                    l5568 393A  
                                  l4880 2E8E                                    l4872 2E74  
                                  l4864 2E32                                    l4848 2D8C  
                                  l4784 2BC6                                    l4776 2BA6  
                                  l4768 2B3A                                    l4696 2A22  
                                  l4688 29F6                                    l5496 561E  
                                  l5488 55EE                                    l5808 19E2  
                                  l5760 1828                                    l5752 176A  
                                  l5744 174A                                    l5736 16F0  
                                  l5728 1652                                    l5672 1326  
                                  l5680 13A0                                    l5664 1268  
                                  l5656 11EA                                    l4928 594E  
                                  l4952 4F1A                                    l4944 4EE0  
                                  l4936 4EA8                                    l5840 4460  
                                  l5832 43EA                                    l5824 43A2  
                                  l5816 4366                                    l6608 5560  
                                  l6632 5332                                    l6624 52E6  
                                  l6392 1E3C                                    l6384 1D76  
                                  l6376 1D3C                                    l6368 1C94  
                                  l6296 1A3A                                    l7352 2384  
                                  l7344 232A                                    l7360 23A4  
                                  l7328 2284                                    l6642 5384  
                                  l6650 3C28                                    l5906 4BC0  
                                  l5930 4142                                    l5914 40CC  
                                  l6618 59C4                                    l6482 3BF6  
                                  l6466 3B44                                    l6474 3BCE  
                                  l6458 3AF2                                    l6490 5516  
                                  l4970 44CA                                    l4962 44A4  
                                  l4890 56CA                                    l5586 3A1C  
                                  l5578 39C2                                    l4882 2E94  
                                  l4874 2E78                                    l4858 2DDE  
                                  l4866 2E34                                    l4794 2C16  
                                  l4786 2BD0                                    l4778 2BB2  
                                  l4698 2A32                                    l5498 5622  
                                  l5770 185A                                    l5762 1838  
                                  l5754 17E2                                    l5746 1752  
                                  l5738 1724                                    l5690 1404  
                                  l5682 13DA                                    l5674 135A  
                                  l5666 12A4                                    l5594 1054  
                                  l5850 4AB2                                    l4954 4F24  
                                  l4946 4EEA                                    l4938 4EBE  
                                  l5826 43A8                                    l5834 441E  
                                  l5818 4374                                    l6626 52EA  
                                  l6394 1E6A                                    l6298 1A56  
                                  l7370 2458                                    l7362 23B6  
                                  l7354 2394                                    l7346 2346  
                                  l7338 22E8                                    l7290 1FC6  
                                  l6644 538E                                    l6636 5356  
                                  l6660 3CA0                                    l6652 3C6E  
                                  l5940 419C                                    l5932 4152  
                                  l5924 410C                                    l5916 40E8  
                                  l5908 40B2                                    l6476 3BD0  
                                  l6468 3B72                                    l6492 551E  
                                  l6484 54EE                                    l6580 3F66  
                                  l4980 4512                                    l4972 44DA  
                                  l4964 44A8                                    l4956 4482  
                                  l4892 56D6                                    l5588 3A22  
                                  l4884 2EA2                                    l4876 2E86  
                                  l4868 2E44                                    l4796 2C26  
                                  l4788 2BF2                                    l5780 188E  
                                  l5772 185E                                    l5764 183C  
                                  l5756 1802                                    l5748 1756  
                                  l5692 1408                                    l5684 13E8  
                                  l5676 1360                                    l5668 12D6  
                                  l5596 1058                                    l5852 4AD2  
                                  l5844 4A4C                                    l4948 4F08  
                                  l5836 4430                                    l5828 43DE  
                                  l7700 29AC                                    l6628 52F2  
                                  l5860 58F6                                    l6396 1E7A  
                                  l6388 1D9E                                    l7380 2496  
                                  l7372 245E                                    l7364 23C8  
                                  l7356 2398                                    l7348 2362  
                                  l7292 1FE2                                    l7284 1F8A  
                                  l6638 5366                                    l6670 3D28  
                                  l6662 3CAC                                    l6654 3C84  
                                  l6646 3C0A                                    l5870 4B30  
                                  l5950 41F6                                    l5942 41AE  
                                  l5934 4162                                    l5926 4138  
                                  l5918 4108                                    l6478 3BE0  
                                  l7702 4DC4                                    l6494 5534  
                                  l6486 54F2                                    l6590 400E  
                                  l6574 3F3C                                    l4990 4556  
                                  l4982 451C                                    l4974 44F0  
                                  l4966 44B6                                    l4958 4486  
                                  l4894 56E8                                    l4886 2EA4  
                                  l4878 2E8C                                    l4798 2C34  
                                  l5790 192A                                    l5782 1892  
                                  l5774 1864                                    l5766 1842  
                                  l5758 181A                                    l5694 141A  
                                  l5686 13F4                                    l5598 1068  
                                  l5854 4AE0                                    l5846 4A54  
                                  l5838 4446                                    l6398 1EC8  
                                  l7390 24E0                                    l7382 24AA  
                                  l7374 246E                                    l7366 23DA  
                                  l7358 239C                                    l7294 2002  
                                  l7286 1F8E                                    l6680 3D66  
                                  l6672 3D34                                    l6664 3CDE  
                                  l6648 3C1A                                    l7704 3F22  
                                  l5864 4B12                                    l5952 4208  
                                  l5944 41C0                                    l5936 4174  
                                  l5928 4140                                    l5960 5274  
                                  l6496 554A                                    l6488 5504  
                                  l6592 403A                                    l6584 3F9C  
                                  l4984 453A                                    l4976 44F8  
                                  l4992 455C                                    l4968 44C6  
                                  l4896 56EC                                    l5784 1898  
                                  l5768 184A                                    l5776 186A  
                                  l5792 192E                                    l5696 1428  
                                  l5688 13FC                                    l5848 4A78  
                                  l5856 5886                                    l7384 24BA  
                                  l7368 23F0                                    l7376 2474  
                                  l7296 2022                                    l7288 1FAA  
                                  l6682 3D8A                                    l6674 3D42  
                                  l6666 3CE0                                    l6658 3C98  
                                  l7706 434C                                    l5890 4B82  
                                  l5882 4B58                                    l5866 4B1A  
                                  l4898 4C8C                                    l5946 41D2  
                                  l5938 4196                                    l5962 5286  
                                  l5970 4D3E                                    l6586 3FF4  
                                  l6578 3F5A                                    l4994 456C  
                                  l4986 454A                                    l4978 4504  
                                  l5794 194C                                    l5786 18F0  
                                  l5778 187C                                    l5698 1440  
                                  l7378 2486                                    l7298 2046  
                                  l6684 3D9A                                    l6676 3D60  
                                  l6668 3CEC                                    l5884 4B60  
                                  l5876 4B34                                    l5868 4B2C  
                                  l5948 41E4                                    l5964 528E  
                                  l5980 4D90                                    l5972 4D42  
                                  l6596 4054                                    l4996 457C  
                                  l4988 454C                                    l5796 1968  
                                  l5788 1924                                    l7388 24C0  
                                  l6686 3DA8                                    l6678 3D62  
                                  l5886 4B62                                    l5966 52E2  
                                  l5958 5274                                    l5982 4DA8  
                                  l5974 4D48                                    l6598 4088  
                                  l5798 1970                                    l6688 3DAA  
                                  l5896 4B86                                    l5888 4B72  
                                  l5976 4D60                                    l5978 4D78  
                                  l5986 4DB0                                    l7690 26AE  
                                  l5988 4DEA                                    l7692 27A0  
                                  l5996 4F3C                                    l7694 2814  
                                  l5998 4F48                                    l7686 2218  
                                  l7696 2870                                    l7688 25CE  
                                  l7698 292A                                    STR_1 104E  
                                  STR_4 1024                                    STR_5 1032  
                                  STR_6 1011                                    STR_7 1011  
                                  STR_8 103D                                    STR_9 104A  
                                  _LATA 0F89                                    _LATB 0F8A  
                                  _LATC 0F8B                                    _LATD 0F8C  
                                  _LATE 0F8D                                    u4200 49A6  
                                  u5000 34FE                                    u4201 49A2  
                                  u5001 34FA                                    u4210 49CE  
                                  u5010 351C                                    u4211 49CA  
                                  u5011 3518                                    u4220 4A04  
                                  u5100 3666                                    u5020 353C  
                                  u4300 2A32                                    u4221 4A00  
                                  u5101 3662                                    u5021 3538  
                                  u4301 2A2E                                    u4230 4232  
                                  u5030 354E                                    u5110 2ED0  
                                  u4310 2A74                                    u4231 422E  
                                  u5031 354A                                    u5111 2ECC  
                                  u4311 2A70                                    u4240 4250  
                                  u5040 357C                                    u5200 316E  
                                  u5120 2EE2                                    u4400 2BA6  
                                  u4320 2A8A                                    u6000 139C  
                                  u4241 424C                                    u5041 3578  
                                  u5201 316A                                    u5121 2EDE  
                                  u4401 2BA2                                    u4321 2A86  
                                  u6001 1398                                    u4250 4272  
                                  u5050 3592                                    u5210 318E  
                                  u5130 2EF2                                    u4410 2BC4  
                                  u4330 2A9C                                    u6010 13D2  
                                  u4251 426E                                    u5051 358E  
                                  u5211 318A                                    u5131 2EEE  
                                  u4411 2BC0                                    u4331 2A98  
                                  u6011 13CE                                    u5060 35A6  
                                  u5300 4E1C                                    u5220 31A0  
                                  u5140 2F32                                    u4500 2D14  
                                  u4420 2BE4                                    u4340 2AAC  
                                  u6100 16EC                                    u6020 13E8  
                                  u5061 35A2                                    u5301 4E18  
                                  u5221 319C                                    u5141 2F2E  
                                  u4501 2D10                                    u4421 2BE0  
                                  u4341 2AA8                                    u6101 16E8  
                                  u6021 13E4                                    u4190 4994  
                                  u5070 35C0                                    u5310 4E5A  
                                  u5230 31CE                                    u5150 2F44  
                                  u4510 2D24                                    u4430 2BF2  
                                  u4350 2AE8                                    u6110 1736  
                                  u6030 141A                                    u4191 4990  
                                  u5071 35BC                                    u5311 4E56  
                                  u5231 31CA                                    u5151 2F40  
                                  u4511 2D20                                    u4431 2BEE  
                                  u4351 2AE4                                    u6111 1732  
                                  u6031 1416                                    u4264 429A  
                                  u5080 3608                                    u5320 4E8E  
                                  u5240 31E4                                    u5160 2F54  
                                  u4600 2DF8                                    u4520 2D50  
                                  u4440 2C02                                    u4360 2AF6  
                                  u4280 2A10                                    u5400 45D8  
                                  u6200 19E2                                    u6120 17E2  
                                  u6040 1428                                    u7000 1EFE  
                                  u4265 4296                                    u5081 3604  
                                  u5321 4E8A                                    u5241 31E0  
                                  u5161 2F50                                    u4601 2DF4  
                                  u4521 2D4C                                    u4441 2BFE  
                                  u4361 2AF2                                    u4281 2A0C  
                                  u6201 19DE                                    u6121 17DE  
                                  u6041 1424                                    u7001 1EFA  
                                  u4274 42FC                                    u5090 3638  
                                  u5330 46C2                                    u5250 31F8  
                                  u5170 2F8A                                    u4610 2E32  
                                  u4530 2D60                                    u4450 2C34  
                                  u4370 2B64                                    u4290 2A22  
                                  u5410 4606                                    u6130 181A  
                                  u6050 1452                                    u6210 4374  
                                  u7010 1F0E                                    u4275 42F8  
                                  u5091 3634                                    u5331 46BE  
                                  u5251 31F4                                    u5171 2F86  
                                  u4611 2E2E                                    u4531 2D5C  
                                  u4451 2C30                                    u4371 2B60  
                                  u4291 2A1E                                    u5411 4602  
                                  u6131 1816                                    u6051 144E  
                                  u6211 4370                                    u7011 1F0A  
                                  u4700 4D08                                    u7100 3BE0  
                                  u5500 525E                                    u5340 4700  
                                  u5260 3212                                    u5180 2F9A  
                                  u4620 2E44                                    u4540 2D7C  
                                  u4460 2C42                                    u4380 2B7C  
                                  u5420 461A                                    u6140 1828  
                                  u6060 1598                                    u6220 4430  
                                  u6300 591C                                    u7020 1F40  
                                  u4701 4D04                                    u7101 3BDC  
                                  u5501 525A                                    u5341 46FC  
                                  u5261 320E                                    u5181 2F96  
                                  u4621 2E40                                    u4541 2D78  
                                  u4461 2C3E                                    u4381 2B76  
                                  u5421 4616                                    u5405 45CE  
                                  u6141 1824                                    u6061 1594  
                                  u6221 442C                                    u7021 1F3C  
                                  u6310 4B2C                                    u4710 4D32  
                                  u7110 3C06                                    u5510 57EE  
                                  u5350 471E                                    u5270 325A  
                                  u5190 3114                                    u4630 2E54  
                                  u4550 2D8C                                    u4470 2C60  
                                  u4390 2B7E                                    u5430 4642  
                                  u6150 187C                                    u6070 15FE  
                                  u6230 4446                                    u7030 1F50  
                                  u6311 4B28                                    u4711 4D2E  
                                  u7111 3C02                                    u5511 57EA  
                                  u5351 471A                                    u5271 3256  
                                  u4631 2E50                                    u4551 2D88  
                                  u4471 2C5C                                    u5431 463E  
                                  u6151 1878                                    u6071 15FA  
                                  u6231 4442                                    u7031 1F4C  
                                  u6320 4B54                                    u6400 4138  
                                  u7040 3A72                                    u7120 5504  
                                  u4800 453A                                    u5360 473E  
                                  u5280 3288                                    u4640 2E74  
                                  u4560 2D9E                                    u4480 2C98  
                                  u5440 4662                                    u5520 47D8  
                                  u5600 36C2                                    u4720 57D2  
                                  u6160 194C                                    u6080 1644  
                                  u6240 4460                                    u6321 4B50  
                                  u6401 4134                                    u7041 3A6E  
                                  u7121 5500                                    u4801 4536  
                                  u5361 473A                                    u5281 3284  
                                  u4641 2E70                                    u4561 2D9A  
                                  u4481 2C94                                    u5441 465E  
                                  u4721 57CE                                    u6161 1948  
                                  u6081 1640                                    u6241 445C  
                                  u6330 4B72                                    u6410 4152  
                                  u7050 3A84                                    u7130 5516  
                                  u4810 456C                                    u5370 478E  
                                  u5290 32C2                                    u4650 2E86  
                                  u4570 2DB4                                    u4490 2CDE  
                                  u5450 4672                                    u5530 47F6  
                                  u5610 36F0                                    u6170 1968  
                                  u6090 1652                                    u6250 4A78  
                                  u4730 4EBE                                    u6331 4B6E  
                                  u6411 414E                                    u7051 3A80  
                                  u7131 5512                                    u4811 4568  
                                  u5371 478A                                    u5291 32BE  
                                  u5195 310A                                    u4651 2E82  
                                  u4571 2DB0                                    u4491 2CDA  
                                  u5451 466E                                    u5531 47F2  
                                  u5611 36EC                                    u6171 1964  
                                  u6091 164E                                    u6251 4A74  
                                  u4731 4EBA                                    u7300 53AE  
                                  u6340 4B82                                    u7060 3AB2  
                                  u6420 5286                                    u7140 518E  
                                  u7220 3F56                                    u4820 48A8  
                                  u4900 331C                                    u5380 58D4  
                                  u4660 2EA2                                    u4580 2DCA  
                                  u5540 481E                                    u5620 3712  
                                  u5700 563C                                    u6180 19CC  
                                  u6260 4B08                                    u4740 4EE0  
                                  u5460 5106                                    u6500 271C  
                                  u7301 53AA                                    u6341 4B7E  
                                  u7061 3AAE                                    u6421 5282  
                                  u7141 518A                                    u7221 3F52  
                                  u4821 48A4                                    u4901 3318  
                                  u5381 58D0                                    u4661 2E9E  
                                  u4581 2DC6                                    u5541 481A  
                                  u5525 47CE                                    u5621 370E  
                                  u5605 36B8                                    u5701 5638  
                                  u6181 19C6                                    u6261 4B04  
                                  u4741 4EDC                                    u5461 5102  
                                  u6501 2718                                    u7310 3C1A  
                                  u5710 3DD2                                    u6350 4BB2  
                                  u7070 3B02                                    u7150 51DE  
                                  u7230 3F98                                    u4830 48CA  
                                  u4670 570C                                    u4910 3360  
                                  u4590 2DDE                                    u5390 45A4  
                                  u5550 4848                                    u6190 19CE  
                                  u4750 4F08                                    u5470 5128  
                                  u6510 28AA                                    u6270 58B6  
                                  u7311 3C16                                    u5711 3DCE  
                                  u6351 4BAE                                    u7071 3AFE  
                                  u7151 51DA                                    u7231 3F94  
                                  u4831 48C6                                    u4671 5708  
                                  u4911 335C                                    u4591 2DDA  
                                  u5391 45A0                                    u5551 4844  
                                  u4751 4F04                                    u5471 5124  
                                  u6511 28A6                                    u6431 4F42  
                                  u6271 58B0                                    u7400 3DA8  
                                  u7320 3C28                                    u5720 3DF0  
                                  u6360 4BD0                                    u4680 4CB6  
                                  u6600 4C02                                    u7080 3B44  
                                  u7240 400A                                    u4760 4494  
                                  u4840 48F0                                    u5800 389E  
                                  u4920 3372                                    u5640 377E  
                                  u5480 5146                                    u6440 4F56  
                                  u6280 58B8                                    u6520 5656  
                                  u7401 3DA4                                    u7321 3C24  
                                  u5721 3DEC                                    u6361 4BCC  
                                  u4681 4CB2                                    u6601 4BFE  
                                  u7081 3B40                                    u7241 4006  
                                  u4761 4490                                    u4841 48EC  
                                  u4921 336E                                    u5641 377A  
                                  u5481 5142                                    u6441 4F52  
                                  u6521 5652                                    u7330 3C84  
                                  u5730 3E12                                    u4690 4CDE  
                                  u6370 40C8                                    u6610 4C24  
                                  u7090 3BCE                                    u7250 4050  
                                  u4770 44B6                                    u4850 4912  
                                  u5490 5208                                    u5810 38B0  
                                  u4930 3382                                    u5570 4882  
                                  u5650 37A2                                    u6450 4FB8  
                                  u6530 5678                                    u6290 591A  
                                  u7331 3C80                                    u5731 3E0E  
                                  u4691 4CDA                                    u6371 40C4  
                                  u6611 4C20                                    u7091 3BCA  
                                  u7251 404C                                    u4771 44B2  
                                  u4851 490E                                    u5491 5204  
                                  u5811 38AC                                    u4931 337E  
                                  u5571 487C                                    u5635 3726  
                                  u6451 4FB4                                    u6531 5674  
                                  u6291 5914                                    u7340 3CDA  
                                  u6380 40E8                                    u7260 40B0  
                                  u4780 44F0                                    u4860 4930  
                                  u5820 38CE                                    u4940 33C2  
                                  u5580 4884                                    u5660 37BE  
                                  u5636 3730                                    u5900 10BE  
                                  u6460 2510                                    u6540 5870  
                                  u8300 2298                                    u7341 3CD6  
                                  u6381 40E4                                    u7261 40AC  
                                  u4781 44EC                                    u4861 492C  
                                  u5821 38CA                                    u4941 33BE  
                                  u5565 485A                                    u5661 37BA  
                                  u5637 3740                                    u5901 10BA  
                                  u6461 250C                                    u6541 586C  
                                  u8301 2294                                    u7350 3D24  
                                  u6390 4108                                    u6630 5724  
                                  u4790 4512                                    u4870 4960  
                                  u5830 38FA                                    u4950 3402  
                                  u5670 3812                                    u5590 5446  
                                  u5910 10CE                                    u6470 2554  
                                  u6710 55E2                                    u7270 531A  
                                  u6550 54C0                                    u8310 22FA  
                                  u7351 3D20                                    u6391 4104  
                                  u6631 5720                                    u4791 450E  
                                  u4871 495C                                    u5831 38F6  
                                  u4951 33FE                                    u5655 3798  
                                  u5591 5442                                    u5911 10CA  
                                  u6471 2550                                    u6711 55DE  
                                  u7271 5316                                    u6551 54BC  
                                  u8311 22F6                                    u7360 3D42  
                                  u5760 3F0E                                    u5744 3E3A  
                                  u6624 4C76                                    u6640 507C  
                                  u5840 3910                                    u4960 3478  
                                  u4880 32FA                                    u5680 382E  
                                  u5920 110C                                    u6480 2610  
                                  u7280 5332                                    u6560 54E2  
                                  u6800 1B3C                                    u8320 23B6  
                                  u7361 3D3E                                    u5761 3F08  
                                  u5745 3E36                                    u6625 4C72  
                                  u6641 5078                                    u5841 390C  
                                  u4961 3474                                    u4881 32F6  
                                  u5681 382A                                    u5921 1108  
                                  u6481 260C                                    u7281 532E  
                                  u6561 54DE                                    u6801 1B38  
                                  u6721 1A2C                                    u8321 23B2  
                                  u7290 5374                                    u7370 3D52  
                                  u5770 3F10                                    u5754 3EBA  
                                  u6650 50AE                                    u5850 39DC  
                                  u4970 349A                                    u4890 330C  
                                  u5690 386A                                    u5930 111C  
                                  u6490 262C                                    u6570 5946  
                                  u6810 1B52                                    u6730 1A56  
                                  u8330 23C8                                    u7291 5370  
                                  u7371 3D4E                                    u5755 3EB6  
                                  u5851 39D8                                    u4971 3496  
                                  u4891 3308                                    u5691 3866  
                                  u5675 3808                                    u5931 1118  
                                  u6491 2628                                    u6571 5940  
                                  u6811 1B4E                                    u6731 1A52  
                                  u8331 23C4                                    u7380 3D60  
                                  u5780 4FEC                                    u6660 50DC  
                                  u5860 39F2                                    u4980 34C4  
                                  u5940 1194                                    u6580 5948  
                                  u6900 1C6C                                    u6820 1B74  
                                  u6740 1A68                                    u8340 23DA  
                                  u7381 3D5C                                    u5781 4FE8  
                                  u5861 39EE                                    u4981 34C0  
                                  u5941 1190                                    u6901 1C68  
                                  u6821 1B70                                    u6741 1A64  
                                  u8341 23D6                                    u7390 3D9A  
                                  u6590 4BE4                                    u6670 50EC  
                                  u5870 3A0C                                    u5790 389C  
                                  u4990 34E8                                    u5950 11A4  
                                  u6910 1C84                                    u6830 1B88  
                                  u6750 1A88                                    u8350 23EC  
                                  u8270 2098                                    u7391 3D96  
                                  u8407 417A                                    u6591 4BE0  
                                  u6671 50E8                                    u5871 3A08  
                                  u5791 3896                                    u4991 34E4  
                                  u5951 11A0                                    u6911 1C80  
                                  u6831 1B84                                    u6751 1A84  
                                  u8351 23E8                                    u8271 2094  
                                  u5880 3A1C                                    u5960 121C  
                                  u6920 1C94                                    u6840 1B9A  
                                  u6760 1AA0                                    u8360 2496  
                                  u8280 20AA                                    u8417 4198  
                                  u6657 50A4                                    u5881 3A18  
                                  u5961 1218                                    u6921 1C90  
                                  u6841 1B96                                    u6761 1A9C  
                                  u8361 2492                                    u8281 20A6  
                                  u5970 12A4                                    u5890 1076  
                                  u6930 1D3C                                    u6850 1BAC  
                                  u6770 1AD6                                    u8290 2264  
                                  u8427 504A                                    u6667 50D2  
                                  u5971 12A0                                    u5891 1072  
                                  u6931 1D38                                    u6851 1BA8  
                                  u6771 1AD2                                    u8291 2260  
                                  u5980 12D6                                    u6940 1D72  
                                  u6860 1BF4                                    u6780 1AF8  
                                  u5981 12D2                                    u6941 1D6E  
                                  u6861 1BF0                                    u6781 1AF4  
                                  u5990 1312                                    u6950 1D9A  
                                  u6870 1C12                                    u6790 1B12  
                                  u5991 130E                                    u6951 1D96  
                                  u6871 1C0E                                    u6791 1B0E  
                                  u6960 1DAE                                    u6880 1C2E  
                                  u6961 1DAA                                    u6881 1C2A  
                                  u8377 2052                                    u6970 1E6A  
                                  u6890 1C52                                    u8387 3B08  
                                  u6971 1E66                                    u6891 1C4E  
                                  u6980 1E7A                                    u8397 4158  
                                  u6981 1E76                                    u6990 1EA8  
                                  u6991 1EA4                    _lcd_4bit_send_string 5066  
                                  abs@a 000B                                    _dbuf 0164  
        gpio_pin_read_logic@_pin_config 0001                                    _flag 009D  
                                  _labs 5428                                    _main 1F8A  
                                  _dtoa 388C                                    _prec 007D  
                         strtoll@endptr 0049                                    pad@i 0018  
                                  pad@p 0015                                    fsr0h 0FEA  
                                  fsr1h 0FE2                                    indf0 0FEF  
                                  fsr2h 0FDA                                    fsr0l 0FE9  
                                  indf2 0FDF                                    fsr1l 0FE1  
                                  pad@w 001A                                    fsr2l 0FD9  
              ?_gpio_pin_direction_init 000B                                    _utoa 4366  
                         ___fpclassifyf 4798                                    prodh 0FF4  
                                  prodl 0FF3                                    start 0000  
                       ___fldiv@new_exp 0020                            ___param_bank 0000  
                 _lcd_4bit_send_command 4FDA                                   ??_abs 000D  
                  _gpio_pin_write_logic 421C                                   ??_pad 0017  
                         ___fltol@sign1 0009                         __end_of___aldiv 458E  
                                 ?_labs 0001                         __end_of___almod 4982  
                       __end_of___fladd 2EB6                                   ?_main 0001  
                                 ?_dtoa 001C                         __end_of___fldiv 367A  
                       __end_of___flneg 58F6                                   STR_10 1042  
                                 STR_13 1046                         __end_of___flmul 32E0  
                       __end_of___flsub 56CA                         __end_of___fltol 4694  
        lcd_4bit_initialize@_lcd_config 0014                         __end_of___lldiv 4F3C  
                                 ?_utoa 001C                         __end_of___llmod 5178  
                          led_off@F3058 00A5                            vfpfcnvrt@fmt 0073  
                                 _PORTA 0F80                                   _PORTB 0F81  
                                 _PORTC 0F82                                   _PORTD 0F83  
                                 _PORTE 0F84                                   _TRISA 0F92  
                                 _TRISB 0F93                                   _TRISC 0F94  
                                 _TRISD 0F95                                   _TRISE 0F96  
             lcd_4bit_set_cursor@column 0016                     ___lmul@multiplicand 0005  
                 ?_lcd_4bit_send_enable 000B                __end_of_keypad_get_value 3C08  
                                 _lcd_2 00F5                                   _flags 009C  
                   read_prec_or_width@c 000D                                   _errno 0098  
                   read_prec_or_width@n 000E                                   _fputc 4982  
                       __end_of_isalpha 58BE                                   _fputs 56CA  
                       __end_of_isdigit 594E                         __end_of_isalnum 54EE  
                                 labs@a 0001                                   _smile 01D2  
                                 pad@fp 0011                                   _width 009A  
                                 _putch 59CA                                   dtoa@d 001E  
        lcd_4bit_set_cursor@_lcd_config 0013                                   dtoa@i 0028  
                                 dtoa@p 0024                                   dtoa@s 002A  
                                 dtoa@w 0026                   ?_lcd_4bit_send_string 0013  
                       __end_of_islower 5922                         __end_of_isspace 5684  
                                 tablat 0FF5           __end_of_keypad_initialization 4BD2  
                                 utoa@d 001E                                   utoa@i 0026  
                                 utoa@p 0024                                   utoa@w 0022  
               lcd_4bit_send_enable@ret 000D                                   status 0FD8  
                       __end_of_sprintf 559E                          ?___fpclassifyf 0001  
                       __end_of_toupper 5886                         __end_of_strtoll 5794  
                       ??_lcd_send_4bit 000E                         __initialization 53C0  
                          __end_of_labs 548E                            __end_of_main 24EC  
                          __end_of_dtoa 3A54                   ?_gpio_pin_write_logic 0001  
                          __end_of_utoa 4482                           _lat_registers 00E0  
     __end_of_lcd_4bit_send_custom_char 51FA                                  ??_labs 0005  
                                ??_main 00D8                                  ??_dtoa 0022  
                                ??_utoa 0022                           __activetblptr 0002  
            __end_of_read_prec_or_width 4B12          lcd_4bit_send_custom_char@l_cnt 0028  
                                ?_fputc 0001                        ___llmod@dividend 0001  
                                ?_fputs 000A                 led_initialization@F3048 00A7  
                                ?_putch 0001                        __end_of___xxtofl 3DBC  
      __end_of_lcd_4bit_send_string_pos 554E                  ?_lcd_4bit_send_command 000F  
                          vfprintf@cfmt 007B             keypad_get_value@row_counter 0013  
                          ___strtoxll@a 003C                            ___strtoxll@c 0046  
                          ___strtoxll@s 0019                                  ___flge 4694  
                                ___fleq 4DEE                                  ___lmul 5356  
                                ___omul 4F3C                               ??___aldiv 0009  
                             ??___almod 0009                               ??___fladd 0009  
                                ___wmul 594E                               ??___fldiv 0017  
                             ??___flneg 0005                               ??___flmul 0009  
                             ??___flsub 0022                               ??___fltol 0005  
                             ??___lldiv 0009                               ??___llmod 0009  
                                _efgtoa 1054                                  _floorf 367A  
                                _memcpy 55EE                    read_prec_or_width@ap 0009  
                                _keypad 01DA                                  _memset 3F3C  
                                clear_0 5406                                  clear_1 5412  
                                isa$std 0001                                  _result 008C  
                                pad@buf 0013                        lcd_send_4bit@ret 000E  
                                dtoa@fp 001C                                  _strcmp 52E6  
                                _strcpy 5794                                  _string 0100  
                                fputc@c 0001                                  fputs@c 000E  
                                fputs@i 000F                  ??_lcd_4bit_send_enable 000D  
                                fputs@s 000A                               ??_isalpha 0003  
                             ??_isdigit 0003                               ??_isalnum 0009  
                       ___fpclassifyf@e 0009                         ___fpclassifyf@u 000B  
                       ___fpclassifyf@x 0001                               ??_islower 0003  
                          __mediumconst 0000                               ??_isspace 0003  
lcd_4bit_send_char_data_pos@_lcd_config 001A                                  tblptrh 0FF7  
                                tblptrl 0FF6                                  tblptru 0FF8  
                                putch@c 0001                        __end_of_vfprintf 55EE  
                                utoa@fp 001C                  ??_lcd_4bit_send_string 0017  
                             ??_sprintf 007D                        ___strtoxll@limit 0032  
                             ??_toupper 0007                               ??_strtoll 004F  
                            ___flge@ff1 001A                              ___flge@ff2 001E  
                       ??___fpclassifyf 0005                            ___xxtofl@arg 000B  
                          ___xxtofl@exp 000A                            ___xxtofl@val 0001  
                            ___fleq@ff1 0001                              ___fleq@ff2 0005  
                            __accesstop 0080                 __end_of__initialization 541E  
                            ___flneg@f1 0001                           ___rparam_used 0001  
                            ___fltol@f1 0001     lcd_4bit_send_string_pos@_lcd_config 001A  
               _lcd_4bit_send_char_data 5274                  ??_gpio_pin_write_logic 0004  
                        __pcstackCOMRAM 0001                        _application_init 59C4  
                          __pidataBANK0 5974                            __pidataBANK1 598F  
                         __end_of_fputc 4A4C                           __end_of_fputs 570E  
                         __end_of_putch 59CC                lcd_4bit_send_command@cmd 0011  
              lcd_4bit_send_command@ret 0012           lcd_4bit_send_custom_char@_chr 0024  
         keypad_get_value@keypad_config 000B                              ___strtoxll 1A22  
          ?_lcd_4bit_send_char_data_pos 001A                                 ??_fputc 0005  
                               ??_fputs 000E                 lcd_4bit_send_string@ret 0017  
               lcd_4bit_send_string@str 0015                                 ??_putch 0001  
                            __pbssBANK0 0080                              __pbssBANK1 0100  
    gpio_pin_direction_init@_pin_config 000B                                 ?___flge 001A  
                               ?___fleq 0001                                 ?___lmul 0001  
                               ?___omul 0001                                 ?___wmul 0001  
       lcd_4bit_send_custom_char@mempos 0026                                 ?_efgtoa 003C  
                               ?_floorf 0028                                 ?_memcpy 0001  
                       led_toggle@F3063 00A4                                 ?_memset 0001  
                   ___omul@multiplicand 0009                          ___lmul@product 0009  
          lcd_4bit_send_custom_char@col 0023            lcd_4bit_send_custom_char@ret 0027  
          lcd_4bit_send_custom_char@row 0022                                 ?_strcmp 0001  
                               ?_strcpy 0001                               ?___xxtofl 0001  
             ?_lcd_4bit_send_string_pos 001A                       ?_keypad_get_value 000B  
                    ??_keypad_get_value 000F                          _tris_registers 00EA  
             ??_lcd_4bit_send_char_data 0012                                 __Hparam 0000  
                               __Lparam 0000                           ___strtoxll@cp 0044  
                               ___aldiv 4482                                 ___almod 4896  
                               ___fladd 29F6                                 ___fldiv 32E0  
                   _gpio_pin_read_logic 4BD2                                 ___flneg 58BE  
                               ___flmul 2EB6                                 ___flsub 5684  
                               ___fltol 458E                                 ___lldiv 4E98  
                               ___llmod 50F0                               ?_vfprintf 00BC  
                          __psmallconst 1000                                 __pcinit 53C0  
                               __ramtop 1000                           relay_on@F3052 00A2  
                               __ptext0 1F8A                                 __ptext1 5752  
                               __ptext2 1A22                                 __ptext3 584E  
                               __ptext4 58F6                                 __ptext5 563E  
                               __ptext6 5922                                 __ptext7 548E  
                               __ptext8 5886                                 __ptext9 4F3C  
                               _counter 009F      lcd_4bit_initialize@l_data_pins_cnt 0019  
                               _isalpha 5886                                 _isdigit 5922  
                 read_prec_or_width@fmt 0007                                 _isalnum 548E  
                            ??___xxtofl 0005                        ___aldiv@dividend 0001  
                       _keypad_elements 1001                                 _islower 58F6  
                               _isspace 563E                                 efgtoa@c 0042  
                               efgtoa@d 0050                                 efgtoa@e 0054  
                               efgtoa@f 003E                                 efgtoa@g 0069  
                               efgtoa@h 005E                                 efgtoa@i 005C  
                               efgtoa@l 0062                                 efgtoa@m 0052  
                               efgtoa@n 0067                                 efgtoa@p 0047  
                               efgtoa@t 0049                                 efgtoa@u 006D  
                               efgtoa@w 0056                             ?___strtoxll 0019  
                               _number1 0094                                 _number2 0090  
                  ?_gpio_pin_read_logic 0001                                 _sprintf 554E  
       lcd_4bit_send_enable@_lcd_config 000B                                 _toupper 584E  
                  end_of_initialization 541E                                 _strtoll 5752  
                               floorf@e 0036                                 floorf@m 0032  
                               floorf@u 0038                                 floorf@x 0028  
                        ___omul@product 0011                                 memcpy@d 0007  
                               memcpy@n 0005                                 memcpy@s 0009  
                               fputc@fp 0003                                 memset@c 0003  
                               memset@k 0009                                 memset@n 0005  
                               memset@s 000B                           __Lmediumconst 0000  
                               fputs@fp 000C                      _read_prec_or_width 4A4C  
               ??_lcd_4bit_send_command 0012                   _keypad_initialization 4B12  
                       ___lldiv@divisor 0005                         ___lldiv@counter 000D  
                     __end_of_vfpfcnvrt 29F6                              efgtoa@mode 004E  
                            efgtoa@sign 0066                        ___aldiv@quotient 000B  
                 __end_of_lcd_send_4bit 4D3E                                 postdec1 0FE5  
                               postdec2 0FDD                     ?_read_prec_or_width 0007  
                               postinc0 0FEE                                 postinc1 0FE6  
                               postinc2 0FDE                        vfpfcnvrt@convarg 00B5  
                            ??_vfprintf 007B                       ___strtoxll@endptr 001B  
                            _number_str 00A8                                 strcmp@l 0001  
                               strcmp@r 0003                                 strcpy@d 0007  
                        _ecu_layer_init 59AA                                 strcpy@s 0005  
                   _lcd_4bit_initialize 40B2                              _result_str 01B4  
                     ___strtoxll@prev_a 0029         __end_of_lcd_4bit_send_char_data 52E6  
            ?_lcd_4bit_send_custom_char 0020                keypad_initialization@flg 0018  
              keypad_initialization@cnt 0019                             ___fladd@grs 0010  
          keypad_get_value@column_value 0012              lcd_4bit_send_char_data@ret 0012  
                         ___xxtofl@sign 0009                   ??_gpio_pin_read_logic 0005  
                  ??_read_prec_or_width 000B                             ___fldiv@grs 0022  
                           ___fldiv@rem 001B                __end_of_application_init 59CA  
       lcd_4bit_send_char_data_pos@data 001E                    ?_lcd_4bit_initialize 0014  
                           ___flmul@grs 000E                     _lcd_4bit_set_cursor 4D3E  
           lcd_4bit_send_string_pos@col 001D             lcd_4bit_send_string_pos@ret 0020  
           lcd_4bit_send_string_pos@row 001C             lcd_4bit_send_string_pos@str 001E  
                __end_of_ecu_layer_init 59C4                   keypad_get_value@value 000D  
                        __end_of___flge 4798                          __end_of___fleq 4E98  
               _gpio_pin_direction_init 3DBC                          __end_of___lmul 53C0  
                        __end_of___omul 4FDA                             vfpfcnvrt@ap 0075  
                           vfpfcnvrt@cp 00BA                             vfpfcnvrt@fp 0071  
                        __end_of___wmul 5974                 __end_of_keypad_elements 1011  
                        __end_of_efgtoa 1A22                          __end_of_floorf 388C  
                        __end_of_memcpy 563E                              floorf@F526 0080  
                        __end_of_memset 40B2          keypad_get_value@column_counter 0011  
                        __end_of_strcmp 5356                          __end_of_strcpy 57D4  
                   start_initialization 53C0                    ?_lcd_4bit_set_cursor 0013  
                           __end_of_abs 5814                             __end_of_pad 5274  
                 ??_lcd_4bit_initialize 0016                lcd_send_4bit@_lcd_config 000B  
                 __end_of___fpclassifyf 4896                       ___omul@multiplier 0001  
    keypad_initialization@keypad_config 0014                         ___llmod@divisor 0005  
                ?_keypad_initialization 0014                         ___llmod@counter 0009  
                           vfprintf@fmt 00BE                                ??___flge 0022  
                              ??___fleq 0009                                ??___lmul 0009  
                              ??___omul 0011                                ??___wmul 0005  
                       ?_ecu_layer_init 0001                                ??_efgtoa 0043  
                           __pdataBANK0 00E0                             __pdataBANK1 01C8  
                              ??_floorf 002C                                ??_memcpy 0007  
                              ??_memset 0007                              memset@dest 0001  
                       ___strtoxll@base 001D                                ??_strcmp 0005  
                              ??_strcpy 0005                         ___strtoxll@sign 003A  
                       ___strtoxll@skip 003B                               ___fladd@a 0005  
                             ___fladd@b 0001                               ___fldiv@a 0013  
                             ___fldiv@b 000F                               ___flmul@a 0005  
                             ___flmul@b 0001                             __pbssCOMRAM 007D  
                 ??_lcd_4bit_set_cursor 0017                               ___flsub@a 001E  
                             ___flsub@b 001A                           __pcstackBANK0 00B5  
  lcd_4bit_send_custom_char@_lcd_config 0020                            _isalnum$1682 000D  
                           _efgtoa$1489 004B                               _dtoa$1458 0022  
             ??_gpio_pin_direction_init 000D                                ?___aldiv 0001  
                              ?___almod 0001                                ?___fladd 0001  
       gpio_pin_write_logic@_pin_config 0001                                ?___fldiv 000F  
                              ?___flneg 0001                                ?___flmul 0001  
                              ?___flsub 001A                                ?___fltol 0001  
                              ?___lldiv 0001                                ?___llmod 0001  
                          _keypad_value 007F                        ___almod@dividend 0001  
                             _float_res 0088                             __smallconst 1000  
                              ?_isalpha 0001                                ?_isdigit 0001  
                              ?_isalnum 0007                                ?_islower 0001  
                              ?_isspace 0001                            ??___strtoxll 0021  
                              ?_sprintf 00C2                                ?_toupper 0005  
                              ?_strtoll 0047                         ___aldiv@divisor 0005  
                       ___aldiv@counter 0009                          ___wmul@product 0005  
         __end_of_lcd_4bit_send_command 5066                      __end_of___strtoxll 1F8A  
                             _vfpfcnvrt 24EC      lcd_4bit_send_char_data@_lcd_config 000F  
              _lcd_4bit_send_string_pos 54EE                       ___wmul@multiplier 0001  
        lcd_4bit_send_char_data_pos@col 001D          lcd_4bit_send_char_data_pos@ret 001F  
        lcd_4bit_send_char_data_pos@row 001C             ??_lcd_4bit_send_custom_char 0027  
                           strtoll@base 004B         __end_of_gpio_pin_direction_init 3F3C  
   __end_of_lcd_4bit_send_char_data_pos 5752             _lcd_4bit_send_char_data_pos 570E  
                          _isspace$1710 0005                              vfpfcnvrt@c 00B9  
               gpio_pin_write_logic@ret 000A                       ?_application_init 0001  
                     ___lmul@multiplier 0001                ?_lcd_4bit_send_char_data 000F  
                             copy_data0 53D4                               copy_data1 53F4  
             relay_initialization@F3047 00A3                      ??_application_init 001A  
       lcd_4bit_send_string@_lcd_config 0013           ??_lcd_4bit_send_char_data_pos 001F  
                              __Hrparam 0000                               memcpy@tmp 000B  
                            vfprintf@ap 00C0                                __Lrparam 0000  
                            vfprintf@fp 00BC                  lcd_4bit_set_cursor@ret 0019  
                            ?_vfpfcnvrt 0071                  lcd_4bit_set_cursor@row 0015  
           __end_of_gpio_pin_read_logic 4C8C                      ___fpclassifyf@F465 0084  
      lcd_4bit_send_command@_lcd_config 000F                              sprintf@fmt 00C4  
                              ___xxtofl 3C08                    ___strtoxll@conv_done 0031  
                              __ptext10 52E6                                __ptext11 554E  
                              __ptext20 5794                                __ptext12 559E  
                              __ptext21 55EE                                __ptext13 24EC  
                              __ptext30 4694                                __ptext22 5428  
                              __ptext14 4366                                __ptext31 4DEE  
                              __ptext23 367A                                __ptext15 50F0  
                              __ptext40 4482                                __ptext32 32E0  
                              __ptext24 4798                                __ptext16 4E98  
                              __ptext41 3F3C                                __ptext33 388C  
                              __ptext25 458E                                __ptext17 4A4C  
                              __ptext50 59C4                                __ptext42 54EE  
                              __ptext34 51FA                                __ptext26 5684  
                              __ptext18 594E                                __ptext51 59AA  
                              __ptext43 5066                                __ptext35 56CA  
                              __ptext27 29F6                                __ptext19 1054  
                              __ptext60 5356                                __ptext52 40B2  
                              __ptext44 5178                                __ptext36 4982  
                              __ptext28 58BE                                __ptext53 4FDA  
                              __ptext45 570E                                __ptext37 59CA  
                              __ptext29 2EB6                                __ptext54 4C8C  
                              __ptext46 4D3E                                __ptext38 57D4  
                              __ptext55 5814                                __ptext47 5274  
                              __ptext39 4896                                __ptext56 4B12  
                              __ptext48 3A54                                __ptext57 3DBC  
                              __ptext49 4BD2                                __ptext58 421C  
                              __ptext59 3C08                         ___almod@divisor 0005  
               ??_keypad_initialization 0016                         ___almod@counter 0009  
                            strcpy@dest 0001                                _counter2 009E  
                  ___strtoxll@is_signed 001F               _lcd_4bit_send_custom_char 5178  
                      ??_ecu_layer_init 001A                          relay_off@F3057 00A1  
          __end_of_lcd_4bit_send_enable 584E                        _keypad_get_value 3A54  
                              _operator 00F4                                efgtoa@fp 003C  
                              efgtoa@ne 0045                                efgtoa@pp 004D  
                              efgtoa@ou 0058                                isa$xinst 0000  
          __end_of_lcd_4bit_send_string 50F0                                _vfprintf 559E  
             gpio_pin_read_logic@_logic 0003                  lcd_send_4bit@_data_cmd 000D  
           __end_of_lcd_4bit_initialize 421C                                memcpy@d1 0001  
                              memcpy@s1 0003                                isalpha@c 0001  
                              isdigit@c 0001                                isalnum@c 0007  
          __end_of_gpio_pin_write_logic 4366                               sprintf@ap 00CA  
                              islower@c 0001                                isspace@c 0001  
                      ___lldiv@dividend 0001                               strcpy@src 0003  
                           efgtoa@nmode 004F                           _lcd_send_4bit 4C8C  
                           ??_vfpfcnvrt 0077             __end_of_lcd_4bit_set_cursor 4DEE  
            gpio_pin_write_logic@_logic 0003                                sprintf@f 00CC  
                              sprintf@s 00C2                        ___lldiv@quotient 0009  
                        _port_registers 01C8                                toupper@c 0005  
                          ___aldiv@sign 000A                                strtoll@s 0047  
            gpio_pin_direction_init@ret 0013                           ___fladd@signs 000D  
                          ___almod@sign 000A                            ___fladd@aexp 000E  
                          ___fladd@bexp 000F             lcd_4bit_send_char_data@data 0011  
            ??_lcd_4bit_send_string_pos 0020                  lcd_4bit_initialize@ret 0018  
